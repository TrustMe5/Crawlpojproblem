A+B Problem,http://poj.org/problem?id=1000, 1000MS, 10000K,Calculate a+b ,"Two integer a,b (0OutputOutput a+bSample Input1 2Sample Output3HintQ: Where are the input and the output?A: Your program shall always read input from stdin (Standard Input) and write output to stdout (Standard Output). For example, you can use 'scanf' in C or 'cin' in C++ to read from stdin, and use 'printf' in C or 'cout' in C++ to write to stdout.You shall not output any extra data to standard output other than that required by the problem, otherwise you will get a ""Wrong Answer"".User programs are not allowed to open and read from/write to files. You will get a ""Runtime Error"" or a ""Wrong Answer""if you try to do so. Here is a sample solution to problem 1000 using C++/G++:#include <iostream>using namespace std;int main(){    int a,b;    cin >> a >> b;    cout     return 0;}It's important that the return type of main() must be int when you use G++/GCC,or you may get compile error.Here is a sample solution to problem 1000 using C/GCC:#include <stdio.h>int main(){    int a,b;    scanf(""%d %d"",&a, &b);    printf(""%d\n"",a+b);    return 0;}Here is a sample solution to problem 1000 using Pascal:program p1000(Input,Output);var  a,b:Integer;begin   Readln(a,b);   Writeln(a+b);end.Here is a sample solution to problem 1000 using Java:Now java compiler is jdk 1.5, next is program for 1000import java.io.*;import java.util.*;public class Main{            public static void main(String args[]) throws Exception            {                    Scanner cin=new Scanner(System.in);                    int a=cin.nextInt(),b=cin.nextInt();                    System.out.println(a+b);            }}Old program for jdk 1.4import java.io.*;import java.util.*;public class Main{    public static void main (String args[]) throws Exception    {        BufferedReader stdin =             new BufferedReader(                new InputStreamReader(System.in));        String line = stdin.readLine();        StringTokenizer st = new StringTokenizer(line);        int a = Integer.parseInt(st.nextToken());        int b = Integer.parseInt(st.nextToken());        System.out.println(a+b);    }}Here is a sample solution to problem 1000 using Fortran:	PROGRAM P1000		IMPLICIT NONE		INTEGER :: A, B		READ(*,*) A, B		WRITE(*, ""(I0)"") A + B	END PROGRAM P1000SourcePOJ",Output a+b,1 2,3
2D-Nim,http://poj.org/problem?id=1021, 1000MS, 10000K,"The 2D-Nim board game is played on a grid, with pieces on the grid points. On each move, a player may remove any positive number of contiguous pieces in any row or column. The player who removes the last piece wins. For example, consider the left grid in the following figure.The player on move may remove (A), (B), (A, B), (A, B, C), or (B,F), etc., but may not remove (A, C), (D, E), (H, I) or (B, G).For purposes of writing 2D-Nim-playing software, a certain programmer wants to be able to tell whether or not a certain position has ever been analyzed previously. Because of the rules of 2D-Nim, it should be clear that the two boards above are essentially equivalent. That is, if there is a winning strategy for the left board, the same one must apply to the right board. The fact that the contiguous groups of pieces appear in different places and orientations is clearly irrelevant. All that matters is that the same clusters of pieces (a cluster being a set of contiguous pieces that can be reached from each other by a sequence of one-square vertical or horizontal moves) appear in each. For example, the cluster of pieces (A, B, C, F, G) appears on both boards, but it has been reflected (swapping left and right), rotated, and moved. Your task is to determine whether two given board states are equivalent in this sense or not.","The first line of the input file contains a single integer t (1 ≤ t ≤ 10), the number of test cases, followed by the input data for each test case. The first line of each test case consists of three integers W, H, and n (1 ≤ W, H ≤ 100). W is the width, and H is the height of the grid in terms of the number of grid points. n is the number of pieces on each board. The second line of each test case contains a sequence of n pairs of integers xi , yi, giving the coordinates of the pieces on the first board (0 ≤ xi OutputYour program should produce a single line for each test case containing a word YES or NO indicating whether the two boards are equivalent or not.Sample Input2
8 5 11
0 0 1 0 2 0 5 0 7 0 1 1 2 1 5 1 3 3 5 2 4 4
0 4 0 3 0 2 1 1 1 4 1 3 3 3 5 2 6 2 7 2 7 4
8 5 11
0 0 1 0 2 0 5 0 7 0 1 1 2 1 5 1 3 3 6 1 4 4
0 4 0 3 0 2 1 1 1 4 1 3 3 3 5 2 6 2 7 2 7 4Sample OutputYES
NOSourceTehran 2002, First Iran Nationwide Internet Programming Contest",Your program should produce a single line for each test case containing a word YES or NO indicating whether the two boards are equivalent or not.,"2
8 5 11
0 0 1 0 2 0 5 0 7 0 1 1 2 1 5 1 3 3 5 2 4 4
0 4 0 3 0 2 1 1 1 4 1 3 3 3 5 2 6 2 7 2 7 4
8 5 11
0 0 1 0 2 0 5 0 7 0 1 1 2 1 5 1 3 3 6 1 4 4
0 4 0 3 0 2 1 1 1 4 1 3 3 3 5 2 6 2 7 2 7 4","YES
NO"
Anniversary Cake,http://poj.org/problem?id=1020, 1000MS, 10000K,"Nahid Khaleh decides to invite the kids of the ""Shahr-e Ghashang"" to her wedding anniversary. She wants to prepare a square-shaped chocolate cake with known size. She asks each invited person to determine the size of the piece of cake that he/she wants (which should also be square-shaped). She knows that Mr. Kavoosi would not bear any wasting of the cake. She wants to know whether she can make a square cake with that size that serves everybody exactly with the requested size, and without any waste.","The first line of the input file contains a single integer t (1 ≤ t ≤ 10), the number of test cases, followed by input data for each test case. Each test case consist of a single line containing an integer s, the side of the cake, followed by an integer n (1 ≤ n ≤ 16), the number of cake pieces, followed by n integers (in the range 1..10) specifying the side of each piece.",There should be one output line per test case containing one of the words KHOOOOB! or HUTUTU! depending on whether the cake can be cut into pieces of specified size without any waste or not.,"2
4 8 1 1 1 1 1 3 1 1
5 6 3 3 2 1 1 1","KHOOOOB!
HUTUTU!"
Number Sequence,http://poj.org/problem?id=1019, 1000MS, 10000K,"A single positive integer i is given. Write a program to find the digit located in the position i in the sequence of number groups S1S2...Sk. Each group Sk consists of a sequence of positive integer numbers ranging from 1 to k, written one after another.For example, the first 80 digits of the sequence are as follows:11212312341234512345612345671234567812345678912345678910123456789101112345678910","The first line of the input file contains a single integer t (1 ≤ t ≤ 10), the number of test cases, followed by one line for each test case. The line for a test case contains the single integer i (1 ≤ i ≤ 2147483647)",There should be one output line per test case containing the digit located in the position i.,"2
8
3","2
2"
Communication System,http://poj.org/problem?id=1018, 1000MS, 10000K,"We have received an order from Pizoor Communications Inc. for a special communication system. The system consists of several devices. For each device, we are free to choose from several manufacturers. Same devices from two manufacturers differ in their maximum bandwidths and prices. By overall bandwidth (B) we mean the minimum of the bandwidths of the chosen devices in the communication system and the total price (P) is the sum of the prices of all chosen devices. Our goal is to choose a manufacturer for each device to maximize B/P.","The first line of the input file contains a single integer t (1 ≤ t ≤ 10), the number of test cases, followed by the input data for each test case. Each test case starts with a line containing a single integer n (1 ≤ n ≤ 100), the number of devices in the communication system, followed by n lines in the following format: the i-th line (1 ≤ i ≤ n) starts with mi (1 ≤ mi ≤ 100), the number of manufacturers for the i-th device, followed by mi pairs of positive integers in the same line, each indicating the bandwidth and the price of the device respectively, corresponding to a manufacturer.","Your program should produce a single line for each test case containing a single number which is the maximum possible B/P for the test case. Round the numbers in the output to 3 digits after decimal point.","1 3
3 100 25 150 35 80 25
2 120 80 155 40
2 100 100 120 110",0.649
Packets,http://poj.org/problem?id=1017, 1000MS, 10000K,"A factory produces products packed in square packets of the same height h and of the sizes 1*1, 2*2, 3*3, 4*4, 5*5, 6*6. These products are always delivered to customers in the square parcels of the same height h as the products have and of the size 6*6. Because of the expenses it is the interest of the factory as well as of the customer to minimize the number of parcels necessary to deliver the ordered products from the factory to the customer. A good program solving the problem of finding the minimal number of parcels necessary to deliver the given products according to an order would save a lot of money. You are asked to make such a program. ",The input file consists of several lines specifying orders. Each line specifies one order. Orders are described by six integers separated by one space representing successively the number of packets of individual size from the smallest size 1*1 to the biggest size 6*6. The end of the input file is indicated by the line containing six zeros. ,The output file contains one line for each line in the input file. This line contains the minimal number of parcels into which the order from the corresponding line of the input file can be packed. There is no line in the output file corresponding to the last ``null'' line of the input file. ,"0 0 4 0 0 1 
7 5 1 0 0 0 
0 0 0 0 0 0 ","2 
1 "
Numbers That Count,http://poj.org/problem?id=1016, 1000MS, 10000K,"""Kronecker's Knumbers"" is a little company that manufactures plastic digits for use in signs (theater marquees, gas station price displays, and so on). The owner and sole employee, Klyde Kronecker, keeps track of how many digits of each type he has used by maintaining an inventory book. For instance, if he has just made a sign containing the telephone number ""5553141"", he'll write down the number ""5553141"" in one column of his book, and in the next column he'll list how many of each digit he used: two 1s, one 3, one 4, and three 5s. (Digits that don't get used don't appear in the inventory.) He writes the inventory in condensed form, like this: ""21131435"". The other day, Klyde filled an order for the number 31123314 and was amazed to discover that the inventory of this number is the same as the number---it has three 1s, one 2, three 3s, and one 4! He calls this an example of a ""self-inventorying number"", and now he wants to find out which numbers are self-inventorying, or lead to a self-inventorying number through iterated application of the inventorying operation described below. You have been hired to help him in his investigations. Given any non-negative integer n, its inventory is another integer consisting of a concatenation of integers c1 d1 c2 d2 ... ck dk , where each ci and di is an unsigned integer, every ci is positive, the di satisfy 0<=d1<d2<...<dk<=9, and, for each digit d that appears anywhere in n, d equals di for some i and d occurs exactly ci times in the decimal representation of n. For instance, to compute the inventory of 5553141 we set c1 = 2, d1 = 1, c2 = 1, d2 = 3, etc., giving 21131435. The number 1000000000000 has inventory 12011 (""twelve 0s, one 1""). An integer n is called self-inventorying if n equals its inventory. It is called self-inventorying after j steps (j>=1) if j is the smallest number such that the value of the j-th iterative application of the inventory function is self-inventorying. For instance, 21221314 is self-inventorying after 2 steps, since the inventory of 21221314 is 31321314, the inventory of 31321314 is 31123314, and 31123314 is self-inventorying. Finally, n enters an inventory loop of length k (k>=2) if k is the smallest number such that for some integer j (j>=0), the value of the j-th iterative application of the inventory function is the same as the value of the (j + k)-th iterative application. For instance, 314213241519 enters an inventory loop of length 2, since the inventory of 314213241519 is 412223241519 and the inventory of 412223241519 is 314213241519, the original number (we have j = 0 in this case). Write a program that will read a sequence of non-negative integers and, for each input value, state whether it is self-inventorying, self-inventorying after j steps, enters an inventory loop of length k, or has none of these properties after 15 iterative applications of the inventory function. ","A sequence of non-negative integers, each having at most 80 digits, followed by the terminating value -1. There are no extra leading zeros. ","For each non-negative input value n, output the appropriate choice from among the following messages (where n is the input value, j is a positive integer, and k is a positive integer greater than 1): n is self-inventorying n is self-inventorying after j steps n enters an inventory loop of length k n can not be classified after 15 iterations ","22 
31123314 
314213241519 
21221314 
111222234459 
-1","22 is self-inventorying 
31123314 is self-inventorying 
314213241519 enters an inventory loop of length 2 
21221314 is self-inventorying after 2 steps 
111222234459 enters an inventory loop of length 2 "
Jury Compromise,http://poj.org/problem?id=1015, 1000MS, 65536K,"In Frobnia, a far-away country, the verdicts in court trials are determined by a jury consisting of members of the general public. Every time a trial is set to begin, a jury has to be selected, which is done as follows. First, several people are drawn randomly from the public. For each person in this pool, defence and prosecution assign a grade from 0 to 20 indicating their preference for this person. 0 means total dislike, 20 on the other hand means that this person is considered ideally suited for the jury. Based on the grades of the two parties, the judge selects the jury. In order to ensure a fair trial, the tendencies of the jury to favour either defence or prosecution should be as balanced as possible. The jury therefore has to be chosen in a way that is satisfactory to both parties. We will now make this more precise: given a pool of n potential jurors and two values di (the defence's value) and pi (the prosecution's value) for each potential juror i, you are to select a jury of m persons. If J is a subset of {1,..., n} with m elements, then D(J ) = sum(dk)  k belong to Jand P(J) = sum(pk) k belong to J are the total values of this jury for defence and prosecution. For an optimal jury J , the value |D(J) - P(J)| must be minimal. If there are several jurys with minimal |D(J) - P(J)|, one which maximizes D(J) + P(J) should be selected since the jury should be as ideal as possible for both parties. You are to write a program that implements this jury selection process and chooses an optimal jury given a set of candidates. ","The input file contains several jury selection rounds. Each round starts with a line containing two integers n and m. n is the number of candidates and m the number of jury members. These values will satisfy 1The file ends with a round that has n = m = 0. ","For each round output a line containing the number of the jury selection round ('Jury #1', 'Jury #2', etc.). On the next line print the values D(J ) and P (J ) of your jury as shown below and on another line print the numbers of the m chosen candidates in ascending order. Output a blank before each individual candidate number. Output an empty line after each test case. ","4 2 
1 2 
2 3 
4 1 
6 2 
0 0 ","Jury #1 
Best jury has value 6 for prosecution and value 4 for defence: 
 2 3 "
Dividing,http://poj.org/problem?id=1014, 1000MS, 10000K,"Marsha and Bill own a collection of marbles. They want to split the collection among themselves so that both receive an equal share of the marbles. This would be easy if all the marbles had the same value, because then they could just split the collection in half. But unfortunately, some of the marbles are larger, or more beautiful than others. So, Marsha and Bill start by assigning a value, a natural number between one and six, to each marble. Now they want to divide the marbles so that each of them gets the same total value. Unfortunately, they realize that it might be impossible to divide the marbles in this way (even if the total value of all marbles is even). For example, if there are one marble of value 1, one of value 3 and two of value 4, then they cannot be split into sets of equal value. So, they ask you to write a program that checks whether there is a fair partition of the marbles. ","Each line in the input file describes one collection of marbles to be divided. The lines contain six non-negative integers n1 , . . . , n6 , where ni is the number of marbles of value i. So, the example from above would be described by the input-line ""1 0 1 2 0 0"". The maximum total number of marbles will be 20000. The last line of the input file will be ""0 0 0 0 0 0""; do not process this line. ","For each collection, output ""Collection #k:"", where k is the number of the test case, and then either ""Can be divided."" or ""Can't be divided."". Output a blank line after each test case. ","1 0 1 2 0 0 
1 0 0 0 1 1 
0 0 0 0 0 0 ","Collection #1:
Can't be divided.

Collection #2:
Can be divided."
Counterfeit Dollar,http://poj.org/problem?id=1013, 1000MS, 10000K,"Sally Jones has a dozen Voyageur silver dollars. However, only eleven of the coins are true silver dollars; one coin is counterfeit even though its color and size make it indistinguishable from the real silver dollars. The counterfeit coin has a different weight from the other coins but Sally does not know if it is heavier or lighter than the real coins. Happily, Sally has a friend who loans her a very accurate balance scale. The friend will permit Sally three weighings to find the counterfeit coin. For instance, if Sally weighs two coins against each other and the scales balance then she knows these two coins are true. Now if Sally weighs one of the true coins against a third coin and the scales do not balance then Sally knows the third coin is counterfeit and she can tell whether it is light or heavy depending on whether the balance on which it is placed goes up or down, respectively. By choosing her weighings carefully, Sally is able to ensure that she will find the counterfeit coin with exactly three weighings. ","The first line of input is an integer n (n > 0) specifying the number of cases to follow. Each case consists of three lines of input, one for each weighing. Sally has identified each of the coins with the letters A--L. Information on a weighing will be given by two strings of letters and then one of the words ``up'', ``down'', or ``even''. The first string of letters will represent the coins on the left balance; the second string, the coins on the right balance. (Sally will always place the same number of coins on the right balance as on the left balance.) The word in the third position will tell whether the right side of the balance goes up, down, or remains even. ","For each case, the output will identify the counterfeit coin by its letter and tell whether it is heavy or light. The solution will always be uniquely determined. ","1 
ABCD EFGH even 
ABCI EFJK up 
ABIJ EFGH even ",K is the counterfeit coin and it is light. 
Joseph,http://poj.org/problem?id=1012, 1000MS, 10000K,"The Joseph's problem is notoriously known. For those who are not familiar with the original problem: from among n people, numbered 1, 2, . . ., n, standing in circle every mth is going to be executed and only the life of the last remaining person will be saved. Joseph was smart enough to choose the position of the last remaining person, thus saving his life to give us the message about the incident. For example when n = 6 and m = 5 then the people will be executed in the order 5, 4, 6, 2, 3 and 1 will be saved.Suppose that there are k good guys and k bad guys. In the circle the first k are good guys and the last k bad guys. You have to determine such minimal m that all the bad guys will be executed before the first good guy. ","The input file consists of separate lines containing k. The last line in the input file contains 0. You can suppose that 0 OutputThe output file will consist of separate lines containing m corresponding to k in the input file. Sample Input3
4
0
Sample Output5
30

SourceCentral Europe 1995",The output file will consist of separate lines containing m corresponding to k in the input file. ,"3
4
0
","5
30

"
Sticks,http://poj.org/problem?id=1011, 1000MS, 10000K,"George took sticks of the same length and cut them randomly until all parts became at most 50 units long. Now he wants to return sticks to the original state, but he forgot how many sticks he had originally and how long they were originally. Please help him and design a program which computes the smallest possible original length of those sticks. All lengths expressed in units are integers greater than zero. ","The input contains blocks of 2 lines. The first line contains the number of sticks parts after cutting, there are at most 64 sticks. The second line contains the lengths of those parts separated by the space. The last line of the file contains zero.","The output should contains the smallest possible length of original sticks, one per line. ","9
5 2 1 5 2 1 5 2 1
4
1 2 3 4
0
","6
5"
STAMPS,http://poj.org/problem?id=1010, 1000MS, 10000K,"Have you done any Philately lately? You have been hired by the Ruritanian Postal Service (RPS) to design their new postage software.  The software allocates stamps to customers based on customer needs and the denominations that are currently in stock.Ruritania is filled with people who correspond with stamp collectors. As a service to these people, the RPS asks that all stamp allocations have the maximum number of different types of stamps in it.  In fact, the RPS has been known to issue several stamps of the same denomination in order to please customers (these count as different types, even though they are the same denomination).  The maximum number of different types of stamps issued at any time is twenty-five.To save money, the RPS would like to issue as few duplicate stamps as possible (given the constraint that they want to issue as many different types).  Further, the RPS won't sell more than four stamps at a time.","The input for your program will be pairs of positive integer sequences, consisting of two lines, alternating until end-of-file.  The first sequence are the available values of stamps, while the second sequence is a series of customer requests.  For example:1 2 3 0	; three different stamp types7 4 0		; two customers1 1 0		; a new set of stamps (two of the same type)6 2 3 0	; three customersNote: the comments in this example are *not* part of the data file; data files contain only integers. ","For each customer, you should print the ""best"" combination that is exactly equal to the customer's needs, with a maximum of four stamps. If no such combination exists, print ""none"". The ""best"" combination is defined as the maximum number of different stamp types.  In case of a tie, the combination with the fewest total stamps is best.  If still tied, the set with the highest single-value stamp is best.  If there is still a tie, print ""tie"". For the sample input file, the output should be:7 (3): 1 1 2 3 4 (2): 1 3 6 ---- none2 (2): 1 13 (2): tieThat is, you should print the customer request, the number of types sold and the actual stamps.  In case of no legal allocation, the line should look like it does in the example, with four hyphens after a space.  In the case of a tie, still print the number of types but do not print the allocation (again, as in the example).Don't print extra blank at the end of each line.","1 2 3 0	; three different stamp types
7 4 0		; two customers
1 1 0		; a new set of stamps (two of the same type)
6 2 3 0	; three customers","7 (3): 1 1 2 3 
4 (2): 1 3 
6 ---- none
2 (2): 1 1
3 (2): tie"
Edge Detection,http://poj.org/problem?id=1009, 1000MS, 10000K,"IONU Satellite Imaging, Inc. records and stores very large images using run  length encoding. You are to write a program that reads a compressed image, finds the edges in the image, as described below, and outputs another compressed image of the detected edges.A simple edge detection algorithm sets an output pixel's value to be the maximum absolute value of the differences between it and all its surrounding pixels in the input image. Consider the input image below:The upper left pixel in the output image is the maximum of the values |15-15|,|15-100|, and |15-100|, which is 85. The pixel in the 4th row, 2nd column is computed as the maximum of |175-100|, |175-100|, |175-100|, |175-175|, |175-25|, |175-175|,|175-175|, and |175-25|, which is 150.Images contain 2 to 1,000,000,000 (109) pixels. All images are encoded using run length encoding (RLE). This is a sequence of pairs, containing pixel value (0-255) and run length (1-109). Input images have at most 1,000 of these pairs. Successive pairs have different pixel values. All lines in an image contain the same number of pixels.","Input consists of information for one or more images. Each image starts with the width, in pixels, of each image line. This is followed by the RLE pairs, one pair per line. A line with 0 0 indicates the end of the data for that image. An image width of 0 indicates there are no more images to process. The first image in the example input encodes the 5x7 input image above.","Output is a series of edge-detected images, in the same format as the input images, except that there may be more than 1,000 RLE pairs.","7
15 4
100 15
25 2
175 2
25 5
175 2
25 5
0 0
10
35 500000000
200 500000000
0 0
3
255 1
10 1
255 2
10 1
255 2
10 1
255 1
0 0
0
","7
85 5
0 2
85 5
75 10
150 2
75 3
0 2
150 2
0 4
0 0
10
0 499999990
165 20
0 499999990
0 0
3
245 9
0 0
0
"
Maya Calendar,http://poj.org/problem?id=1008, 1000MS, 10000K,"During his last sabbatical, professor M. A. Ya made a surprising discovery about the old Maya calendar. From an old knotted message, professor discovered that the Maya civilization used a 365 day long year, called Haab, which had 19 months. Each of the first 18 months was 20 days long, and the names of the months were pop, no, zip, zotz, tzec, xul, yoxkin, mol, chen, yax, zac, ceh, mac, kankin, muan, pax, koyab, cumhu. Instead of having names, the days of the months were denoted by numbers starting from 0 to 19. The last month of Haab was called uayet and had 5 days denoted by numbers 0, 1, 2, 3, 4. The Maya believed that this month was unlucky, the court of justice was not in session, the trade stopped, people did not even sweep the floor. For religious purposes, the Maya used another calendar in which the year was called Tzolkin (holly year). The year was divided into thirteen periods, each 20 days long. Each day was denoted by a pair consisting of a number and the name of the day. They used 20 names: imix, ik, akbal, kan, chicchan, cimi, manik, lamat, muluk, ok, chuen, eb, ben, ix, mem, cib, caban, eznab, canac, ahau and 13 numbers; both in cycles. Notice that each day has an unambiguous description. For example, at the beginning of the year the days were described as follows: 1 imix, 2 ik, 3 akbal, 4 kan, 5 chicchan, 6 cimi, 7 manik, 8 lamat, 9 muluk, 10 ok, 11 chuen, 12 eb, 13 ben, 1 ix, 2 mem, 3 cib, 4 caban, 5 eznab, 6 canac, 7 ahau, and again in the next period 8 imix, 9 ik, 10 akbal . . .Years (both Haab and Tzolkin) were denoted by numbers 0, 1, : : : , where the number 0 was the beginning of the world. Thus, the first day was: Haab: 0. pop 0 Tzolkin: 1 imix 0 Help professor M. A. Ya and write a program for him to convert the dates from the Haab calendar to the Tzolkin calendar. ","The date in Haab is given in the following format:NumberOfTheDay. Month YearThe first line of the input file contains the number of the input dates in the file. The next n lines contain n dates in the Haab calendar format, each in separate line. The year is smaller then 5000. ","The date in Tzolkin should be in the following format:Number NameOfTheDay YearThe first line of the output file contains the number of the output dates. In the next n lines, there are dates in the Tzolkin calendar format, in the order corresponding to the input dates. ","3
10. zac 0
0. pop 0
10. zac 1995","3
3 chuen 0
1 imix 0
9 cimi 2801"
DNA Sorting,http://poj.org/problem?id=1007, 1000MS, 10000K,"One measure of ``unsortedness'' in a sequence is the number of pairs of entries that are out of order with respect to each other. For instance, in the letter sequence ``DAABEC'', this measure is 5, since D is greater than four letters to its right and E is greater than one letter to its right. This measure is called the number of inversions in the sequence. The sequence ``AACEDGG'' has only one inversion (E and D)---it is nearly sorted---while the sequence ``ZWQM'' has 6 inversions (it is as unsorted as can be---exactly the reverse of sorted).You are responsible for cataloguing a sequence of DNA strings (sequences containing only the four letters A, C, G, and T). However, you want to catalog them, not in alphabetical order, but rather in order of ``sortedness'', from ``most sorted'' to ``least sorted''. All the strings are of the same length.","The first line contains two integers: a positive integer n (0 OutputOutput the list of input strings, arranged from ``most sorted'' to ``least sorted''. Since two strings can be equally sorted, then output them according to the orginal order.Sample Input10 6
AACATGAAGG
TTTTGGCCAA
TTTGGCCAAA
GATCAGATTT
CCCGGGGGGA
ATCGATGCATSample OutputCCCGGGGGGA
AACATGAAGG
GATCAGATTT
ATCGATGCAT
TTTTGGCCAA
TTTGGCCAAASourceEast Central North America 1998","Output the list of input strings, arranged from ``most sorted'' to ``least sorted''. Since two strings can be equally sorted, then output them according to the orginal order.","10 6
AACATGAAGG
TTTTGGCCAA
TTTGGCCAAA
GATCAGATTT
CCCGGGGGGA
ATCGATGCAT","CCCGGGGGGA
AACATGAAGG
GATCAGATTT
ATCGATGCAT
TTTTGGCCAA
TTTGGCCAAA"
Square Ice,http://poj.org/problem?id=1099, 1000MS, 10000K,"Square Ice is a two-dimensional arrangement of water molecules H2O, with oxygen at the vertices of a square lattice and one hydrogen atom between each pair of adjacent oxygen atoms. The hydrogen atoms must stick out on the left and right sides but are not allowed to stick out the top or bottom. One 5 x 5 example is shown below. Note that each hydrogen atom is attached to exactly one of its neighboring oxygen atoms and each oxygen atom is attached to two of its neighboring hydrogen atoms. (Recall that one water molecule is a unit of one O linked to two H's.)It turns out we can encode a square ice pattern with what is known as an alternating sign matrix (ASM): horizontal molecules are encoded as 1, vertical molecules are encoded as -1 and all other molecules are encoded as 0. So, the above pattern would be encoded as:An ASM is a square matrix with entries 0, 1 and -1, where the sum of each row and column is 1 and the non-zero entries in each row and in each column must alternate in sign. (It turns out there is a one-to-one correspondence between ASM's and square ice patterns!)Your job is to display the square ice pattern, in the same format as the example above, for a given ASM. Use dashes (-) for horizontal attachments and vertical bars (|) for vertical attachments. The pattern should be surrounded with a border of asterisks (*), be left justified and there should be exactly one character between neighboring hydrogen atoms (H) and oxygen atoms (O): either a space, a dash or a vertical bar.","Input consists of multiple cases. Each case consists of a positive integer m (OutputFor each case, print the case number (starting from 1), in the format shown in the Sample Output, followed by a blank line, followed by the corresponding square ice pattern in the format described above. Separate the output of different cases by a blank line.Sample Input2
0 1
1 0
4
0 1 0 0
1 -1 0 1
0 0 1 0
0 1 0 0
0Sample OutputCase 1:

***********
*H-O H-O-H*
*  |      *
*  H   H  *
*      |  *
*H-O-H O-H*
***********

Case 2:

*******************
*H-O H-O-H O-H O-H*
*  |       |   |  *
*  H   H   H   H  *
*      |          *
*H-O-H O H-O H-O-H*
*      |   |      *
*  H   H   H   H  *
*  |           |  *
*H-O H-O H-O-H O-H*
*      |          *
*  H   H   H   H  *
*  |       |   |  *
*H-O H-O-H O-H O-H*
*******************SourceEast Central North America 2001","For each case, print the case number (starting from 1), in the format shown in the Sample Output, followed by a blank line, followed by the corresponding square ice pattern in the format described above. Separate the output of different cases by a blank line.","2
0 1
1 0
4
0 1 0 0
1 -1 0 1
0 0 1 0
0 1 0 0
0","Case 1:

***********
*H-O H-O-H*
*  |      *
*  H   H  *
*      |  *
*H-O-H O-H*
***********

Case 2:

*******************
*H-O H-O-H O-H O-H*
*  |       |   |  *
*  H   H   H   H  *
*      |          *
*H-O-H O H-O H-O-H*
*      |   |      *
*  H   H   H   H  *
*  |           |  *
*H-O H-O H-O-H O-H*
*      |          *
*  H   H   H   H  *
*  |       |   |  *
*H-O H-O-H O-H O-H*
*******************"
Robots,http://poj.org/problem?id=1098, 1000MS, 10000K,"The Robots game is a one-player game played on a 31 x 31 board. The board is partitioned into 1 x 1 cells arranged in 31 rows and 31 columns. Each cell is indexed by (r, c) where r is the row and c is the column (starting from 1), and it may be empty, occupied by you, occupied by a robot, or occupied by debris. The object of this game is to move in such a way to destroy all the robots before the robots destroy you. Initially, you occupy the cell at (15, 15), and there are R robots (1 When the robots move, each robot walks to the adjacent cell (even if it is not empty) in the eight compass directions such that the destination cell is closest to your current position (i.e. after your last move). The distance between two cells (r1, c1) and (r2, c2) is defined to be | r1 - r2 | + | c1 - c2 |. All robots walk at the same time during a move. If two or more robots walk to the same cell, or if a robot walks to a cell containing debris, all of these robots are destroyed. Destroyed robots become debris.You lose the game if any robot walks to your current position, even if multiple robots do so and destroy each other. You win the game if all robots are destroyed and none has moved to your current position.In order to stay in the game as long as possible, you will only consider moves that do not lead to an immediate loss (a loss before your next move). A plausible strategy is to always walk to a cell (or remain stationary) such that the number of robots remaining after your move and the robots' move (i.e. just before your next move) is minimized. In case of a tie, choose the move that maximizes the minimum distance to the remaining robots just before your next move. If there are still ties, choose the move that also minimizes the row index of the destination cell, and finally, break remaining ties by also minimizing the column index.If it is not possible to make a move by walking or by remaining stationary without leading to an immediate loss, you should teleport to the first unused legal destination chosen from a list of locations given to you, as long as it does not lead to an immediate loss. When you search for a teleport site, you should always start the search at the beginning of the list. If no such teleport destination is available, you should remain stationary, leading to an immediate loss.In this problem, you will implement this strategy and see how well it works.","The input consists of a number of instances. The first line of each instance contains the integers R and T separated by a space. This is followed by R lines containing two integers separated by a space, indicating the row and column of the initial positions of the R robots. You may assume that each robot initially occupies a cell which is not (15, 15) and the locations of the robots are distinct. The next T lines give the list of teleport destinations available. Each line is given by the row and column of the destination cell, separated by a space. The input is terminated by a case with R = T = 0.","For each case, print the case number (starting from 1), in the format shown in the Sample Output, on its own line. For each teleport taken, print one line of the form:Move m: teleport to (r, c)where m is the number of moves you have made (including this one), and (r, c) is the destination of the teleport. This is followed by three lines containing the result of the game. If you win the game, printWon game after making m moves.Final position (r,c)Number of cells with debris: dWhere m is the number of moves you have made when you won the game, (r,c) is your final position, and d is the number of cells with debris (use the word ""moves"" even if m = 1). If you lose the game, printLost game after making m moves.Final position: (r,c)Number of cells with debris: dNumber of robots remaining: nwhere m is the number of moves you have made when you lost the game, (r.c) is the location at which you are destroyed, d is the number of cells with debris, and n is the number of robots remaining when you lost the game (use the word ""moves"" even if m = 1).","4 0
17 18
13 18
8 12
10 12
4 0
17 17
13 17
13 13
17 13
3 3
17 18
13 18
5 31
15 16
16 15
3 7
0 0","Case 1:
Won game after making 5 moves.
Final position: (14,16)
Number of cells with debris: 1

Case 2:
Lost game after making 2 moves.
Final position: (15,15)
Number of cells with debris: 1
Number of robots remaining: 0

Case 3:
Move 30: teleport to (16,15)
Move 58: teleport to (15,16)
Move 86: teleport to (3,7)
Lost game after making 114 moves. 
Final position: (1,29)
Number of cells with debris: 1
Number of robots remaining: 1"
Roads Scholar,http://poj.org/problem?id=1097, 1000MS, 10000K,"The Hines Sign company has been contracted to supply roadside signs for the state highway system. The head of the company has put his son Myles Hines in charge of one particular class of signs, those which indicate the number of miles to carious towns. Myles is given a layout of the highway system and a set of locations where the signs should go: he is in charge of determining the mileage to nearby cities. To select which cities should be listed on any sign, he uses the following strategy: City X is put on the sign if the sign is on a road such that the shortest path from the intersection immediately preceding the sign to X uses the road. You may assume that there is only one shortest path between each pair of intersections. ","Input consists of a single problem instance consisting of a description of the highway system, followed by a set of sign locations. The highway system is defined as a set of intersections (some of which are also city locations) and a set of roads connecting the intersections. The first line of a problem instance contains three positive integers n m k: n specifies the number of intersections (numbered 0, 1, 2, ..., n-1), m indicates the number of roads between connections, and k indicated the number of intersections which are also cities. Following this are m lines of the form i1 i2 d, which specifies a two-way road between intersections i1 and i2 of distance d. The next k lines are of the form i name, which specifies that intersection i is a city called name. After this is a line with a single positive integer s indicating the number of signs to place on the highway. The remaining s lines are of the form i1 i2 d indicating that a sign is to be placed on the road going from i1 to i2 a distance d from i1 (d will always be non-zero and less than the distance from i1 to i2). For all problem instances, the length of name will be OutputEach sign should be output as follows:name1 d1name2 d2...where each namei should be left justified in a field of width 20, and each distance di is rounded to the nearest mile. (Round .50 up. For example, 7.50 should be rounded to 8.) Each name-distance pair should be sorted by the rounded distance; pairs with the same rounded distance should be printed in alphabetical order. Signs should be output in the order in which they were listed in the input, and you should separate each sign output with a blank line. You may assume that every sign will have at least one city listed on it.Sample Input8 17 4
0 1 7.12
0 2 8.34
0 3 5.33
0 4 5.36
1 2 4.21
1 6 6.99
1 7 10.26
2 3 2.74
2 6 5.04
3 4 4.12
3 5 7.72
3 6 5.71
4 5 8.94
4 6 10.29
5 6 5.47
5 7 8.55
6 7 6.01
0 Allentown
1 Bobtown
6 Charlestown
7 Downville
3
0 3 2.17
3 2 0.45
4 3 3.14Sample OutputCharlestown         9
Downville           15

Bobtown             7

Charlestown         7
Bobtown             8
Downville           13SourceEast Central North America 2001","Each sign should be output as follows:name1 d1name2 d2...where each namei should be left justified in a field of width 20, and each distance di is rounded to the nearest mile. (Round .50 up. For example, 7.50 should be rounded to 8.) Each name-distance pair should be sorted by the rounded distance; pairs with the same rounded distance should be printed in alphabetical order. Signs should be output in the order in which they were listed in the input, and you should separate each sign output with a blank line. You may assume that every sign will have at least one city listed on it.","8 17 4
0 1 7.12
0 2 8.34
0 3 5.33
0 4 5.36
1 2 4.21
1 6 6.99
1 7 10.26
2 3 2.74
2 6 5.04
3 4 4.12
3 5 7.72
3 6 5.71
4 5 8.94
4 6 10.29
5 6 5.47
5 7 8.55
6 7 6.01
0 Allentown
1 Bobtown
6 Charlestown
7 Downville
3
0 3 2.17
3 2 0.45
4 3 3.14","Charlestown         9
Downville           15

Bobtown             7

Charlestown         7
Bobtown             8
Downville           13"
Space Station Shielding,http://poj.org/problem?id=1096, 1000MS, 65536K,"Roger Wilco is in charge of the design of a low orbiting space station for the planet Mars. To simplify construction, the station is made up of a series of Airtight Cubical Modules (ACM's), which are connected together once in space. One problem that concerns Roger is that of (potentially) lethal bacteria that may reside in the upper atmosphere of Mars. Since the station will occasionally fly through the upper atmosphere, it is imperative that extra shielding be used on all faces of the ACM's touch, either edge to edge or face to face, that joint is sealed so no bacteria can sneak through. Any face of an ACM shared by another ACM will not need shielding, of course, nor will a face which cannot be reached from the outside. Roger could just put extra shielding on all of the faces of every ACM, but the cost would be prohibitive. Therefore, he wants to know the exact number of ACM faces which need the extra shielding. ",Input consists of multiple problem instances. Each instance consists of a specification of a space station. We assume that each space station can fit into an n x m x k grid (1 ,"For each problem instance, you should output one line of the formThe number of faces needing shielding is s.","2 2 1 3
0 1 3
3 3 3 26
0 1 2 3 4 5 6 7 8 9
10 11 12 14 15 16 17 18 19 20
21 22 23 24 25 26
0 0 0 0","The number of faces needing shielding is 14.
The number of faces needing shielding is 54."
Trees Made to Order,http://poj.org/problem?id=1095, 1000MS, 10000K,"We can number binary trees using the following scheme: The empty tree is numbered 0.The single-node tree is numbered 1.All binary trees having m nodes have numbers less than all those having m+1 nodes.Any binary tree having m nodes with left and right subtrees L and R is numbered n such that all trees having m nodes numbered > n have either Left subtrees numbered higher than L, or A left subtree = L and a right subtree numbered higher than R.The first 10 binary trees and tree number 20 in this sequence are shown below:Your job for this problem is to output a binary tree when given its order number.","Input consists of multiple problem instances. Each instance consists of a single integer n, where 1 OutputFor each problem instance, you should output one line containing the tree corresponding to the order number for that instance. To print out the tree, use the following scheme:A tree with no children should be output as X.A tree with left and right subtrees L and R should be output as (L')X(R'), where L' and R' are the representations of L and R.  If L is empty, just output X(R').  If R is empty, just output (L')X.Sample Input1
20
31117532
0Sample OutputX
((X)X(X))X
(X(X(((X(X))X(X))X(X))))X(((X((X)X((X)X)))X)X)SourceEast Central North America 2001","For each problem instance, you should output one line containing the tree corresponding to the order number for that instance. To print out the tree, use the following scheme:A tree with no children should be output as X.A tree with left and right subtrees L and R should be output as (L')X(R'), where L' and R' are the representations of L and R.  If L is empty, just output X(R').  If R is empty, just output (L')X.","1
20
31117532
0","X
((X)X(X))X
(X(X(((X(X))X(X))X(X))))X(((X((X)X((X)X)))X)X)"
Sorting It All Out,http://poj.org/problem?id=1094, 1000MS, 10000K,"An ascending sorted sequence of distinct values is one in which some form of a less-than operator is used to order the elements from smallest to largest. For example, the sorted sequence A, B, C, D implies that A InputInput consists of multiple problem instances. Each instance starts with a line containing two positive integers n and m. the first value indicated the number of objects to sort, where 2 OutputFor each problem instance, output consists of one line. This line should be one of the following three:Sorted sequence determined after xxx relations: yyy...y.Sorted sequence cannot be determined.Inconsistency found after xxx relations.where xxx is the number of relations processed at the time either a sorted sequence is determined or an inconsistency is found, whichever comes first, and yyy...y is the sorted, ascending sequence.Sample Input4 6
A<B
A<C
B<C
C<D
B<D
A<B
3 2
A<B
B<A
26 1
A<Z
0 0
Sample OutputSorted sequence determined after 4 relations: ABCD.
Inconsistency found after 2 relations.
Sorted sequence cannot be determined.SourceEast Central North America 2001","Input consists of multiple problem instances. Each instance starts with a line containing two positive integers n and m. the first value indicated the number of objects to sort, where 2 OutputFor each problem instance, output consists of one line. This line should be one of the following three:Sorted sequence determined after xxx relations: yyy...y.Sorted sequence cannot be determined.Inconsistency found after xxx relations.where xxx is the number of relations processed at the time either a sorted sequence is determined or an inconsistency is found, whichever comes first, and yyy...y is the sorted, ascending sequence.Sample Input4 6
A<B
A<C
B<C
C<D
B<D
A<B
3 2
A<B
B<A
26 1
A<Z
0 0
Sample OutputSorted sequence determined after 4 relations: ABCD.
Inconsistency found after 2 relations.
Sorted sequence cannot be determined.SourceEast Central North America 2001","For each problem instance, output consists of one line. This line should be one of the following three:Sorted sequence determined after xxx relations: yyy...y.Sorted sequence cannot be determined.Inconsistency found after xxx relations.where xxx is the number of relations processed at the time either a sorted sequence is determined or an inconsistency is found, whichever comes first, and yyy...y is the sorted, ascending sequence.","4 6
A<B
A<C
B<C
C<D
B<D
A<B
3 2
A<B
B<A
26 1
A<Z
0 0
","Sorted sequence determined after 4 relations: ABCD.
Inconsistency found after 2 relations.
Sorted sequence cannot be determined."
Formatting Text,http://poj.org/problem?id=1093, 1000MS, 10000K,"Writings e-mails is fun, but, unfortunately, they do not look very nice, mainly because not all lines have the same lengths. In this problem, your task is to write an e-mail formatting program which reformats a paragraph of an e-mail (e.g. by inserting spaces) so that, afterwards, all lines have the same length (even the last one of each paragraph). The easiest way to perform this task would be to insert more spaces between the words in lines which are too short. But this is not the best way. Consider the following example: ****************************This is the example you areactually considering.Let us assume that we want to get lines as long as the row of stars. Then, by simply inserting spaces, we would get ****************************This is the example you  areactually        considering.But this looks rather odd because of the big gap in the second line. By moving the word ``are'' from the first to the second line, we get a better result: ****************************This  is  the  example   youare  actually   considering.Of course, this has to be formalized. To do this, we assign a badness to each gap between words. The badness assigned to a gap of n spaces is (n - 1)^2. The goal of the program is to minimize the sum of all badnesses. For example, the badness of the first example is 1 + 7^2 = 50 whereas the badness of the second one is only 1 + 1 + 1 + 4 + 1 + 4 = 12. In the output, every line has to start and to end with a word. (I.e. there cannot be a gap at the beginning or the end of a line.) The only exception to this is the following: If a line contains only one word this word shall be put at the beginning of the line, and a badness of 500 is assigned to this line if it is shorter than it should be. (Of course, in this case, the length of the line is simply the length of the word.) ","The input contains a text consisting of several paragraphs. Each paragraph is preceded by a line containing a single integer n, the desired width of the paragraph (1 Paragraphs consist of one or more lines which contain one or more words each. Words consist of characters with ASCII codes between 33 and 126, inclusive, and are separated by spaces (possibly more than one). No word will be longer than the desired width of the paragraph. The total length of all words of one paragraph will not be more than 10000 characters. Each paragraph is terminated by exactly one blank line. There is no limit on the number of paragraphs in the input file. The input file will be terminated by a paragraph description starting with n=0. This paragraph should not be processed. ","Output the same text, formatted in the way described above (processing each paragraph separately). If there are several ways to format a paragraph with the same badness, use the following algorithm to choose which one to output: Let A and B be two solutions. Find the first gap which has not the same length in A and B. Do not output the solution in which this gap is bigger. Output a blank line after each paragraph. ","28
This is the example you are
actually considering.

25
Writing e-mails is fun, and with this program,
they even look nice.

0
","This  is  the  example   you
are  actually   considering.

Writing e-mails  is  fun,
and  with  this  program,
they  even   look   nice."
Farmland,http://poj.org/problem?id=1092, 1000MS, 65536K,"We have a map for farming land in a country. The whole farming land of the  country is divided into a set of disjoint farming regions. Each farmer owns  only one farming region in this country. There is a boundary fence between two neighboring farming regions. The farmland map for this country can be represented in a plane graph. The following Figure-1 shows one example.Figure-1: Farmland graph G(V,E) There are two types of edges, boundary edge and non-boundary edge. All edges of G(V,E) except (v8, v6) and (v11, v10) are boundary edges which are between two neighboring farming regions. The ""proper farming region"" in a Farmland graph is a closed region bounded by a simple cycle and it should not contain any vertices or edges inside. In this figure, the polygon is a proper farming region, and the region is not a proper farming region since its boundary cycle is not simple. We assume that the farmland graph G(V,E) is a simple connected graph, which  does not allow self-loops (Figure-2 (a)) and parallel edges (Figure-2 (b)).Also in Farmland graph G(V,E), we do not consider the outer face of G(V,E).You can see that there are 2 proper farming regions in G(V,E) shown in Figure-1,namely  and , since there are no vertices or edges inside. But the polygon is not a proper farming region since vertex v3, v4, and v5 are located in that region. Similarly, the region  is not a proper region because a vertex v10 is inside the region.A degenerate polygon  is not a proper region because it has no valid area inside. Figure-2: (a) self-loop  , and (b) 3 parallel edges { ,, }There are other assumptions for input farmland graph data.   1. There is at least one proper farming region.   2. The position of each vertex in Farmland graph is distinct.   3. There is no edge crossing, which means the graph G(V,E) is a plane graph.   4. Farmland graph G(V,E) is simple and connected.  Let us define the ""size"" of proper farming region. The size of proper farming region is the number of boundary edges of that region. For example, the size of the proper farming region  is 4.The problem is to find the number of proper regions that have a specified size.If you are requested to find the number of proper regions with size of 4 in the graph given in Figure-1, you must answer that there are 2 proper regions whose sizes are 4 because farming regions  and are proper regions and their sizes are 4. If there are no such regions, then you have to print 0.","The input consists of M test cases. The first line of the input contains a positive integer M, the number of test cases you are to solve. After the first line,input data for M cases follow. The first line of each test case contains a positive integer N (>=3), the number of vertices. Each of the following N lines is of the form:   i  xi  yi  di  a1  a2  a3  .....  adi ""i"" is the vertex number, xi and yi are the coordinate (xi, yi) of the vertex i, and di is the degree of the vertex i. The following { ai } are the adjacent vertices of the vertex i. The last line gives k, the size of proper regions that you have to count. Note that M, the number of cases in input is less than 10. N, the number of vertices of a given farmland graph is less than 200. All vertices are located on grid points of the 1000 x 1000 lattice grid. ",The output must contain M non-negative integers. Each line contains the answer n to the corresponding case of the input. ,"2                  
12                    
1  2 6   3  9 7 2 
2  5 6   4  5 3 1 8   
3  3 5   2  4 2       
4  3 4   2  3 5       
5  4 4   2  4 2 
6  7 4   1  8 
7  2 3   2  8 1 
8  5 3   5  7 2 9 12 6 
9  1 2   3  11 8 1 
10 3 2   1  11 
11 2 1   3  10 9 12 
12 6 1   2  8 11 
4  
3                     
1  2 2   2  2 3 
2  1 1   2  1 3 
3  4 1   2  1 2 
4   ","2
0"
跳蚤,http://poj.org/problem?id=1091, 1000MS, 10000K,"Z城市居住着很多只跳蚤。在Z城市周六生活频道有一个娱乐节目。一只跳蚤将被请上一个高空钢丝的正中央。钢丝很长，可以看作是无限长。节目主持人会给该跳蚤发一张卡片。卡片上写有N+1个自然数。其中最后一个是M，而前N个数都不超过M，卡片上允许有相同的数字。跳蚤每次可以从卡片上任意选择一个自然数S，然后向左，或向右跳S个单位长度。而他最终的任务是跳到距离他左边一个单位长度的地方，并捡起位于那里的礼物。比如当N=2，M=18时，持有卡片(10, 15, 18)的跳蚤，就可以完成任务：他可以先向左跳10个单位长度，然后再连向左跳3次，每次15个单位长度，最后再向右连跳3次，每次18个单位长度。而持有卡片(12, 15, 18)的跳蚤，则怎么也不可能跳到距他左边一个单位长度的地方。当确定N和M后，显然一共有M^N张不同的卡片。现在的问题是，在这所有的卡片中，有多少张可以完成任务。","两个整数N和M(N Output可以完成任务的卡片数。Sample Input2 4Sample Output12Hint这12张卡片分别是：(1, 1, 4), (1, 2, 4), (1, 3, 4), (1, 4, 4), (2, 1, 4), (2, 3, 4), (3, 1, 4), (3, 2, 4), (3, 3, 4), (3, 4, 4), (4, 1, 4), (4, 3, 4)SourceHNOI 2001",可以完成任务的卡片数。,2 4,12
Chain,http://poj.org/problem?id=1090, 1000MS, 10000K,"Byteland had not always been a democratic country. There were also black pages in its book of history. One lovely day general Bytel − commander of the junta which had power over Byteland −− decided to finish the long−lasting time of war and released imprisoned activists of the opposition. However, he had no intention to let the leader Bytesar free. He decided to chain him to the wall with the bytish chain. It consists of joined rings and the bar fixed to the wall. Although the rings are not joined with the bar, it is hard to take them off.'General, why have you chained me to the prison walls and did not let rejoice at freedom!' cried Bytesar.'But Bytesar, you are not chained at all, and I am certain you are able to take off the rings from the bar by yourself.' perfidiously answered general Bytel, and he added 'But deal with that before a clock strikes the cyber hour and do not make a noise at night, otherwise I will be forced to call Civil Cyber Police.'Help Bytesar! Number the following rings of the chain with integers 1,2,...,n. We may put on and take off these rings according to the following rules:.only one ring can be put on or taken off from the bar in one move, .the ring number 1 can be always put on or taken off from the bar, .if the rings with the numbers 1,...,k−1 (for 1Write a program which:.reads from std input the description of the bytish chain, .computes minimal number of moves necessary to take off all rings of the bytish chain from the bar,.writes the result to std output. ","In the first line of the input there is written one integer n, 1 OutputThe output should contain exactly one integer equal to the minimal number of moves necessary to take off all the rings of the bytish chain from the bar.Sample Input4
1 0 1 0Sample Output6SourcePOI 2001",The output should contain exactly one integer equal to the minimal number of moves necessary to take off all the rings of the bytish chain from the bar.,"4
1 0 1 0",6
Intervals,http://poj.org/problem?id=1089, 1000MS, 10000K,"There is given the series of n closed intervals [ai; bi], where i=1,2,...,n. The sum of those intervals may be represented as a sum of closed pairwise non−intersecting intervals. The task is to find such representation with the minimal number of intervals. The intervals of this representation should be written in the output file in acceding order. We say that the intervals [a; b] and [c; d] are in ascending order if, and only if a TaskWrite a program which:reads from the std input the description of the series of intervals,computes pairwise non−intersecting intervals satisfying the conditions given above, writes the computed intervals in ascending order into std output","In the first line of input there is one integer n, 3 OutputThe output should contain descriptions of all computed pairwise non−intersecting intervals. In each line should be written a description of one interval. It should be composed of two integers, separated by a single space, the beginning and the end of the interval respectively. The intervals should be written into the output in ascending order.Sample Input5
5 6
1 4
10 10
6 9
8 10Sample Output1 4
5 10SourcePOI VIII Stage 1 Problem 2","The output should contain descriptions of all computed pairwise non−intersecting intervals. In each line should be written a description of one interval. It should be composed of two integers, separated by a single space, the beginning and the end of the interval respectively. The intervals should be written into the output in ascending order.","5
5 6
1 4
10 10
6 9
8 10","1 4
5 10"
滑雪,http://poj.org/problem?id=1088, 1000MS, 65536K,"Michael喜欢滑雪百这并不奇怪， 因为滑雪的确很刺激。可是为了获得速度，滑的区域必须向下倾斜，而且当你滑到坡底，你不得不再次走上坡或者等待升降机来载你。Michael想知道载一个区域中最长底滑坡。区域由一个二维数组给出。数组的每个数字代表点的高度。下面是一个例子 1  2  3  4 516 17 18 19 615 24 25 20 714 23 22 21 813 12 11 10 9一个人可以从某个点滑向上下左右相邻四个点之一，当且仅当高度减小。在上面的例子中，一条可滑行的滑坡为24-17-16-1。当然25-24-23-...-3-2-1更长。事实上，这是最长的一条。","输入的第一行表示区域的行数R和列数C(1 Output输出最长区域的长度。Sample Input5 5
1 2 3 4 5
16 17 18 19 6
15 24 25 20 7
14 23 22 21 8
13 12 11 10 9
Sample Output25SourceSHTSC 2002",输出最长区域的长度。,"5 5
1 2 3 4 5
16 17 18 19 6
15 24 25 20 7
14 23 22 21 8
13 12 11 10 9
",25
A Plug for UNIX,http://poj.org/problem?id=1087, 1000MS, 65536K,"You are in charge of setting up the press room for the inaugural meeting of the United Nations Internet eXecutive (UNIX), which has an international mandate to make the free flow of information and ideas on the Internet as cumbersome and bureaucratic as possible. Since the room was designed to accommodate reporters and journalists from around the world, it is equipped with electrical receptacles to suit the different shapes of plugs and voltages used by appliances in all of the countries that existed when the room was built. Unfortunately, the room was built many years ago when reporters used very few electric and electronic devices and is equipped with only one receptacle of each type. These days, like everyone else, reporters require many such devices to do their jobs: laptops, cell phones, tape recorders, pagers, coffee pots, microwave ovens, blow dryers, curling irons, tooth brushes, etc. Naturally, many of these devices can operate on batteries, but since the meeting is likely to be long and tedious, you want to be able to plug in as many as you can. Before the meeting begins, you gather up all the devices that the reporters would like to use, and attempt to set them up. You notice that some of the devices use plugs for which there is no receptacle. You wonder if these devices are from countries that didn't exist when the room was built. For some receptacles, there are several devices that use the corresponding plug. For other receptacles, there are no devices that use the corresponding plug. In order to try to solve the problem you visit a nearby parts supply store. The store sells adapters that allow one type of plug to be used in a different type of outlet. Moreover, adapters are allowed to be plugged into other adapters. The store does not have adapters for all possible combinations of plugs and receptacles, but there is essentially an unlimited supply of the ones they do have. ","The input will consist of one case. The first line contains a single positive integer n (1 characters. No two devices will have exactly the same name. The plug type is separated from the device name by a space. The next line contains a single positive integer k (1 OutputA line containing a single non-negative integer indicating the smallest number of devices that cannot be plugged in. Sample Input4 
A 
B 
C 
D 
5 
laptop B 
phone C 
pager B 
clock B 
comb X 
3 
B X 
X A 
X D Sample Output1SourceEast Central North America 1999",A line containing a single non-negative integer indicating the smallest number of devices that cannot be plugged in. ,"4 
A 
B 
C 
D 
5 
laptop B 
phone C 
pager B 
clock B 
comb X 
3 
B X 
X A 
X D ",1
Unscrambling Images,http://poj.org/problem?id=1086, 1000MS, 10000K,"Quadtrees are commonly used for encoding digital images in a compact form. Given an n * n image (where n is a power of 2, 1 1. If every pixel in the region associated with the current node has an intensity value of p, then the node is made a leaf and it is assigned an associated value of p. 2. Otherwise, four nodes are added as children of the current node. The region is divided into four equal (square) quadrants and each quadrant is assigned to one child node. The algorithm recurses on each of the children nodes. When the process terminates, we obtain a quadtree in which every internal node has four children. Every leaf node has an associated value representing the intensity of the region corresponding to the leaf node. An example of an image and its quadtree encoding is shown below. We have assumed that the four children represent, from left to right, the upper left, upper right, lower left, and lower right quadrants, respectively. To easily identify a node in a quadtree, we assign a number to each node by the following rules: 1. The root is numbered 0. 2. If the number of a node is k, then its children, from left to right, are numbered 4k+1; 4k+2; 4k+3; 4k +4. Images encoded as quadtrees can be encrypted by a secret password as follows: whenever a subdivision is performed, the four branches are reordered. The reordering may be different at each node, but it is completely determined by the password and the node number. Unfortunately, some people use the ""save password"" feature in the encoding program and use the same password for multiple images. By observing the encoding of a well-chosen test image, any image encoded with the same password can be decoded without the password. In this test image, each pixel has a distinct intensity from 0 to n^2-1 arranged from left-to-right, top-to-bottom in increasing order. An example for n = 16 is given below: You managed to gain access to the encoding program and used it to encode the test image. Given the quadtree encoding of the test image, write a program to decode any other image encoded with the same password. ","You will be given a number of cases in the input. The first line of input consists of a positive integer indicating the number of test cases to follow. Each test case starts with a line containing n, followed by the quadtree encoding of the test image and the quadtree encoding of the secret image to be decoded. Each quadtree encoding starts with a line containing a positive integer m indicating the number of leaf nodes in the tree. The next m lines are of the form: k intensity which specifies that the node numbered k is a leaf node with the specified intensity as the associated leaf value. Nodes not specified are either internal nodes or absent in the quadtree. You may assume that all intensities are between 0 and 255, inclusively. You may also assume that each quadtree encoding is a valid output obtained from the encoding lgorithm described above. ","For each test case, print the case number followed by a blank line. Then, print the intensities of the pixels of the decoded image one row at a time. Print each intensity right-justified in a field of width 4, with no extra spaces between fields. Insert a blank line between cases. ","2 
2 
4 
1 3 
2 2 
3 0 
4 1 
4 
1 23 
2 123 
3 253 
4 40 
4 
16 
5 8 
6 9 
7 13 
8 12 
9 0 
10 4 
11 1 
12 5 
13 2 
14 3 
15 7 
16 6 
17 10 
18 11 
19 15 
20 14 
7 
2 10 
3 20 
4 30 
5 41 
6 42 
7 44 
8 43 ","Case 1 

 253  40 
 123  23 

Case 2 

  10  10  20  20 
  10  10  20  20 
  41  42  30  30 
  43  44  30  30 "
Triangle War,http://poj.org/problem?id=1085, 1000MS, 65536K,"Triangle War is a two-player game played on the following triangular grid: Two players, A and B, take turns filling in any dotted line connecting two dots, with A starting first. Once a line is filled, it cannot be filled again. If the line filled by a player completes one or more triangles, she owns the completed triangles and she is awarded another turn (i.e. the opponent skips a turn). The game ends after all dotted lines are filled in, and the player with the most triangles wins the game. The difference in the number of triangles owned by the two players is not important. For example, if A fills in the line between 2 and 5 in the partial game on the left below: Then, she owns the triangle labelled A and takes another turn to fill in the line between 3 and 5. B can now own 3 triangles (if he wishes) by filling in the line between 2 and 3, then the one between 5 and 6, and finally the one between 6 and 9. B would then make one more move before it is A's turn again. In this problem, you are given a number of moves that have already been made. From the partial game, you should determine which player will win assuming that each player plays a perfect game from that point on. That is, assume that each player always chooses the play that leads to the best possible outcome for himself/herself. ","You will be given a number of games in the input. The first line of input is a positive integer indicating the number of games to follow. Each game starts with an integer 6 OutputFor each game, print the game number and the result on one line as shown below. If A wins, print the sentence ""A wins."" If B wins, print ""B wins."" Sample Input4 
6 
2 4 
4 5 
5 9 
3 6 
2 5 
3 5 
7 
2 4 
4 5 
5 9 
3 6 
2 5 
3 5 
7 8 
6 
1 2 
2 3 
1 3 
2 4 
2 5 
4 5 
10 
1 2 
2 5 
3 6 
5 8 
4 7 
6 10 
2 4 
4 5 
4 8 
7 8 Sample OutputGame 1: B wins. 
Game 2: A wins. 
Game 3: A wins. 
Game 4: B wins.SourceEast Central North America 1999","For each game, print the game number and the result on one line as shown below. If A wins, print the sentence ""A wins."" If B wins, print ""B wins."" ","4 
6 
2 4 
4 5 
5 9 
3 6 
2 5 
3 5 
7 
2 4 
4 5 
5 9 
3 6 
2 5 
3 5 
7 8 
6 
1 2 
2 3 
1 3 
2 4 
2 5 
4 5 
10 
1 2 
2 5 
3 6 
5 8 
4 7 
6 10 
2 4 
4 5 
4 8 
7 8 ","Game 1: B wins. 
Game 2: A wins. 
Game 3: A wins. 
Game 4: B wins."
Square Destroyer,http://poj.org/problem?id=1084, 1000MS, 10000K,"The  left  figure below  shows a complete  3*3  grid made with  2*(3*4) (=24)  matchsticks. The  lengths of all matchsticks are one. You can find many squares of different sizes in the grid. The size of a square is the length of its side. In the grid shown in the left figure, there are 9 squares of size one, 4 squares of size two, and 1 square of size three.   Each matchstick of the complete grid is identified with a unique number which is assigned from left to right and from top to bottom as shown in the left figure. If you take some matchsticks out from the complete grid, then  some  squares  in  the  grid will  be  destroyed, which  results  in  an  incomplete  3*3  grid. The  right  figure illustrates  an  incomplete  3*3  grid  after  removing  three  matchsticks  numbered  with  12,  17  and  23.  This removal destroys 5 squares of size one, 3 squares of size two, and 1 square of size three. Consequently, the incomplete grid does not have squares of size three, but still has 4 squares of size one and 1 square of size two.As  input,  you  are  given  a  (complete  or  incomplete)  n*n  grid  made  with  no  more  than  2n(n+1) matchsticks for a natural number  5 out to destroy all the squares existing in the input  n*n  grid.  ","The input consists of   T test cases. The number of  test cases  (T )  is given  in  the  first  line of  the  input  file. Each  test  case  consists  of  two  lines: The  first  line  contains  a  natural  number  n ,  not  greater  than  5, which implies  you  are  given  a  (complete  or  incomplete)  n*n  grid  as  input,  and  the  second  line  begins  with  a nonnegative integer  k , the number of matchsticks that are missing from the complete  n*n  grid, followed by k numbers specifying the matchsticks. Note that if  k  is equal to zero, then the input grid is a complete  n*n grid; otherwise, the input grid is an incomplete  n*n  grid such that the specified  k  matchsticks are missing from the complete  n*n  grid. ",Print  exactly one  line  for each  test  case. The  line  should  contain  the minimum number of matchsticks  that have to be taken out to destroy all the squares in the input grid.  ,"2
2
0
3
3 12 17 23
","3
3"
Moving Tables,http://poj.org/problem?id=1083, 1000MS, 10000K,"The famous ACM (Advanced Computer Maker) Company has rented a floor of a building whose shape is in the following figure. The  floor  has  200  rooms  each  on  the  north  side  and  south  side  along  the  corridor. Recently  the Company made a plan  to  reform  its  system. The  reform  includes moving a  lot of  tables between  rooms. Because  the corridor is narrow and all the tables are big, only one table can pass through the corridor. Some plan is needed to make  the moving efficient. The manager  figured out  the  following plan: Moving a  table  from a  room  to another  room can be done within 10 minutes. When moving a  table  from  room  i  to  room  j,  the part of  the corridor  between  the  front  of  room  i  and  the  front  of  room  j  is  used.  So,  during  each  10 minutes,  several moving between two rooms not sharing the same part of the corridor will be done simultaneously. To make it clear the manager illustrated the possible cases and impossible cases of simultaneous moving.  For each room, at most one table will be either moved in or moved out. Now, the manager seeks out a method to minimize the time to move all the tables.  Your job is to write a program to solve the manager's problem. ","The input consists of T  test cases. The number of test cases  ) (T  is given in the first line of the input file. Each test case begins with a line containing an integer  N , 1 Each of the following  N  lines contains two positive integers s and t, representing that a table is to move from room number s to room number t each room number appears at most once in the N lines). From the  3 + N -rd line, the remaining test cases are listed in the same manner as above. ","The output should contain the minimum time in minutes to complete the moving, one per line. ","3 
4 
10 20 
30 40 
50 60 
70 80 
2 
1 3 
2 200 
3 
10 100 
20 80 
30 50 
","10
20
30"
Calendar Game,http://poj.org/problem?id=1082, 1000MS, 10000K,"Adam and Eve enter this year's ACM International Collegiate Programming Contest. Last night, they played the Calendar Game,  in celebration of  this contest. This game consists of  the dates  from  January 1, 1900  to November 4, 2001, the contest day. The game starts by randomly choosing a date from this interval. Then, the players, Adam and Eve, make moves in their turn with Adam moving first: Adam, Eve, Adam, Eve, etc. There is only one rule for moves and it is simple: from a current date, a player in his/her turn can move either to the next calendar date or the same day of the next month. When the next month does not have the same day, the player moves only to the next calendar date. For example, from December 19, 1924, you can move either to December  20,  1924,  the  next  calendar  date,  or  January  19,  1925,  the  same  day  of  the  next month.  From January 31 2001, however, you can move only to February 1, 2001, because February 31, 2001 is invalid.   A player wins the game when he/she exactly reaches the date of November 4, 2001. If a player moves to a date after November 4, 2001, he/she looses the game.  Write a program that decides whether, given an initial date, Adam, the first mover, has a winning strategy.  For this game, you need to identify leap years, where February has 29 days. In the Gregorian calendar, leap years occur in years exactly divisible by four. So, 1993, 1994, and 1995 are not leap years, while 1992 and 1996 are leap years. Additionally, the years ending with 00 are leap years only if they are divisible by 400. So, 1700, 1800, 1900, 2100, and 2200 are not leap years, while 1600, 2000, and 2400 are leap years.  ","The input consists of T test cases. The number of test cases (T ) is given in the first line of the input file. Each test case is written in a line and corresponds to an initial date. The three integers in a line, YYYY MM DD, represent  the  date  of  the DD-th  day  of  MM-th month  in  the  year  of  YYYY. Remember  that  initial  dates  are randomly chosen from the interval between January 1, 1900 and November 4, 2001. ","Print exactly one line for each test case. The line should contain the answer ""YES"" or ""NO"" to the question of whether Adam has a winning strategy against Eve. Since we have T  test cases, your program should output totally T  lines of ""YES"" or ""NO"". ","3 
2001 11 3 
2001 11 2 
2001 10 3 ","YES
NO
NO"
You Who?,http://poj.org/problem?id=1081, 1000MS, 10000K,"On the first day of first grade at Friendly Elementrary School, it is customary for each student to spend one minute talking to every classmate that he or she does not already know.  When student Bob sees an unfamilar face, he says ``You who?''  A typical response is ``Me Charlie, you who?''  Then Bob says, ``Me Bob!'' and they talk for a minute.  It's very cute.  Then, after a minute, they part and each looks for another stranger to greet. This takes time.  In class of twenty-nine or thirty mutual strangers, it takes 29 minutes; time that, according to teachers, could be better spent learning the alphabet.  Of course, it is rare to have a first grade class where nobody knows anyone else; there are neighbors and playmates who already know each other, so they don't have to go through the get-to-know-you minutes with each other. The two first grade teachers have requested that, to save time, students be allocated to their two classes so that the difference in the sizes of the classes is at most one, and the time it takes to complete these introductions is as small as possible.  There are no more than 60 students in the incoming first grade class. How can the assignment of students to classes be made?  Your job is to write the software that answers the question. ","The school records include information about these student friendships, represented as lists of numbers.  If there are 29 students, then they are represented by the numbers 1 to 29.  The record for a single student includes, first, his/her student identification number (1 to 29, in this example), then the number of his/her acquaintances, then a list of them in no particular order. So, for example, this record 17 4 5 2 14 22 indicates that student 17 knows 4 students: 5, 2, and so on.  The records for all the students in the incoming class are represented as the list of numbers that results from concatenating all the student records together.  Spaces and line breaks are irrelevent in this format.  Thus, this 1 1 2 2 1 1 is a whole database, indicating that there are only two students in the incoming class, and they know each other; and this 1 2 3 4 2 2 3 4 3 2 1 2 4 2 1 2 indicates that 1 doesn't know 2, and 3 doesn't know 4, but all other pairs know each other. The database has been checked for consistency, so that if A knows B, then B knows A.","Your output should begin with a number that tells how long it will take to complete the introductions in the best possible legal class assignment.  For the simple two student problem above, the only legal answer is 0","1 2 3 4 
2 2 3 4 
3 2 1 2 
4 2 1 2 ",0
Human Gene Functions,http://poj.org/problem?id=1080, 1000MS, 10000K,"It is well known that a human gene can be considered as a sequence, consisting of four nucleotides, which are simply denoted by four letters, A, C, G, and T. Biologists have been interested in identifying human genes and  determining  their  functions,  because  these  can  be  used  to  diagnose  human  diseases  and  to  design  new drugs for them.  A human gene can be  identified  through a  series of  time-consuming biological experiments, often with  the help of computer programs. Once a sequence of a gene is obtained, the next job is to determine its function. One of the methods for biologists to use in determining the function of a new gene sequence that they have just identified is to search a database with the new gene as a query. The database to be searched stores many gene sequences and their functions – many researchers have been submitting their genes and functions to the database and the database is freely accessible through the Internet.  A database  search will  return a  list of gene  sequences  from  the database  that are  similar to  the query gene. Biologists  assume  that  sequence  similarity  often  implies  functional  similarity.  So,  the  function  of  the  new gene might be one of the functions that the genes from the list have. To exactly determine which one is the right one another series of biological experiments will be needed.  Your job is to make a program that compares two genes and determines their similarity as explained below. Your program may be used as a part of the database search if you can provide an efficient one.  Given two genes AGTGATG and GTTAG, how similar are they? One of the methods to measure the similarity of two genes is called alignment. In an alignment, spaces are inserted, if necessary, in appropriate positions of the genes to make them equally long and score the resulting genes according to a scoring matrix.   For example, one space is inserted into AGTGATG to result in AGTGAT-G, and three spaces are inserted into GTTAG  to  result  in –GT--TAG. A  space  is denoted by  a minus  sign  (-). The  two genes are now of  equal length. These two strings are aligned:   AGTGAT-G -GT--TAG   In this alignment, there are four matches, namely, G in the second position, T in the third, T in the sixth,  and G in the eighth. Each pair of aligned characters is assigned a score according to the following scoring matrix.   denotes  that  a  space-space match  is  not  allowed. The  score  of  the  alignment  above  is  (-3)+5+5+(-2)+(-3)+5+(-3)+5=9.  Of course, many other alignments are possible. One is shown below (a different number of spaces are inserted into different positions):  AGTGATG -GTTA-G  This alignment gives a score of  (-3)+5+5+(-2)+5+(-1) +5=14. So, this one is better than the previous one. As a matter of fact, this one is optimal since no other alignment can have a higher score. So, it is said that the similarity of the two genes is 14. ","The input consists of T  test cases. The number of test cases  ) (T  is given in the first line of the input file. Each test case consists of two lines: each line contains an integer, the length of a gene, followed by a gene sequence. The length of each gene sequence is at least one and does not exceed 100. ","The output should print the similarity of each test case, one per line. ","2 
7 AGTGATG 
5 GTTAG 
7 AGCTATT 
9 AGCTTTAAA ","14
21 "
Ratio,http://poj.org/problem?id=1079, 1000MS, 10000K,"If you ever see a televised report on stock market activity, you'll hear the anchorperson say something like ``Gainers outnumbered losers 14 to 9,'' which means that for every 14 stocks that increased in value that day, approximately 9 other stocks declined in value. Often, as you hear that, you'll see on the screen something like this: Gainers 1498 Losers   902 As a person with a head for numbers, you'll notice that the anchorperson could have said ``Gainers outnumbered losers 5 to 3'', which is a more accurate approximation to what really happened.  After all, the exact ratio of winners to losers is (to the nearest millionth) 1.660754, and he reported a ratio of 14 to 9, which is 1.555555, for an error of 0.105199; he could have said ``5 to 3'', and introduced an error of only 1.666667-1.660754=0.005913.  The estimate ``5 to 3'' is not as accurate as ``1498 to 902'' of course; evidently, another goal is to use small integers to express the ratio. So, why did the anchorperson say ``14 to 9?''  Because his algorithm is to lop off the last two digits of each number and use those as the approximate ratio. What the anchorman needs is a list of rational approximations of increasing accuracy, so that he can pick one to read on the air. Specifically, he needs a sequence {a_1, a_2, ..., a_n} where a_1 is a rational number with denominator 1 that most exactly matches the true ratio of winners to losers (rounding up in case of ties), a_{i+1} is the rational number with least denominator that provides a more accurate approximation than a_i, and a_n is the exact ratio, expressed with the least possible denominator.  Given this sequence, the anchorperson can decide which ratio gives the best tradeoff between accuracy and simplicity. For example, if 5 stocks rose in price and 4 fell, the best approximation with denominator 1 is 1/1; that is, for every stock that fell, about one rose.  This answer differs from the exact answer by 0.25 (1.0 vs 1.25).  The best approximations with two in the denominator are 2/2 and 3/2, but neither is an improvement on the ratio 1/1, so neither would be considered.  The best approximation with three in the denominator 4/3, is more accurate than any seen so far, so it is one that should be reported.  Finally, of course, 5/4 is exactly the ratio, and so it is the last number reported in the sequence. Can you automate this process and help the anchorpeople? ","input contains several pairs of positive integers. Each pair is on a line by itself, beginning in the first column and with a space between the two numbers.  The first number of a pair is the number of gaining stocks for the day, and the second number is the number of losing stocks for the day.   The total number of stocks never exceeds 5000. ","For each input pair, the standard output should contain a series of approximations to the ratio of gainers to losers.  The first approximation has '1' as denominator, and the last is exactly the ratio of gainers to losers, expressed as a fraction with least possible denominator.  The approximations in between are increasingly accurate and have increasing denominators, as described above. The approximations for a pair are printed one to a line, beginning in column one, with the numerator and denominator of an approximation separated by a slash (``/'').  A blank line separates one sequence of approximations from another. ","5 4 
1498 902 ","1/1 
4/3 
5/4 

2/1 
3/2 
5/3 
48/29 
53/32 
58/35 
63/38 
68/41 
73/44 
78/47 
83/50 
88/53 
93/56 
377/227 
470/283 
563/339 
656/395 
749/451"
Gizilch,http://poj.org/problem?id=1078, 1000MS, 10000K,"The game of gizilch has very simple rules.  First 100 grapes are labeled, in nontoxic ink, with the numbers 1 to 100.  Then, with a cry of ``GIZILCH!'', the referee fires the grapes up into the air with a giant gizilcher.  The two players, who each start with a score of  ``1'', race to eat the falling (or, shortly thereafter, fallen) grapes and, at the same time, multiply their scores by the numbers written on the grapes they eat.  After a minute, the hungry squirrels are let loose to finish the remaining grapes, and each contestant reports his score, the product of the numbers on the grapes he's eaten.  The unofficial winner is the player who announces the highest score. Inevitably, though, disputes arise, and so the official winner is not determined until the disputes are resolved.  The player who claims the lower score is entitled to challenge his opponent's score.  The player with the lower score is presumed to have told the truth, because if he were to lie about his score, he would surely come up with a bigger better lie.  The challenge is upheld if the player with the higher score has a score that cannot be achieved with grapes not eaten by the challenging player.  So, if the challenge is successful, the player claiming the lower score wins. So, for example, if one player claims 343 points and the other claims 49, then clearly the first player is lying; the only way to score 343 is by eating grapes labeled 7 and 49, and the only way to score 49 is by eating a grape labeled 49.  Since each of two scores requires eating the grape labeled 49, the one claiming 343 points is presumed to be lying. On the other hand, if one player claims 162 points and the other claims 81, it is possible for both to be telling the truth (e.g. one eats grapes 2, 3 and 27, while the other eats grape 81), so the challenge would not be upheld. Unfortunately, anyone who is willing to referee a game of gizilch is likely to have himself consumed so many grapes (in a liquid form) that he or she could not reasonably be expected to perform the intricate calculations that refereeing requires.  Hence the need for you, sober programmer, to provide a software solution. ","Pairs of unequal, positive numbers, with each pair on a single line, that are claimed scores from a game of gizilch. ","Numbers, one to a line, that are the winning scores, assuming that the player with the lower score always challenges the outcome. ","343 49 
3599 610 
62 36 ","49 
610 
62 "
Eight,http://poj.org/problem?id=1077, 1000MS, 65536K,"The 15-puzzle has been around for over 100 years; even if you don't know it by that name, you've seen it.  It is constructed with 15 sliding tiles, each with a number from 1 to 15 on it, and all packed into a 4 by 4 frame with one tile missing.  Let's call the missing tile 'x'; the object of the puzzle is to arrange the tiles so that they are ordered as:  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15  x where the only legal operation is to exchange 'x' with one of the tiles with which it shares an edge.  As an example, the following sequence of moves solves a slightly scrambled puzzle:  1  2  3  4    1  2  3  4    1  2  3  4    1  2  3  4  5  6  7  8    5  6  7  8    5  6  7  8    5  6  7  8  9  x 10 12    9 10  x 12    9 10 11 12    9 10 11 12 13 14 11 15   13 14 11 15   13 14  x 15   13 14 15  x            r->           d->           r-> The letters in the previous row indicate which neighbor of the 'x' tile is swapped with the 'x' tile at each step; legal values are 'r','l','u' and 'd', for right, left, up, and down, respectively. Not all puzzles can be solved; in 1870, a man named Sam Loyd was famous for distributing an unsolvable version of the puzzle, and frustrating many people.  In fact, all you have to do to make a regular puzzle into an unsolvable one is to swap two tiles (not counting the missing 'x' tile, of course). In this problem, you will write a program for solving the less well-known 8-puzzle, composed of tiles on a three by three arrangement. ","You will receive  a description of a configuration of the 8 puzzle.  The description is just a list of the tiles in their initial positions, with the rows listed from top to bottom, and the tiles listed from left to right within a row, where the tiles are represented by numbers 1 to 8, plus 'x'.  For example, this puzzle  1  2  3  x  4  6  7  5  8 is described by this list:  1 2 3 x 4 6 7 5 8 ","You will print to standard output either the word ``unsolvable'', if the puzzle has no solution, or a string consisting entirely of the letters 'r', 'l', 'u' and 'd' that describes a series of moves that produce a solution.  The string should include no spaces and start at the beginning of the line. ", 2  3  4  1  5  x  7  6  8 ,ullddrurdllurdruldr
Bowl,http://poj.org/problem?id=1076, 1000MS, 65536K,"Technology hasn't come quickly to Joe's Bowl-a-rama.  Minimum wage teens, and not those fancy machines, still reset the pins, and the grizzled veteran bowlers still mark up their own score sheets. Unfortunately for Joe Junior, who now runs the Bowl-a-rama, people  his age are a little shaky on the scoring, especially after the second beer, and are staying away in droves, bowling instead at the new CyberBowl 2000 down the street, which scores automatically.  Joe Junior figures that if he puts a cheap PC next to every lane, he can get a cheap, semi-automatic scoring system going.  His plan is for the PC's to run software that only requires a bowler to enter the  number of pins that remain standing after every throw -- and the software will keep score and tell the bowler when his game is over.  Joe  Junior would like to hire you to write the software. Of course, since you may not know how to score a game of bowling either, Joe Junior has provided a description of the rules.  The basic game consists of ten frames.  In a frame, you get two chances to throw a ball down the alley and knock over as many pins as you can.   There are ten pins standing at the beginning of a frame, and none are replaced after getting knocked over on the first ball, so the most pins you can knock over in a frame is ten.  You get one point for each pin knocked over.  In addition, there are two bonuses you can  earn. If you knock over all ten pins on your first ball of the frame, you have scored a ``strike''; besides the ten points for the pins, your score in this frame is increased by the total number of pins knocked down with your next two balls.  Those next two balls are usually part of another frame (or two) and score points in that frame (or those frames) as well.  If you knock over all ten pins in a frame, but it takes you two balls to do it, you have scored a ``spare''; in addition to your ten points for pins knocked down, your score for the frame is increased by the number of pins you knock down on your next ball.  Of course, those pins also count as part of the next frame.  If you  score a spare (or strike) in the final (tenth) frame, you are entitled to one (or two) extra balls to determine your tenth frame bonus.  A perfect game scores 300 points, because each frame scores 30, 10 for knocking down 10 pins, and 20 for knocking down 20 pins with the next two balls combined. Now, are you ready to sign on to write the software? ","Input contains several complete or partial games.  A game is described by a single line with a single name, not to exceed 12 characters, and sequence of numbers, one for each ball thrown indicating the number of pins still standing after that throw,ended with -1. According  to the rules, there are from 11 to 21 throws in a game; no input line will show throws beyond the last throw of the game.  The number of games described in a file is not predetermined, so you'll have to detect the end of the input file. ","The standard output will contain, on successful completion of the program, two output lines for each input line.  The first output line contains the name of the bowler and a record of the throws in each frame.  This record shows, for each frame, the number of pins knocked down for each throw as a digit, with some exceptions.  For a throw that knocks down no pins, a dash (\verb$-$) is used instead of a `0'. An 'X' indicates a throw that knocks down all 10 pins on the first try.  A slash ('/') indicates a throw that finishes knocking down all the pins, after the previous throw left some standing.  Otherwise, a throw is shown as a digit (`1' to `9').  The number of throws in a frame may be one (a strike in frames 1 to 9), or three (a strike or spare in frame 10, followed by bonus balls), but is usually two.  Here are examples of throw markings for a variety of situations: MarkingComment81Knocked down 8 balls on the first throw, one on the next7/Knocked down 7 balls on the first throw, then the restXKnocked down all balls on the first throw9-Knocked  down 9 balls on the first throw, none on the next8/XKnocked down 8 balls on the first throw of  frame 10, then the rest,then all the pins on the bonus throwX-/Knocked down ten balls on the first  throw of frame 10, then missed all the pins on the first bonus throw and knocked them all down on thesecond bonus throwThe second output line shows cumulative scores.  The cumulative score for the first frame is just the score for pins knocked down in frame, plus bonus points if they apply.  The cumulative score for any other frame is the cumulative score for the previous frame plus the score for pins knocked down in that frame, plus the bonus pins that may have been earned for a strike or spare in this frame.  It is possible to have markings on line one for a frame, but no score on line two, in the event that the frame is a strike or spare but the bonus points for the frame aren't yet known. The format for this output requires that the bowler's name be left-justified.  The fields for each frame are three characters wide, with a space separating each field.  The fields begin in columns 14, 18, 22, and so on.  The record of the throws in the first line is left justified in its field.  The cumulative score is right justified in its field.  There is a blank line that separates the scores of one bowler from the scores of another. ","Chuck 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 -1
Solly 0 0 0 0 0 0 0 0 0 0 0 8 -1
Lothar 10 0 10 0 10 0 -1
Brutus 5 1 2 0 6 0 9 -1
McGillicuddy 0 0 1 0 -1
Homer 0 10 0 0 0 0 -1
Barney 0 0 0 0 0 0 0 0 0 0 1 0 -1","The line of digits is intended to guide you in proper output alignment, and is not part of the output that your solution should produce. 
  
1234567890123456789012345678901234567890123456789012 
Chuck        9/  9/  9/  9/  9/  9/  9/  9/  9/  9/9 
              19  38  57  76  95 114 133 152 171 190 

Solly        X   X   X   X   X   X   X   X   X   XX2 
              30  60  90 120 150 180 210 240 270 292 

Lothar       -/  -/  -/ 
              10  20 

Brutus       54  8/  4/  1 
               9  23  34 

McGillicuddy X   X   9/ 
              29  49 

Homer        X   -/  X   X   X 
              20  40  70 

Barney       X   X   X   X   X   X   X   X   X   X9/ 
              30  60  90 120 150 180 210 240 269 289 
"
University Entrance Examination,http://poj.org/problem?id=1075, 1000MS, 10000K,"There is a fierce competition among high-school graduates in Iran to pass the centralized nationwide university entrance examination. Ministry of Science, Research, and Technology has set up the Education Evaluation Organization (EEO) to take care of all aspects of this big exam. This year the EEO managed to select some 150,000 students to enter universities out of 1.4 million high school graduates participated in a tough 4.5 hours multiple-choice exam. This annual event is usually preceded by a multi-billion Rial business offering preparatory courses to enthusiastic students. A few weeks after the big exam day, each participant receives a score sheet, and a list of Field-Department-University (FDU), displaying each field of study in the universities’ departments (e.g., the Software Engineering field of Computer Engineering department at Sharif University of Technology) along with their capacity for that year. The eligible participants (those who have scored enough to be allowed to declare their FDU priorities) fill out a priority indication form, and declare the FDUs they like to enter, in the order of their preference. The EEO processes the forms, and considering the total score, the participant’s FDU priority list, and some other selection rules, enters the accepted participants’ names in the list of each FDU, until all capacities are exhausted. Those who are not entered in a list are considered failed and may try again next year. Each accepted participant’s name may be entered in only one list.One of the interesting selection rules is to persuade participants to enter universities in the vicinity of their home towns. This is to help reduce the number of requests for staying in the university dormitories. The selection process is so complex and so sensitive to many, that EEO has decided to hire the very best programmers in Iran to design a new selection algorithm and write a completely new program for what they have been doing for years. ACM programming contest is where these programmers can be found.There are N students S1 to SN , and M items F1 to FM , each representing one of the FDUs. There are also a number of geographic regions. For each participant, the total score, the geographic region where his/her high school diploma was awarded, and a priority list of his/her wanted FDUs are available. For each FDU, the geographic region where the corresponding university is located, and its capacity for that year is recorded.Write a program to compute the list of accepted students with the FDU they can enter to, given the above list of input data. Your program must abide with the following rules:1. (Local student selection rule) Suppose two students A and B have both selected F in their priority lists and F is in region R. Also suppose that score of A is greater than B's score. Then, if B is from region R (local) and A is from other regions (non-local), and B's score is greater than 70% of A's score, then B has priority over A to enter F. In all other cases A has priority over B to enter F.2. (Fairness rule) Students should be treated according to their priority list of FDUs. That is, an accepted student will be accepted to the first possible FDU he/she can enter.Note: We assume that scores are all different integer values.",The first line of the input contains a single integer t (1 ,"Outputs for different test cases are separated by exactly one blank line. For each test case, you should write N lines, one for each of the N students. If student i has been accepted to FDU Fj, then ith line should contain j, and not accepted, if that student has not been accepted in any FDU of his/her interest. ","1
9 2
1 100 2 1 2
2 80 2 2 1
1 90 1 1
2 40 1 2
2 50 1 1
1 60 1 2
2 75 1 1
1 95 1 1
2 30 1 2
1 3
2 4
","1
2
1
2
not accepted
2
not accepted
1
2
"
Parallel Expectations,http://poj.org/problem?id=1074, 1000MS, 10000K,"We are to predict some facts about the behavior of a single processor designed for running two programs in parallel. Programs are sequences of commands according to the following grammar: ->   * ->   :=    ->  + | -  ->   | A  is a sequence of (at most 20) alphanumeric characters (A...Z, a...z, and 0...9) starting with a letter (not case sensitive). A  is an unsigned integer number (less than 100). There may be arbitrary number of blank or tab characters between tokens.Before execution, programs are translated into machine language. A statement of the form X := Y + Z is translated to the following set of machine instructions:Mov R1, YMov R2, ZAdd R1, R2Mov X, R1A MOV instruction copies the content of its second operand into its first operand. An Add (Sub) instruction, adds (subtracts) its second operand from its first operand and the result is stored in the first operand. Note that Y and Z denote either a variable or an integer constant. Instructions generated for the command X := Y - Z is similar to the above instructions, except that Sub command is used instead of Add.The processor is given two machine language programs and starts executing them from the first instruction. In each step, it randomly selects one of the two programs and runs the next instruction from the selected program. This continues until one program reaches its end. In this situation, the remaining instructions from the other one are executed sequentially to the end and the processor stops. It is assumed that all variables are shared between two programs, but each program has a separate register set. The goal of this program is to compute the expected final value of all variables among all possible executions of the programs. More precisely, we want to consider every possible execution of the two programs and for each variable, calculate the average of its final value in different executions. It is assumed that the initial value of all variables is zero.","The first line of the input contains a single integer t (1 OutputFor each test case, the output file should contain the expected final value of all variables in alphabetical order of variable names (digits precede letters in this order). Output for different test cases should be separated by exactly one blank line. Round the numbers in the output to 4 digits after decimal point. Do not omit trailing zeros after decimal point (e.g. write 1.2000 instead of 1.2).Sample Input1
S := 1 + 3
END
S := S+S
END
Sample Output3.0000SourceTehran 2001","For each test case, the output file should contain the expected final value of all variables in alphabetical order of variable names (digits precede letters in this order). Output for different test cases should be separated by exactly one blank line. Round the numbers in the output to 4 digits after decimal point. Do not omit trailing zeros after decimal point (e.g. write 1.2000 instead of 1.2).","1
S := 1 + 3
END
S := S+S
END
",3.0000
The Willy Memorial Program,http://poj.org/problem?id=1073, 1000MS, 10000K,"Willy the spider used to live in the chemistry laboratory of Dr. Petro. He used to wander about the lab pipes and sometimes inside empty ones. One night while he was in a pipe, he fell asleep. The next morning, Dr. Petro came to the lab. He didn't notice Willy while opening the valve to fill the pipes with hot water. Meanwhile, Stanley the gray mouse got what was going to happen. No time to lose! Stan ran hard to reach the valve before Willy gets drawn, but... Alas! He couldn't make it! Poor Willy was boiled in hot water, but his memory is still in our hearts. Though Stan tried his best, we want to write a program, in the memory of Willy, to compute the time Stan had, to rescue Willy, assuming he started to run just when the doctor opened the valve.To simplify the problem, assume the pipes are all vertical cylinders with diameter 1 cm. Every pipe is open from the top and closed at the bottom. Some of the pipes are connected through special horizontal pipes named links. The links have very high flow capacity, but are so tiny that at any given time, the volume of water inside them is negligible. The water enters from top of one of the pipes with a constant rate of 0.25PI cm3/sec and begins to fill the pipe from the bottom until the water reaches a link through which it flows horizontally and begins to fill the connected pipe. From elementary physics we know if two pipes are connected and the surface of the water is above the connecting link, the level of water in both pipes remains the same when we try to fill one of them. In this case the water fills each pipe with a rate equal to half of the rate of incoming water. As an example, consider the following configuration:First, the lower 2 centimeters of the left pipe is filled with water at full rate, then, the lower 3 centimeters of the right pipe is filled, and after that, the upper part of the two pipes are filled in parallel at half rate. The input to your program is a configuration of pipes and links, and a target level in one of the pipes (the heavy dotted line in the above figure). The program should report how long it takes for the level of water to reach the target level. For the above configuration, the output is 9 seconds.It is assumed that the water falls very rapidly, such that the time required for the water to fall can be neglected. The target level is always assumed to be a bit higher than the specified level for it. As an example, if we set the target point to level 4 in the left pipe in the figure above, the elapsed time for water to reach that target is assumed to be 5 (not 2), Also note that if the water reaches to the top of a pipe (say in level x), it won't pour out outside the pipe until empty spaces in connected pipes below level x are filled (if can be filled, i.e. the level of water reaches the connecting links). (Note that there may be some links at level x, to which water is entered). After all such spaces are filled; the water level would not go up further.","To describe positions, we assume the coordinates are expressed as (x, y) and the origin lies in the top-left of all pipes and links. (Note that y coordinates are increased downwards). All coordinates are integer numbers between 0 and 100, inclusive.The first line of the input file contains a single integer t (1 After input data describing the pipes, there is a line containing a single integer l, which is the number of links (0 The last line for each test case contains two numbers. The first is the number of target pipe (starting from one, with the order appeared in test data). The second line is the desired y for the level of water in the target pipe (note that the specified level may be out of the pipe at all).You can assume the following about the input:.	The water enters into the first pipe..	No link crosses a pipe..	No two links have the same y coordinates..	No two pipes have the same upper-left x coordinates..	Both endpoints of each link are connected to pipes.","The output should contain exactly t lines with no blank lines in between, each corresponding to one test case. Each output line should contain the time required for the water to reach the target level in the target pipe (an integer number). If in a specific test case, the water never reaches the target level, the line should contain No Solution string in it.","1
2
2 0 6
5 1 6
1
3 4 2
2 2
",9
Puzzle Out,http://poj.org/problem?id=1072, 5000MS, 65536K,"The scientific committee members of the 26th ACM/ICPC, who design the contest problems, use the following encryption algorithm to communicate the problem drafts securely through the Internet. To encrypt a text, all occurrences of each letter is replaced with another letter (possibly itself), such that no two letters are encrypted to the same letter. Both original and encrypted texts consist of only upper-case letters and blanks. Blanks are not encrypted and are repeated exactly in the encrypted text. As an example, the string GSRH RH GSV URIHG HZNKOV is the encrypted form of THIS IS THE FIRST SAMPLE according to the encryption table (A -> Z, B -> Y, C -> X,..., Z -> A).A recipient of a problem draft has lost the encryption table, but he has a dictionary which includes all the possible words appearing in the problems. You are to help him set up a decryption table to enable him restore the original problem draft from the encrypted one. Given a dictionary of the original words used in the text, and the encrypted text, we want to find the right encryption table such that after decrypting the given encrypted text back to the original one, all words can be found in the dictionary. ","The first part of the input file is a dictionary of English words common to all test cases. The first line of the file is d (1 OutputThe output contains exactly t lines, each corresponding to a test case. Each line should contain a single string of 26 characters which is the encryption of the string ABCDEFGHIJKLMNOPQRSTUVWXYZ according to the encryption table used in the test case. Letters in the output string should be in uppercase. It is possible that some letters do not appear in the encrypted text at all. In this case, put a * mark in place of those letters not appearing in the decrypted version of the input text. If the test case has no solution, the output line should contain #No solution#. If there is more than one possible encryption table for a test case, the output line should contain #More than one solution#.Sample Input14
BE
CHANGE
FIRST
IN
IS
MUST
SAMPLE
SEE
THE
THIS
TO
WISH
WORLD
YOU
4

GSRH RH GSV URIHG HZNKOV

IZM BMVU    SP UGP 
RGTANP IZM KFVG UZ VPP 
FA UGP KZWCQ

XYZ ABCDEFG

XZY ABD



Sample OutputZ***VU*SR**ON**K*IHG******
TSRQP*NGF**CBAZ**WVUM*K*I*
#No solution#
#More than one solution#SourceTehran 2001","The output contains exactly t lines, each corresponding to a test case. Each line should contain a single string of 26 characters which is the encryption of the string ABCDEFGHIJKLMNOPQRSTUVWXYZ according to the encryption table used in the test case. Letters in the output string should be in uppercase. It is possible that some letters do not appear in the encrypted text at all. In this case, put a * mark in place of those letters not appearing in the decrypted version of the input text. If the test case has no solution, the output line should contain #No solution#. If there is more than one possible encryption table for a test case, the output line should contain #More than one solution#.","14
BE
CHANGE
FIRST
IN
IS
MUST
SAMPLE
SEE
THE
THIS
TO
WISH
WORLD
YOU
4

GSRH RH GSV URIHG HZNKOV

IZM BMVU    SP UGP 
RGTANP IZM KFVG UZ VPP 
FA UGP KZWCQ

XYZ ABCDEFG

XZY ABD



","Z***VU*SR**ON**K*IHG******
TSRQP*NGF**CBAZ**WVUM*K*I*
#No solution#
#More than one solution#"
Illusive Chase,http://poj.org/problem?id=1071, 1000MS, 10000K,"Tom the robocat is presented in a Robotics Exhibition for an enthusiastic audience of youngsters, placed around an m * n field. Tom which is turned off initially is placed in some arbitrary point in the field by a volunteer from the audience. At time zero of the show, Tom is turned on by a remote control. Poor Tom is shown a holographic illusion of Jerry in a short distance such that a direct path between them is either vertical or horizontal. There may be obstacles in the field, but the illusion is always placed such that in the direct path between Tom and the illusion, there would be no obstacles. Tom tries to reach Jerry, but as soon as he gets there, the illusion changes its place and the chase goes on. Let's call each chase in one direction (up, down, left, and right), a chase trip. Each trip starts from where the last illusion was deemed and ends where the next illusion is deemed out. After a number of chase trips, the holographic illusion no more shows up, and poor Tom wonders what to do next. At this time, he is signaled that for sure, if he returns to where he started the chase, a real Jerry is sleeping and he can catch it.To simplify the problem, we can consider the field as a grid of squares. Some of the squares are occupied with obstacles. At any instant, Tom is in some unoccupied square of the grid and so is Jerry, such that the direct path between them is either horizontal or vertical. It's assumed that each time Tom is shown an illusion; he can reach it by moving only in one of the four directions, without bumping into an obstacle. Tom moves into an adjacent square of the grid by taking one and only one step.The problem is that Tom's logging mechanism is a bit fuzzy, thus the number of steps he has taken in each chase trip is logged as an interval of integers, e.g. 2 to 5 steps to the left. Now is your turn to send a program to Tom's memory to help him go back. But to ease your task in this contest, your program should only count all possible places that he might have started the chase from.","The first line of the input contains a single integer t (1 OutputFor each test case, there should be a single line, containing an integer indicating the number of cells that Tom might have started the chase from.Sample Input2
6 6
0 0 0 0 0 0
0 0 0 1 1 0
0 1 0 0 0 0
0 0 0 1 0 0
0 0 0 1 0 1
0 0 0 0 0 1
1 2 R
1 2 D
1 1 R
0 0
3 4
0 0 0 0
0 0 0 0
0 0 0 0
1 2 R
3 7 U
0 0
Sample Output10
0
SourceTehran 2001","For each test case, there should be a single line, containing an integer indicating the number of cells that Tom might have started the chase from.","2
6 6
0 0 0 0 0 0
0 0 0 1 1 0
0 1 0 0 0 0
0 0 0 1 0 0
0 0 0 1 0 1
0 0 0 0 0 1
1 2 R
1 2 D
1 1 R
0 0
3 4
0 0 0 0
0 0 0 0
0 0 0 0
1 2 R
3 7 U
0 0
","10
0
"
Deformed Wheel,http://poj.org/problem?id=1070, 1000MS, 10000K,"The village's carpentry is located by a hill side. The carpenter's two little boys play with a piece of wood which looks like a deformed wheel with two identical convex polygon-shaped faces. One boy sets the wooden wheel on a slope at the hill top and let it roll down. The other boy is to quickly place himself at where he guesses the rolling wood would stop. Your program is to help him make the right guess.More formally, we consider the wooden wheel as a simple convex polygon and we approximate the hill by a sequence of connected line segments with decreasing slopes. The slope of the last segment in the sequence is assumed to be zero, and the slope of the first segment is assumed to be a positive number. Initially, the wheel is placed on the hill such that there is at least one point of contact between the wheel and segments. For example in the following figure, the wheel in its initial position is drawn in solid lines, while the final position is drawn in dashed lines.At any instant, the wheel rotates around one of its vertices, say P, if the y-coordinate of its center of gravity is decreased (note that this condition is necessary at any instant during the motion). It can be easily shown that at any instant, there is at most one such vertex. Rotation around P is stopped when the wheel touches a segment. The motion continues until no vertex can be found such that the wheel can rotate around it. At any instant, assume that changing the position of the center of gravity in any direction for at most 10-5 units, does not affect the stability of the wheel. Also assume that the friction between the wheel and the surface of the hill is so high that the wheel never slides on the surface.","The first line of the input contains a single integer t (1 OutputFor each test case, there should be a single line in the output , containing two numbers which are x and y coordinates of the wheel's center of gravity. Round the numbers in the output to 3 digits after decimal point.Sample Input1
4
40 30
30 37
24 30
30 26
27 29
30 1
100 0
40 30
Sample Output28.854 20.031SourceTehran 2001","For each test case, there should be a single line in the output , containing two numbers which are x and y coordinates of the wheel's center of gravity. Round the numbers in the output to 3 digits after decimal point.","1
4
40 30
30 37
24 30
30 26
27 29
30 1
100 0
40 30
",28.854 20.031
The Bermuda Triangle,http://poj.org/problem?id=1069, 2000MS, 32768K,"People in the hidden region of the Bermuda Triangle make everything they need in triangular shapes. One day, someone decided to break the rule and bake a hexagonally shaped cake. But as usual, he has to serve the cake in triangular pieces. The pieces are equilateral triangles but in different sizes for different people. He can use as many triangles as needed to cut the cake into pieces, such that nothing remains from the cake. For example, the following figure shows one way that a hexagon with side 9 can be cut into triangles with side 2 and 3. (The cake is cut along the thick lines, thin lines are drawn to show the sizes).Input is a hexagon and triangle types (specified by the length of their sides) and the goal is to decide if the hexagon can be completely divided by the given triangle types.","The first line of the input file contains a single integer t (1 OutputThere should be one output line per test case containing either YES or NO depending on whether the hexagon can be completely divided by the given triangle types.Sample Input3
5 2 2 3
7 2 3 2
13 2 2 3
Sample OutputNO
NO
YES
SourceTehran 2001",There should be one output line per test case containing either YES or NO depending on whether the hexagon can be completely divided by the given triangle types.,"3
5 2 2 3
7 2 3 2
13 2 2 3
","NO
NO
YES
"
Parencodings,http://poj.org/problem?id=1068, 1000MS, 10000K,"Let S = s1 s2...s2n  be a well-formed string of parentheses. S can be encoded in two different ways:q	By an integer sequence P = p1 p2...pn where pi is the number of left parentheses before the ith right parenthesis in S (P-sequence).q	By an integer sequence W = w1 w2...wn where for each right parenthesis, say a in S, we associate an integer which is the number of right parentheses counting from the matched left parenthesis of a up to a. (W-sequence).Following is an example of the above encodings:	S		(((()()())))	P-sequence	    4 5 6666	W-sequence	    1 1 1456Write a program to convert P-sequence of a well-formed string to the W-sequence of the same string.","The first line of the input contains a single integer t (1 OutputThe output file consists of exactly t lines corresponding to test cases. For each test case, the output line should contain n integers describing the W-sequence of the string corresponding to its given P-sequence.Sample Input2
6
4 5 6 6 6 6
9 
4 6 6 6 6 8 9 9 9
Sample Output1 1 1 4 5 6
1 1 2 4 5 1 1 3 9SourceTehran 2001","The output file consists of exactly t lines corresponding to test cases. For each test case, the output line should contain n integers describing the W-sequence of the string corresponding to its given P-sequence.","2
6
4 5 6 6 6 6
9 
4 6 6 6 6 8 9 9 9
","1 1 1 4 5 6
1 1 2 4 5 1 1 3 9"
取石子游戏,http://poj.org/problem?id=1067, 1000MS, 10000K,有两堆石子，数量任意，可以不同。游戏开始由两个人轮流取石子。游戏规定，每次有两种不同的取法，一是可以在任意的一堆中取走任意多的石子；二是可以在两堆中同时取走相同数量的石子。最后把石子全部取完者为胜者。现在给出初始的两堆石子的数目，如果轮到你先取，假设双方都采取最好的策略，问最后你是胜者还是败者。,"输入包含若干行，表示若干种石子的初始情况，其中每一行包含两个非负整数a和b，表示两堆石子的数目，a和b都不大于1,000,000,000。",输出对应也有若干行，每行包含一个数字1或0，如果最后你是胜者，则为1，反之，则为0。,"2 1
8 4
4 7","0
1
0"
Treasure Hunt,http://poj.org/problem?id=1066, 1000MS, 10000K,"Archeologists from the Antiquities and Curios Museum (ACM) have flown to Egypt to examine the great pyramid of Key-Ops. Using state-of-the-art technology they are able to determine that the lower floor of the pyramid is constructed from a series of straightline walls, which intersect to form numerous enclosed chambers. Currently, no doors exist to allow access to any chamber. This state-of-the-art technology has also pinpointed the location of the treasure room. What these dedicated (and greedy) archeologists want to do is blast doors through the walls to get to the treasure room. However, to minimize the damage to the artwork in the intervening chambers (and stay under their government grant for dynamite) they want to blast through the minimum number of doors. For structural integrity purposes, doors should only be blasted at the midpoint of the wall of the room being entered. You are to write a program which determines this minimum number of doors. An example is shown below: ","The input will consist of one case. The first line will be an integer n (0  OutputPrint a single line listing the minimum number of doors which need to be created, in the format shown below. Sample Input7 
20 0 37 100 
40 0 76 100 
85 0 0 75 
100 90 0 90 
0 71 100 61 
0 14 100 38 
100 47 47 100 
54.5 55.4 Sample OutputNumber of doors = 2 SourceEast Central North America 1999","Print a single line listing the minimum number of doors which need to be created, in the format shown below. ","7 
20 0 37 100 
40 0 76 100 
85 0 0 75 
100 90 0 90 
0 71 100 61 
0 14 100 38 
100 47 47 100 
54.5 55.4 ",Number of doors = 2 
Wooden Sticks,http://poj.org/problem?id=1065, 1000MS, 10000K,"There is a pile of  n  wooden sticks. The length and weight of each stick are known in advance. The sticks are to be processed by a woodworking machine in one by one fashion. It needs some time, called setup time, for the  machine  to  prepare  processing  a  stick.  The  setup  times  are  associated  with  cleaning  operations  and changing tools and shapes in the machine. The setup times of the woodworking machine are given as follows:  (a) The setup time for the first wooden stick is 1 minute.  (b) Right after processing a stick of length  l  and weight  w , the machine will need no setup time for a stick of length  l'  and weight  w'  if l You are to find the minimum setup time to process a given pile of  n  wooden sticks. For example, if you have five sticks whose pairs of length and weight are  ( 9 , 4 ) ,  ( 2 , 5 ) ,  ( 1 , 2 ) ,  ( 5 , 3 ) , and  ( 4 , 1 ) , then the minimum setup time should be 2 minutes since there is a sequence of pairs  ( 4 , 1 ) ,  ( 5 , 3 ) ,  ( 9 , 4 ) ,  ( 1 , 2 ) ,  ( 2 , 5 ) . ","The input consists of T  test cases. The number of test cases  (T)  is given in the first line of the input file. Each test  case  consists  of  two  lines: The  first  line  has  an  integer  n ,  1 OutputThe output should contain the minimum setup time in minutes, one per line. Sample Input3 
5 
4 9 5 2 2 1 3 5 1 4 
3 
2 2 1 1 2 2 
3 
1 3 2 2 3 1 
Sample Output2
1
3SourceTaejon 2001","The output should contain the minimum setup time in minutes, one per line. ","3 
5 
4 9 5 2 2 1 3 5 1 4 
3 
2 2 1 1 2 2 
3 
1 3 2 2 3 1 
","2
1
3"
Cable master,http://poj.org/problem?id=1064, 1000MS, 10000K,"Inhabitants of the Wonderland have decided to hold a regional programming contest. The Judging Committee has volunteered and has promised to organize the most honest contest ever. It was decided to connect computers for the contestants using a ""star"" topology - i.e. connect them all to a single central hub. To organize a truly honest contest, the Head of the Judging Committee has decreed to place all contestants evenly around the hub on an equal distance from it.To buy network cables, the Judging Committee has contacted a local network solutions provider with a request to sell for them a specified number of cables with equal lengths. The Judging Committee wants the cables to be as long as possible to sit contestants as far from each other as possible.The Cable Master of the company was assigned to the task. He knows the length of each cable in the stock up to a centimeter,and he can cut them with a centimeter precision being told the length of the pieces he must cut. However, this time, the length is not known and the Cable Master is completely puzzled.You are to help the Cable Master, by writing a program that will determine the maximal possible length of a cable piece that can be cut from the cables in the stock, to get the specified number of pieces.","The first line of the input file contains two integer numb ers N and K, separated by a space. N (1 = N = 10000) is the number of cables in the stock, and K (1 = K = 10000) is the number of requested pieces. The first line is followed by N lines with one number per line, that specify the length of each cable in the stock in meters. All cables are at least 1 meter and at most 100 kilometers in length. All lengths in the input file are written with a centimeter precision, with exactly two digits after a decimal point.","Write to the output file the maximal length (in meters) of the pieces that Cable Master may cut from the cables in the stock to get the requested number of pieces. The number must be written with a centimeter precision, with exactly two digits after a decimal point.If it is not possible to cut the requested number of pieces each one being at least one centimeter long, then the output file must contain the single number ""0.00"" (without quotes).","4 11
8.02
7.43
4.57
5.39",2.00
Flip and Shift,http://poj.org/problem?id=1063, 1000MS, 10000K,"This puzzle consists of a random sequence of m black disks and n white disks on an oval-shaped track, with a turnstile capable of flipping (i.e., reversing) three consecutive disks. In Figure 1, there are 8 black disks and 10 white disks on the track. You may spin the turnstile to flip the three disks in it or shift one position clockwise for each of  the disks on the track (Figure 1).  The goal of  this puzzle  is  to gather  the disks of  the  same color  in adjacent positions using  flips and  shifts. (Figure 2) You  are  to write  a  program which  decides whether  a  given  sequence  can  reach  a  goal  or  not.  If  a  goal  is reachable, then write a message ""YES""; otherwise, write a message ""NO"". ","The input consists of T  test cases. The number of test cases  ) (T  is given in the first line of the input file. Each of the next T  lines gives a test case. A test case consists of an integer, representing the sum of m and n, and a sequence of m+n  0s and 1s, representing an initial sequence. A 0 denotes a white disk and a 1 denotes a black disk. The sum of m and n is at least 10 and does not exceed  30. There is a space between numbers. ","The output should print  either ""YES"" or ""NO"" for each test case, one per line.  ","2 
18 0 0 1 0 1 1 1 1 0 1 0 0 1 0 0 0 0 1 
14 1 1 0 0 1 1 1 0 0 1 1 0 1 0 
","YES
NO"
昂贵的聘礼,http://poj.org/problem?id=1062, 1000MS, 10000K,"年轻的探险家来到了一个印第安部落里。在那里他和酋长的女儿相爱了，于是便向酋长去求亲。酋长要他用10000个金币作为聘礼才答应把女儿嫁给他。探险家拿不出这么多金币，便请求酋长降低要求。酋长说：""嗯，如果你能够替我弄到大祭司的皮袄，我可以只要8000金币。如果你能够弄来他的水晶球，那么只要5000金币就行了。""探险家就跑到大祭司那里，向他要求皮袄或水晶球，大祭司要他用金币来换，或者替他弄来其他的东西，他可以降低价格。探险家于是又跑到其他地方，其他人也提出了类似的要求，或者直接用金币换，或者找到其他东西就可以降低价格。不过探险家没必要用多样东西去换一样东西，因为不会得到更低的价格。探险家现在很需要你的帮忙，让他用最少的金币娶到自己的心上人。另外他要告诉你的是，在这个部落里，等级观念十分森严。地位差距超过一定限制的两个人之间不会进行任何形式的直接接触，包括交易。他是一个外来人，所以可以不受这些限制。但是如果他和某个地位较低的人进行了交易，地位较高的的人不会再和他交易，他们认为这样等于是间接接触，反过来也一样。因此你需要在考虑所有的情况以后给他提供一个最好的方案。为了方便起见，我们把所有的物品从1开始进行编号，酋长的允诺也看作一个物品，并且编号总是1。每个物品都有对应的价格P，主人的地位等级L，以及一系列的替代品Ti和该替代品所对应的""优惠""Vi。如果两人地位等级差距超过了M，就不能""间接交易""。你必须根据这些数据来计算出探险家最少需要多少金币才能娶到酋长的女儿。","输入第一行是两个整数M，N（1 Output输出最少需要的金币数。Sample Input1 4
10000 3 2
2 8000
3 5000
1000 2 1
4 200
3000 2 1
4 200
50 2 0
Sample Output5250Source浙江",输出最少需要的金币数。,"1 4
10000 3 2
2 8000
3 5000
1000 2 1
4 200
3000 2 1
4 200
50 2 0
",5250
青蛙的约会,http://poj.org/problem?id=1061, 1000MS, 10000K,"两只青蛙在网上相识了，它们聊得很开心，于是觉得很有必要见一面。它们很高兴地发现它们住在同一条纬度线上，于是它们约定各自朝西跳，直到碰面为止。可是它们出发之前忘记了一件很重要的事情，既没有问清楚对方的特征，也没有约定见面的具体位置。不过青蛙们都是很乐观的，它们觉得只要一直朝着某个方向跳下去，总能碰到对方的。但是除非这两只青蛙在同一时间跳到同一点上，不然是永远都不可能碰面的。为了帮助这两只乐观的青蛙，你被要求写一个程序来判断这两只青蛙是否能够碰面，会在什么时候碰面。我们把这两只青蛙分别叫做青蛙A和青蛙B，并且规定纬度线上东经0度处为原点，由东往西为正方向，单位长度1米，这样我们就得到了一条首尾相接的数轴。设青蛙A的出发点坐标是x，青蛙B的出发点坐标是y。青蛙A一次能跳m米，青蛙B一次能跳n米，两只青蛙跳一次所花费的时间相同。纬度线总长L米。现在要你求出它们跳了几次以后才会碰面。","输入只包括一行5个整数x，y，m，n，L，其中x≠y Output输出碰面所需要的跳跃次数，如果永远不可能碰面则输出一行""Impossible""Sample Input1 2 3 4 5Sample Output4Source浙江","输出碰面所需要的跳跃次数，如果永远不可能碰面则输出一行""Impossible""",1 2 3 4 5,4
Modular multiplication of polynomials,http://poj.org/problem?id=1060, 1000MS, 10000K,"Consider polynomials whose coefficients are 0 and 1. Addition of two polynomials is achieved by 'adding' the coefficients  for  the  corresponding  powers  in  the polynomials. The  addition  of  coefficients  is  performed  by addition modulo 2, i.e., (0 + 0) mod 2 = 0, (0 + 1) mod 2 = 1, (1 + 0) mod 2 = 1, and (1 + 1) mod 2 = 0. Hence, it is the same as the exclusive-or operation. (x^6 + x^4 + x^2 + x + 1) + (x^7 + x + 1) = x^7 + x^6 + x^4 + x^2  Subtraction of two polynomials is done similarly. Since subtraction of coefficients is performed by subtraction modulo  2  which  is  also  the  exclusive-or  operation,  subtraction  of  polynomials  is  identical  to  addition  of polynomials.    (x^6 + x^4 + x^2 + x + 1) - (x^7 + x + 1) = x^7 + x^6 + x^4 + x^2   Multiplication of two polynomials is done in the usual way (of course, addition of coefficients is performed by addition modulo 2).  (x^6 + x^4 + x^2 + x + 1) (x^7 + x + 1)  =  x^13 + x^11 + x^9 + x^8 + x^6 + x^5 + x^4 + x^3 + 1  Multiplication of two polynomials f(x) and g(x) modulo a polynomial h(x) is the remainder of f(x)g(x) divided by h(x).  (x^6 + x^4 + x^2 + x + 1) (x^7 + x + 1) modulo (x^8 + x^4 + x^3 + x + 1) =  x^7 + x^6 + 1 The largest exponent of a polynomial is called its degree. For example, the degree of x^7 + x^6 + 1 is 7.  Given three polynomials f(x), g(x), and h(x), you are to write a program that computes f(x)g(x) modulo h(x). We assume that the degrees of both f(x) and g(x) are less than the degree of h(x).  The degree of a polynomial is less than 1000.  Since  coefficients  of  a  polynomial  are  0  or  1,  a  polynomial  can  be  represented  by  d+1  and  a  bit  string  of length  d+1,  where  d  is  the  degree  of  the  polynomial  and  the  bit  string  represents  the  coefficients  of  the polynomial. For example, x^7 + x^6 + 1 can be represented by 8 1 1 0 0 0 0 0 1. ","The input consists of T test cases.  The number of test cases (T) is given in the first line of the input file. Each test  case  consists  of  three  lines  that  contain  three  polynomials  f(x),  g(x),  and  h(x),  one  per  line.  Each polynomial is represented as described above.  ","The output should contain the polynomial f(x)g(x) modulo h(x), one per line.","2 
7 1 0 1 0 1 1 1 
8 1 0 0 0 0 0 1 1 
9 1 0 0 0 1 1 0 1 1 
10 1 1 0 1 0 0 1 0 0 1 
12 1 1 0 1 0 0 1 1 0 0 1 0 
15 1 0 1 0 1 1 0 1 1 1 1 1 0 0 1","8 1 1 0 0 0 0 0 1 
14 1 1 0 1 1 0 0 1 1 1 0 1 0 0 "
Chutes and Ladders,http://poj.org/problem?id=1059, 1000MS, 10000K,"A popular board game for children is called ""Chutes and Ladders"".  The board has squares which are numbered from 1 to 100, and players have counters which start on the theoretical square 0.  The players take turns at throwing a die with the numbers 1 to 6 on it, and each moves his or her counter forward the number of squares corresponding to the number on the die (the square they reach is found by adding the die number to the square number their counter is on).  The first person to reach square 100 is the winner.  The interest is caused by the fact that pairs of squares are connected together by ""ladders"" (which connect a lower-numbered square to a higher-numbered square) and ""chutes"" (which run from high to low).  If a counter lands on the start of a chute or ladder (i.e., this is the square reached after throwing the die), then the counter is moved to the corresponding square at the end of the chute or ladder.  Note that landing on the end square of a ladder or a chute has no effect, only the start square counts.  Furthermore, there are some squares such that if a player's counter lands on them, then the player must either miss the next turn, or immediately throw the die again for another turn, depending on what is written on the board.  A miss-a-turn or extra-turn square is never the start or end of a ladder or chute.  If a player is on square 95 or higher, then a die throw which takes them past 100 must be ignored - thus a player on square 99 must ignore all throws which are not 1.  ","Input  will start with a set of less than 1000 die throws which you must use for all games, starting each new game with the first player ""throwing"" the first number in the set, the next player ""throwing"" the second number, and so on.  This set of die throws will simply be a list of random numbers between 1 and 6, separated by single spaces, with not more than 80 characters on each line.  It will be terminated by the number 0.  After this set of die throws, there will be one or more game sets.  Each game set is in three parts.  The first part is a line containing a single number giving the number of players in the game.  This will be more than 1 and less than 6.  Then the board is described, in two parts. The first part lists the ladders and the chutes on the board, each ladder or chute being defined on a single line.  Each is given by two numbers, from 1 to 99,separated by one or more spaces.  The first number gives the start square, and the second number gives the end square; so it is a ladder if the first number is less than the second number, and a chute if the order is the other way.  The chute/ladder definitions are terminated by a line containing two 0's.  The second part of the board description gives the lose-a-turn/extra-turn squares, if there are any.  These are single numbers, one per line, defining the squares.  If the number is negative, its positive counterpart is a lose-a-turn square; if positive, it represents an extra-turn square.  (For example, -16 means that square 16 on the board is a lose-a-turn square, while a 25 means that players landing on square 25 must immediately roll again.)   The end of this set of descriptions, and of the game description, is given by a single 0.  The end of all the game descriptions is given by a game with the number of players equal to 0.","Output must be one line for each game in the input, giving the number of the player who wins the game.  Every game will determine a winner in fewer throws than those given at the start of the data.","3 6 3 2 5 1 3 4 2 3 1 2 0
2
6 95
99 1
0 0
-3
98
0
2
3 99
6 90
0 0
0
0
","2
2"
The Gourmet Club,http://poj.org/problem?id=1058, 1000MS, 65536K,"The gourmet club of ACM City has 16 members. They contracted the proprietor of the local French restaurant Chateau Java to arrange dinner parties for 5 consecutive evenings. They asked to be seated around 4 tables, 4 persons per table. They also stipulated that during the 5 evenings, every member of the club will share a table exactly once with each member of the club. Mr. I.B. Emm, the restaurateur, assigned his Maitre D' the task of scheduling the seating for the 5 evenings. On the first evening, the Maitre D' seated the members as they arrived and recorded their seating. Each subsequent evening, he carefully planned the seating to match the requirement that no member will be dining twice with some other member.  Unfortunately, the Maitre D' disappeared on the morning of the fourth evening. Mr. Emm was left only with his notes which included the recorded seating arrangements during the previous 3 evenings. As he was trying to schedule the seating for the remaining evenings, it dawned on him that this task may not be that easy. He is asking for your help to try and see whether the remaining two evenings can be scheduled.  The following is a sample of the Maitre D's seating arrangements during the first 3 evenings:ABCD	EFGH	IJKL	MNOPAEIM	BFJN	CGKO	DHLPAFKP	BGLM	CHIN	DEJOThe members of the gourmet club were identified by the letters A,B,C,...,P.  Each line represents one evening of seating with each set of four letters a single table. Thus on the first evening A dines with B, C and D etc.   Write a program that will read from the input the seating arrangement of the first three evenings and will either complete the schedule or determine that the Maitre D' screwed up.","Each data set will be 3 lines. Each line will consist of four blocks, each 4 letters long. All letters will be in upper case. Blocks will be separated by ""white space"". Data sets will be separated by blank lines.","For a successful schedule, echo the input and add two lines showing the successful schedule. If it is not possible to complete the schedule, do not echo the input, but print ""It is not possible to complete this schedule.""  Separate output for each data set with a blank line.","ABCD EFGH IJKL MNOP
AEIM BFJN CGKO DHLP
AFKP BGLM CHIN DEJO
",It is not possible to complete this schedule.
FILE MAPPING,http://poj.org/problem?id=1057, 1000MS, 10000K,"It is often helpful for computer users to see a visual representation of the file structure on their computers.  The ""explorer"" in Microsoft Windows is an example of such a system.  Before the days of graphical user interfaces, however, such visual representations were not possible.  The best that could be done was to show a static ""map""of directories and files, using indentation as a guide to directory contents.  For example:ROOT|	DIR1|        File1|	File2|	File3|	DIR2|	DIR3|	File1File1File2This shows that the root directory contains two files and three subdirectories.  The first subdirectory contains 3 files, the second is empty and the third contains one file.","Write a program that reads a series of data sets representing a computer file structure.   A data set ends with a line containing a single *, and the end of valid data is denoted by a line containing a single #.  The data set contains a series of file and directory names.  (The root directory is assumed to be the starting point.) The end of a directory is denoted by a ']'  Directory names begin with a lower case 'd' and file names begin with a lower case 'f'  File names may or may not have an extension (such as fmyfile.dat or fmyfile).  File and directory names may not contain spaces. ","Note that the contents of any directory should list any subdirectories first, followed by files, if any.  All files should be in alphabetical order within each directory.  Note that each data set output is marked by the label ""DATA SET x:"" where x denotes the number of the set, beginning at 1.  Note also the blank line between the output data sets.  Each level of indentation should show a '|' followed by 5 spaces.","file1
file2
dir3
dir2
file1
file2
]
]
file4
dir1
]
file3
*
file2
file1
*
#
","DATA SET 1:
ROOT
|     dir3
|     |     dir2
|     |     file1
|     |     file2
|     dir1
file1
file2
file3
file4

DATA SET 2:
ROOT
file1
file2"
IMMEDIATE DECODABILITY,http://poj.org/problem?id=1056, 1000MS, 10000K,"An encoding of a set of symbols is said to be immediately decodable if no code for one symbol is the prefix of a code for another symbol.  We will assume for this problem that all codes are in binary, that no two codes within a set of codes are the same, that each code has at least one bit and no more than ten bits, and that each set has at least two codes and no more than eight.Examples:  Assume an alphabet that has symbols {A, B, C, D}The following code is immediately decodable:     A:01   B:10   C:0010   D:0000but this one is not:     A:01   B:10   C:010   D:0000    (Note that A is a prefix of C)","Write a program that accepts as input a series of groups of records from standard input.  Each record in a group contains a collection of zeroes and ones representing a binary code for a different symbol.  Each group is followed by a single separator record containing a single 9; the separator records are not part of the group. Each group is independent of other groups; the codes in one group are not related to codes in any other group (that is, each group is to be processed independently). "," For each group, your program should determine whether the codes in that group are immediately decodable, and should print a single output line giving the group number and stating whether the group is, or is not, immediately decodable.","01
10
0010
0000
9
01
10
010
0000
9
","Set 1 is immediately decodable
Set 2 is not immediately decodable
 
"
BULK MAILING,http://poj.org/problem?id=1055, 1000MS, 10000K,"An organization that wishes to make a large mailing can save postage by following U.S. Postal Service rules for a bulk mailing. Letters in zip code order are bundled into packets of 10-15 letters each.  Bundles may consist of letters in which all 5 digits of zip code are the same (5-digit bundles), or they may consist of letters in which only the first 3 digits of zip code are the same (3-digit bundles).  If there are fewer than 10 letters to make up a bundle of either type, those letters are mailed first class.","You are to write a program to read a data set of 5-digit zip codes, one per line, until end of input.  Your program should count the number of 5-digit bundles, 3-digit bundles, and first class letters.  You should include as many letters as possible in 5-digit bundles first, then as many as possible in 3-digit bundles, with as few bundles of 10 to 15 letters as possible. For example, if there are 31 letters with the same zip code, they must be combined into exactly three 5-digit bundles.  Not all zip codes in the data set will be valid.  A valid zip code consists of exactly 5 digits (0-9), all of which cannot be 0.  Non-numeric characters are not allowed.  At the end of your output, print the invalid zip codes found.  (Duplicates need only be printed once.)","Print a report that lists 5-digit zip code bundles first, with the number of letters and number of bundles for each zip code.  Next list all 3-digit zip code bundles with the same two counts, followed by all zip codes that are not bundled and to be sent first class.  At the end print totals of letters and bundles, followed by the number of invalid zip codes and a list of these.  Single space the report, and print blank lines following the heading, before the total line, and between the three groups of zip codes.  For 3-digit bundles, print the zip codes in the form dddxx, where ddd represents the three significant digits and xx represents the last two digits to be omitted. Your output should be similar to that shown in the sample.","95864
95864
95864
95867
95920
9j876
95616                 
95616                 
95747                 
95814                 
95818                 
95818                 
8976
95818                 
95818
95819                 
95819                 
00000
95819                 
95819                 
95819
95819                 
95819                 
95825
95825
95825
95825
95825
95826
95826
95826
95826
95826
95826
95827
8976
95833
95833
95833
95833
95819                 
95819
95819
95819
95833
95833
95833
95864
95864
95864
123456
95864
95864
95864
95864
","ZIP         LETTERS     BUNDLES

95819          11           1
95864          10           1

958xx          25           2

95616           2           0
95747           1           0
95920           1           0

TOTALS         50           4

INVALID ZIP CODES

9j876
8976
00000
123456
"
The Troublesome Frog,http://poj.org/problem?id=1054, 5000MS, 100000K,"In Korea, the naughtiness of the cheonggaeguri, a small frog, is legendary.  This is a well-deserved reputation, because the frogs jump through your rice paddy at night, flattening rice plants.  In the morning, after noting which plants have been flattened, you want to identify the path of the frog which did the most damage.  A frog always jumps through the paddy in a straight line, with every hop the same length:Your rice paddy has plants arranged on the intersection points of a grid as shown in Figure-1, and the troublesome frogs hop completely through your paddy, starting outside the paddy on one side and ending outside the paddy on the other side as shown in Figure-2:Many frogs can jump through the paddy, hopping from rice plant to rice plant.  Every hop lands on a plant and flattens it, as in Figure-3.  Note that some plants may be landed on by more than one frog during the night.  Of course, you can not see the lines showing the paths of the frogs or any of their hops outside of your paddy ?for the situation in Figure-3, what you can see is shown in Figure-4:From Figure-4, you can reconstruct all the possible paths which the frogs may have followed across your paddy.  You are only interested in frogs which have landed on at least 3 of your rice plants in their voyage through the paddy.  Such a path is said to be a frog path.  In this case, that means that the three paths shown in Figure-3 are frog paths (there are also other possible frog paths). The vertical path down column 1 might have been a frog path with hop length 4 except there are only 2 plants flattened so we are not interested; and the diagonal path including the plants on row 2 col. 3, row 3 col. 4, and row 6 col. 7 has three flat plants but there is no regular hop length which could have spaced the hops in this way while still landing on at least 3 plants, and hence it is not a frog path.  Note also that along the line a frog path follows there may be additional flattened plants which do not need to be landed on by that path (see the plant at (2, 6) on the horizontal path across row 2 in Figure-4), and in fact some flattened plants may not be explained by any frog path at all.Your task is to write a program to determine the maximum number of landings in any single frog path (where the maximum is taken over all possible frog paths).  In Figure-4 the answer is 7, obtained from the frog path across row 6.","Your program is to read from standard input. The first line contains two integers R and C, respectively the number of rows and columns in your rice paddy, 1 OutputYour program is to write to standard output. The output contains one line with a single integer, the number of plants flattened along a frog path which did the most damage if there exists at least one frog path, otherwise, 0.Sample Input6 7
14
2 1
6 6
4 2
2 5
2 6
2 7
3 4
6 1
6 2
2 3
6 3
6 4
6 5
6 7
Sample Output7SourceIOI 2002","Your program is to write to standard output. The output contains one line with a single integer, the number of plants flattened along a frog path which did the most damage if there exists at least one frog path, otherwise, 0.","6 7
14
2 1
6 6
4 2
2 5
2 6
2 7
3 4
6 1
6 2
2 3
6 3
6 4
6 5
6 7
",7
Set Me,http://poj.org/problem?id=1053, 1000MS, 10000K,"The game of Set is played with a deck of eighty-one cards, each having the following four characteristics:.	Symbol: diamonds, ovals, or squiggles.	Count: 1, 2, or 3 symbols.	Color: red, green, or purple.	Shading: outlined, filled, or stripedThe cards are shuffled and a tableau of twelve cards is laid out. Players then attempt to be the first to identify ""sets"" which exist in the tableau. Sets are removed as they are identified and new cards are dealt in their place. Play continues in this manner until all cards have been used. The winner is the player with the most sets.A set is a collection of three cards in which each characteristic is either the same on all three cards or different on all three cards. For example, the cards shown below form a set.To see how the cards above form a set, take each characteristic in turn. First, each card has different symbol: the first card has squiggles, the second diamonds, and the third ovals. Second, each card has the same count of symbols, three. Third each card has a different color, and finally, each card has a different shading. Thus, each characteristic is either the same on all three cards or different on all three cards, satisfying the requirement for a set.Consider the following example of three cards which do not form a set.Again, take each characteristic in turn. Each card has a different symbol, each card has a different count of symbols, and each card is the same color. So far this satisfies the requirements for a set. When the shading characteristic is considered, however, two cards are filled and one card is striped. Thus, the shading on all three cards is neither all the same nor all different, and so these cards do not form a set.","The input for this program consists of several tableaus of cards. The tableaus are listed in the input file one card per line, with a single blank line between tableaus. The end of  the input is marked by the end of the file. Each card in a tableau is specified by four consecutive characters on the input line. The first identifies the type of symbol on the card, and will be either a ""D"", ""O"", or ""S"", for Diamond, Oval, or Squiggle, respectively. The second character will be the digit 1, 2, or 3, identifying the number of symbols on the card. The third identifes the color and will be an ""R"", ""G"", or ""P"" for Red, Green, or Purple, respectively. The final character identifes the shading and will be an ""O"", ""F"", or ""S"" for Outlined, Filled, or Striped. All characters will be in uppercase.","The output for the program is, for each tableau, a list of all possible sets which could be formed using cards in the tableau. The order in which the sets are output is not important, but your output should adhere to the format illustrated by the example below. In the event that no sets exist in a tableau, report ""*** None Found ***"".","S1PS
D3PO
S2GF
O2GS
O2GF
O3PO
S2RF
S3GS
D2GS
O1GS
O1GF
S2PS

O2GF
O1PF
D2PO
D3RO
S2PO
O1GF
O1GS
D2GO
S3PF
S2GF
D2GS
S1RS
","CARDS:  S1PS D3PO S2GF O2GS O2GF O3PO S2RF S3GS D2GS O1GS O1GF S2PS
SETS:   1.  D3PO S2RF O1GS
        2.  S3GS D2GS O1GS

CARDS:  O2GF O1PF D2PO D3RO S2PO O1GF O1GS D2GO S3PF S2GF D2GS S1RS
SETS:   *** None Found ***
"
Plato's Blocks,http://poj.org/problem?id=1052, 1000MS, 10000K,"Plato believed what we perceive is but a shadow of reality.  Recent archaeological excavations have uncovered evidence that this belief may have been encouraged by Plato's youthful amusement with cleverly-designed blocks.  The blocks have the curious property that, when held with any face toward a light source, they cast shadows of various letters, numbers, shapes, and patterns.  It is possible for three faces incident to a corner to correspond to three different shadow patterns.  Opposite faces, of course, cast shadows which are mirror images of one another.The blocks are formed by gluing together small cubes to form a single, connected object.  As an example, the figures below show, layer by layer, the internal structure of a block which can cast shadows of the letters ""E"", ""G"", or ""B"".Only a partial set of blocks was discovered, but the curious scientists would like to determine what combinations of shadows are possible.  Your program, the solution to this problem, will help them!  The program will input groups of shadow patterns, and for each group will report whether or not a solid can be constructed that will cast those three shadows.","The input contains a sequence of data sets, each specifying a dimension and three shadow patterns.  The first line of a data set contains a positive integer 1 ","For each data set in the input, output the data set number and one of the following messages:	Valid set of patterns	Impossible combinationFor a set of patterns to be considered valid, it must be possible to construct, by gluing unit cubes together along their faces, a one-piece solid capable of casting the shadow of each of the input patterns.","5
XXXXX
X----
X--XX
X---X
XXXXX
XXXXX
X----
XXXXX
X----
XXXXX
XXXXX
X---X
XXXX-
X---X
XXXXX
3
X--
-X-
--X
XX-
XXX
-XX
-XX
XXX
XX-
0
","Data set 1: Valid set of patterns
Data set 2: Impossible combination
"
"P,MTHBGWB",http://poj.org/problem?id=1051, 1000MS, 10000K,"Morse code represents characters as variable length sequences of dots and dashes. In practice, characters in a message are delimited by short pauses. The following table shows the Morse code sequences:      A    .-    H    ....    O    ---    V    ...-        B    -...    I    ..    P    .--.    W    .--        C    -.-.    J    .---    Q    --.-    X    -..-        D    -..    K    -.-    R    .-.    Y    -.--        E    .    L    .-..    S    ...    Z    --..        F    ..-.    M    --    T    -    　    　        G    --.    N    -.    U    ..-    　    　  Note that four dot-dash combinations are unassigned. For the purposes of this problem we will assign them as follows (these are not the assignments for actual Morse code):      underscore    ..--    period    ---.        comma    .-.-    question mark    ----  Thus, the message ""ACM_GREATER_NY_REGION"" is encoded as:.- -.-. -- ..-- --. .-. . .- - . .-. ..-- -. -.-- ..-- .-. . --. .. --- -.M.E. Ohaver proposed an encryption scheme based on mutilating Morse code. Her scheme replaces the pauses between letters, necessary because Morse is a variable-length encoding that is not prefix-free, with a string that identifies the number of dots and dashes in each. For example, consider the message "".--.-.--"". Without knowing where the pauses should be, this could be ""ACM"", ""ANK"", or several other possibilities. If we add length information, however, "".--.-.--242"", then the code is unabiguous. Ohaver's scheme has three steps, the same for encryption and decryption:1.	Convert the text to Morse code without pauses but with a string of numbers to indicate code lengths2.	Reverse the string of numbers3.	Convert the dots and dashes back into to text using the reversed string of numbers as code lengthsAs an example, consider the encrypted message ""AKADTOF_IBOETATUK_IJN"". Converting to Morse code with a length string yields "".--.-.--..----..-...--..-...---.-.--..--.-..--...----.232313442431121334242"". Reversing the numbers and decoding yields the original message ""ACM_GREATER_NY_REGION"".","This problem requires that you implement Ohaver's encoding algorithm. The input will consist of several messages encoded with Ohaver's algorithm. The first line of the input is an integer n that specifies the number of test cases. The following n lines contain one message per line. Each message will use only the twenty-six capital letters, underscores, commas, periods, and question marks. Messages will not exceed 100 characters in length.","For each message in the input, output the line number starting in column one, a colon, a space, and then the decoded message. The output format must be adhered to precisely.","5
AKADTOF_IBOETATUK_IJN
PUEL
QEWOISE.EIVCAEFNRXTBELYTGD.
?EJHUT.TSMYGW?EJHOT
DSU.XFNCJEVE.OE_UJDXNO_YHU?VIDWDHPDJIKXZT?E
","1: ACM_GREATER_NY_REGION
2: PERL
3: QUOTH_THE_RAVEN,_NEVERMORE.
4: TO_BE_OR_NOT_TO_BE?
5: THE_QUICK_BROWN_FOX_JUMPS_OVER_THE_LAZY_DOG
"
To the Max,http://poj.org/problem?id=1050, 1000MS, 10000K,"Given a two-dimensional array of positive and negative integers, a sub-rectangle is any contiguous sub-array of size 1*1 or greater located within the whole array. The sum of a rectangle is the sum of all the elements in that rectangle. In this problem the sub-rectangle with the largest sum is referred to as the maximal sub-rectangle.As an example, the maximal sub-rectangle of the array: 0 -2 -7  0 9  2 -6  2-4  1 -4  1-1  8  0 -2is in the lower left corner: 9  2-4  1-1  8and has a sum of 15.","The input consists of an N * N array of integers. The input begins with a single positive integer N on a line by itself, indicating the size of the square two-dimensional array. This is followed by N^2 integers separated by whitespace (spaces and newlines). These are the N^2 integers of the array, presented in row-major order. That is, all numbers in the first row, left to right, then all numbers in the second row, left to right, etc. N may be as large as 100. The numbers in the array will be in the range [-127,127].",Output the sum of the maximal sub-rectangle.,"4
0 -2 -7 0 9 2 -6 2
-4 1 -4  1 -1

8  0 -2",15
Microprocessor Simulation,http://poj.org/problem?id=1049, 1000MS, 10000K,"Consider a small microprocessor that has the following properties:?Each word is four bits.?Addresses are two words. The high word always comes first. That is, the high word of a two-word address will always occupy the lower word of memory.?Memory is 256 words.?There are two accumulators, A and B, each storing one word.?There are nine instruction codes. Each instruction requires at least one word to store the code that specifies the instruction. Four instructions have arguments and require an additional two words.Each 4 bit number can have the values from 0 to 15, inclusive, in base 10. We will write these using hexadecimal in the usual way, i.e. A means 10, B means 11, etc.These are the nine instructions:      Code    Words    Description        0    3    LD: Load accumulator A with the contents       of memory at the specified argument.        1    3    ST: Write the contents of accumulator A       to the memory location specified by the argumen        2    1    SWP: Swap the contents of accumulators A       and B.        3    1    ADD: Add the contents of accumulators A       and B. The low word of the sum is stored in A, and the high word in B        4    1    INC: Increment accumulator A. Overflow is       allowed; that is, incrementing F yields 0.        5    1    DEC: Decrement accumulator A. Underflow       is allowed; that is, decrementing 0 yields F.        6    3    BZ: If accumulator A is zero, the next       command to be executed is at the location specified by the argument. If A       is not zero, the argument is ignored and nothing happens.        7    3    BR: The next command to be executed is at       the location specified by the argument.        8    1    STP: Stop execution of the program.  The microprocessor always begins by executing the command at location 00. It executes the commands in sequence until it reaches the Stop command.The examples below show partial programs and describe their affect.      Program    Description        01A8    Load accumulator A with the contents of       memory location 1A (26 in decimal) and stop.        01A512F8    Load accumulator A with the contents of       memory location 1A (26 in decimal), decrement it, store the result to       memory location 2F, then stop.  ","The input will consist of several lines of exactly 256 hex characters. Each line is the contents of memory, beginning with address 00 and ending with address FF. The end of the input is indicated by a memory state that has a stop instruction (an ""8"") at address 00. The input programs will never ""fall of the end of memory"" that is, you will never execute an instruction that is located between addresses F0 and FF, inclusive.","For each memory state, you should simulate execution beginning with address 00. When the stop instruction is reached, you will dump the contents of memory to the output as a single string of 256 hex characters followed by a newline character.","0102011311321128FF0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
","0102011311321128FF1E00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
"
Follow My Logic,http://poj.org/problem?id=1048, 1000MS, 10000K,"For this problem you will determine the output of a logic circuit composed of one or more inputs, zero or more dual-input AND/OR gates, and one output. The input circuits are drawn with standard ASCII characters. Circuit paths are represented using horizontal and vertical lines, and junctions. Horizontal lines are represented with dash characters (ASCII code 45 decimal), vertical lines with vertical bar characters (ASCII code 124 decimal), and junctions with plus characters (ASCII code 43 decimal). Inputs are represented using the capital letters A through Z, and the output is represented by a question mark. AND and OR gates are represented as shown in the leftmost entries in the figure below, and their orientation will always be exactly as shown. The location of the gate inputs and output is shown by the middle figure below. Finally, gate inputs or its output can be inverted, represented by a lowercase ""oh""character (ASCII code 111 decimal) at the input or output location. The figure on the right below shows a simple but complete logic circuit.        :\               :\                 -:\                 -o:\                       A-o:\        : )              : >                 : )-                 : )o-                       : )o-?        :/               :/                 -:/                 --:/                       B--:/            AND gate          OR gate       Gate with inputs    An inverted top input          Two logic inputs	                                                 and an inverted output         and the output","Circuits in the input will obey the following guidelines:1.        The maximum size of the circuit picture is 100 by 100 characters.2.        A path always travels in a straight line unless altered by a junction. At a junction, the path can and will make a ninety degree turn. Two junctions will not be horizontally or vertically adjacent.3.        No paths will be ""broken"" That is, every path character is guaranteed to be adjacent on both sides to either another path character of the same type, a junction, a gate input, a gate output, a logic input, or the logic output.4.        Circuit paths do not cross or intersect other paths.5.        Gate inputs always approach horizontally from the left as shown above. Gate outputs always leave horizontally to the right as shown above.6.        Inversions may only appear immediately adjacent to a gate input or output, and will always be preceded (in the case of an input) or followed (in the case of an output) by at least one dash as shown above.The end of a logic diagram in the input is indicated by line containing only a single asterisk in the first column.  Following this are several lines which indicate the state of the inputs in the logic diagram.  Each of these lines is a string of twenty-six ""0""(zero) or ""1""characters, with the first position representing the state of input A, the second position representing the state of input B, etc.  Note that input values which are not actually used in the circuit may simply be ignored.  The list of input states is terminated by a line containing only a single asterisk character in the first column.Following the asterisk which terminates the list of input states is another circuit diagram followed by a list of input states, which is then followed by another circuit diagram and list of input states, and so on until the end of the file.  The file will always contain at least one circuit and one set of inputs for that circuit.","The program is to report the value of the output (0 or 1) of each logic circuit, one value per line, for each set of input values in the list which follows the circuit.  The list of outputs for each circuit should be separated by a single blank line.","A---:\
    : )---?
B---:/
*
00000000000000000000000000
10000000000000000000000000
01000000000000000000000000
11000000000000000000000000
*
A---+
    |    
    +---:\
        : >o---:\
    +---:/     : )---?
    |      C--o:/
B---+
*
00000000000000000000000000
11100000000000000000000000
*
","0
0
0
1

1
0
"
Round and Round We Go,http://poj.org/problem?id=1047, 1000MS, 10000K,"A cyclic number is an integer n digits in length which, when multiplied by any integer from 1 to n, yields a""cycle""of the digits of the original number. That is, if you consider the number after the last digit to ""wrap around""back to the first digit, the sequence of digits in both numbers will be the same, though they may start at different positions.For example, the number 142857 is cyclic, as illustrated by the following table:142857	*1	=	142857142857	*2	=	285714142857	*3	=	428571142857	*4	=	571428142857	*5	=	714285142857	*6	=	857142","Write a program which will determine whether or not numbers are cyclic. The input file is a list of integers from 2 to 60 digits in length. (Note that preceding zeros should not be removed, they are considered part of the number and count in determining n. Thus, ""01""is a two-digit number, distinct from ""1"" which is a one-digit number.)","For each input integer, write a line in the output indicating whether or not it is cyclic.","142857
142856
142858
01
0588235294117647
","142857 is cyclic
142856 is not cyclic
142858 is not cyclic
01 is not cyclic
0588235294117647 is cyclic
"
Color Me Less,http://poj.org/problem?id=1046, 1000MS, 10000K,"A color reduction is a mapping from a set of discrete colors to a smaller one. The solution to this problem requires that you perform just such a mapping in a standard twenty-four bit RGB color space. The input consists of a target set of sixteen RGB color values, and a collection of arbitrary RGB colors to be mapped to their closest color in the target set. For our purposes, an RGB color is defined as an ordered triple (R,G,B) where each value of the triple is an integer from 0 to 255. The distance between two colors is defined as the Euclidean distance between two three-dimensional points. That is, given two colors (R1,G1,B1) and (R2,G2,B2), their distance D is given by the equation","The input is a list of RGB colors, one color per line, specified as three integers from 0 to 255 delimited by a single space. The first sixteen colors form the target set of colors to which the remaining colors will be mapped. The input is terminated by a line containing three -1 values.","For each color to be mapped, output the color and its nearest color from the target set.If there are more than one color with the same smallest distance, please output the color given first in the color set.","0 0 0
255 255 255
0 0 1
1 1 1
128 0 0
0 128 0
128 128 0
0 0 128
126 168 9
35 86 34
133 41 193
128 0 128
0 128 128
128 128 128
255 0 0
0 1 0
0 0 0
255 255 255
253 254 255
77 79 134
81 218 0
-1 -1 -1
","(0,0,0) maps to (0,0,0)
(255,255,255) maps to (255,255,255)
(253,254,255) maps to (255,255,255)
(77,79,134) maps to (128,128,128)
(81,218,0) maps to (126,168,9)"
Bode Plot,http://poj.org/problem?id=1045, 1000MS, 10000K,"Consider the AC circuit below. We will assume that the circuit is in steady-state. Thus, the voltage at nodes 1 and 2 are given by v1 = VS coswt and v2 = VRcos (wt + q ) where VS is the voltage of the source, w is the frequency (in radians per second), and t is time. VR is the magnitude of the voltage drop across the resistor, and q is its phase.You are to write a program to determine VR for different values of w. You will need two laws of electricity to solve this problem. The first is Ohm's Law, which states v2 = iR where i is the current in the circuit, oriented clockwise. The second is i = C d/dt (v1-v2) which relates the current to the voltage on either side of the capacitor. ""d/dt""indicates the derivative with respect to t.","The input will consist of one or more lines. The first line contains three real numbers and a non-negative integer. The real numbers are VS, R, and C, in that order. The integer, n, is the number of test cases. The following n lines of the input will have one real number per line. Each of these numbers is the angular frequency, w.",For each angular frequency in the input you are to output its corresponding VR on a single line. Each VR value output should be rounded to three digits after the decimal point.,"1.0 1.0 1.0 9
0.01
0.031623
0.1
0.31623
1.0
3.1623
10.0
31.623
100.0","0.010
0.032
0.100
0.302
0.707
0.953
0.995
1.000
1.000"
Date bugs,http://poj.org/problem?id=1044, 1000MS, 10000K,"There are rumors that there are a lot of computers having a problem with the year 2000. As they use only two digits to represent the year, the date will suddenly turn from 1999 to 1900. In fact, there are also many other, similar problems. On some systems, a 32-bit integer is used to store the number of seconds that have elapsed since a certain fixed date. In this way, when 2^32 seconds (about 136 Years) have elapsed, the date will jump back to whatever the fixed date is. Now, what can you do about all that mess? Imagine you have two computers C1 and C  with two different bugs: One with the ordinary Y2K-Bug (i. e. switching to a1 := 1900 instead of b1 := 2000) and one switching to a2 := 1904 instead of b2 := 2040. Imagine that the C1 displays the year y1 := 1941 and C2 the year y2 := 2005. Then you know the following (assuming that there are no other bugs): the real year can't be 1941, since, then, both computers would show the (same) right date. If the year would be 2005, y1 would be 1905, so this is impossible, too. Looking only at C1 , we know that the real year is one of the following: 1941, 2041, 2141, etc. We now can calculate what C2 would display in these years: 1941, 1905, 2005, etc. So in fact, it is possible that the actual year is 2141. To calculate all this manually is a lot of work. (And you don't really want to do it each time you forgot the actual year.) So, your task is to write a program which does the calculation for you: find the first possible real year, knowing what some other computers say (yi) and knowing their bugs (switching to ai instead of bi ). Note that the year ai is definitely not after the year the computer was built. Since the actual year can't be before the year the computers were built, the year your program is looking for can't be before any ai . ","The input file contains several test cases, in which the actual year has to be calculated. The description of each case starts with a line containing an integer n (1 The input is terminated by a test case with n = 0. It should not be processed. ","For each test case, output output the line ""Case #k:"", where k is the number of the situation. Then, output the line ""The actual year is z."", where z is the smallest possible year (satisfying all computers and being greater or equal to u). If there is no such year less than 10000, output ""Unkown bugs detected."". Output a blank line after each case. ","2 
1941 1900 2000 
2005 1904 2040 
2 
1998 1900 2000 
1999 1900 2000 
0 ","Case #1: 
The actual year is 2141. 

Case #2: 
Unknown bugs detected. 
"
What's In A Name?,http://poj.org/problem?id=1043, 1000MS, 10000K,"The FBI is conducting a surveillance of a known criminal hideout which serves as a communication center for a number of men and women of nefarious intent. Using sophisticated decryption software and good old fashion wiretaps, they are able to decode any e-mail messages leaving the site. However, before any arrest warrants can be served, they must match actual names with the user ID's on the messages. While these criminals are evil, they're not stupid, so they use random strings of letters for their ID's (no dillingerj ID's found here). The FBI knows that each criminal uses only one ID. The only other information they have which will help them is a log of names of the people who enter and leave the hideout. In many cases, this is enough to link the names to the ID's. ","Input consists of one problem instance. The first line contains a single positive integer n indicating the number of criminals using the hideout. The maximum value for n will be 20. The next line contains the n user ID's, separated by single spaces. Next will be the log entries in chronological order. Each entry in the log has the form type arg , where type is either E, L or M: E indicates that criminal arg has entered the hideout; L indicates criminal arg has left the hideout; M indicates a message was intercepted from user ID arg. A line containing only the letter Q indicates the end of the log. Note that not all user ID's may be present in the log but each criminal name will be guaranteed to be in the log at least once. At the start of the log, the hideout is presumed to be empty. All names and user ID's consist of only lowercase letters and have length at most 20. Note: The line containing only the user ID's may contain more than 80 characters. ","Output consists of n lines, each containing a list of criminal names and their corresponding user ID's, if known. The list should be sorted in alphabetical order by the criminal names. Each line has the form name:userid , where name is the criminal's name and userid is either their user ID or the string ??? if their user ID could not be determined from the surveillance log. ","7 
bigman mangler sinbad fatman bigcheese frenchie capodicapo 
E mugsy 
E knuckles 
M bigman 
M mangler 
L mugsy 
E clyde 
E bonnie 
M bigman 
M fatman 
M frenchie 
L clyde 
M fatman 
E ugati 
M sinbad 
E moriarty 
E booth 
Q ","bonnie:fatman
booth:???
clyde:frenchie
knuckles:bigman
moriarty:???
mugsy:mangler
ugati:sinbad"
Gone Fishing,http://poj.org/problem?id=1042, 2000MS, 32768K,"John is going on a fishing trip. He has h hours available (1 = 0 ), is known. Each 5 minutes of fishing decreases the number of fish expected to be caught in the next 5-minute interval by a constant rate of di (di >= 0). If the number of fish expected to be caught in an interval is less than or equal to di , there will be no more fish left in the lake in the next interval. To simplify the planning, John assumes that no one else will be fishing at the lakes to affect the number of fish he expects to catch. Write a program to help John plan his fishing trip to maximize the number of fish expected to be caught. The number of minutes spent at each lake must be a multiple of 5. ","You will be given a number of cases in the input. Each case starts with a line containing n. This is followed by a line containing h. Next, there is a line of n integers specifying fi (1 OutputFor each test case, print the number of minutes spent at each lake, separated by commas, for the plan achieving the maximum number of fish expected to be caught (you should print the entire plan on one line even if it exceeds 80 characters). This is followed by a line containing the number of fish expected. If multiple plans exist, choose the one that spends as long as possible at lake 1, even if no fish are expected to be caught in some intervals. If there is still a tie, choose the one that spends as long as possible at lake 2, and so on. Insert a blank line between cases. Sample Input2 
1 
10 1 
2 5 
2 
4 
4 
10 15 20 17 
0 3 4 3 
1 2 3 
4 
4 
10 15 50 30 
0 3 4 3 
1 2 3 
0 Sample Output45, 5 
Number of fish expected: 31 

240, 0, 0, 0 
Number of fish expected: 480 

115, 10, 50, 35 
Number of fish expected: 724 
SourceEast Central North America 1999","For each test case, print the number of minutes spent at each lake, separated by commas, for the plan achieving the maximum number of fish expected to be caught (you should print the entire plan on one line even if it exceeds 80 characters). This is followed by a line containing the number of fish expected. If multiple plans exist, choose the one that spends as long as possible at lake 1, even if no fish are expected to be caught in some intervals. If there is still a tie, choose the one that spends as long as possible at lake 2, and so on. Insert a blank line between cases. ","2 
1 
10 1 
2 5 
2 
4 
4 
10 15 20 17 
0 3 4 3 
1 2 3 
4 
4 
10 15 50 30 
0 3 4 3 
1 2 3 
0 ","45, 5 
Number of fish expected: 31 

240, 0, 0, 0 
Number of fish expected: 480 

115, 10, 50, 35 
Number of fish expected: 724 
"
John's trip,http://poj.org/problem?id=1041, 1000MS, 65536K,"Little Johnny has got a new car. He decided to drive around the town to visit his friends. Johnny wanted to visit all his friends, but there was many of them. In each street he had one friend. He started thinking how to make his trip as short as possible. Very soon he realized that the best way to do it was to travel through each street of town only once. Naturally, he wanted to finish his trip at the same place he started, at his parents' house.The streets in Johnny's town were named by integer numbers from 1 to n, n Help Johnny and write a program which finds the desired shortest round trip. If the round trip does not exist the program should write a message. Assume that Johnny lives at the junction ending the street appears first in the input with smaller number. All streets in the town are two way. There exists a way from each street to another street in the town. The streets in the town are very narrow and there is no possibility to turn back the car once he is in the street","Input file consists of several blocks. Each block describes one town. Each line in the block contains three integers x; y; z, where x > 0 and y > 0 are the numbers of junctions which are connected by the street number z. The end of the block is marked by the line containing x = y = 0. At the end of the input file there is an empty block, x = y = 0. ","Output one line of each block contains the sequence of street numbers (single members of the sequence are separated by space) describing Johnny's round trip. If the round trip cannot be found the corresponding output block contains the message ""Round trip does not exist."" ","1 2 1
2 3 2
3 1 6
1 2 5
2 3 3
3 1 4
0 0
1 2 1
2 3 2
1 3 3
2 4 4
0 0
0 0","1 2 3 5 4 6 
Round trip does not exist.
"
Transportation,http://poj.org/problem?id=1040, 1000MS, 10000K,"Ruratania is just entering capitalism and is establishing new enterprising activities in many fields in- cluding transport. The transportation company TransRuratania is starting a new express train from city A to city B with several stops in the stations on the way. The stations are successively numbered, city A station has number 0, city B station number m. The company runs an experiment in order to improve passenger transportation capacity and thus to increase its earnings. The train has a maximum capacity n passengers. The price of the train ticket is equal to the number of stops (stations) between the starting station and the destination station (including the destination station). Before the train starts its route from the city A, ticket orders are collected from all onroute stations. The ticket order from the station S means all reservations of tickets from S to a fixed destination station. In case the company cannot accept all orders because of the passenger capacity limitations, its rejection policy is that it either completely accept or completely reject single orders from single stations.Write a program which for the given list of orders from single stations on the way from A to B determines the biggest possible total earning of the TransRuratania company. The earning from one accepted order is the product of the number of passengers included in the order and the price of their train tickets. The total earning is the sum of the earnings from all accepted orders. ","The input file is divided into blocks. The first line in each block contains three integers: passenger capacity n of the train, the number of the city B station and the number of ticket orders from all stations. The next lines contain the ticket orders. Each ticket order consists of three integers: starting station, destination station, number of passengers. In one block there can be maximum 22 orders. The number of the city B station will be at most 7. The block where all three numbers in the first line are equal to zero denotes the end of the input file. ",The output file consists of lines corresponding to the blocks of the input file except the terminating block. Each such line contains the biggest possible total earning. ,"10 3 4
0 2 1
1 3 5
1 2 7
2 3 10
10 5 4
3 5 10
2 4 9
0 2 5
2 5 8
0 0 0
","19
34"
Pipe,http://poj.org/problem?id=1039, 1000MS, 10000K,"The GX Light Pipeline Company started to prepare bent pipes for the new transgalactic light pipeline. During the design phase of the new pipe shape the company ran into the problem of determining how far the light can reach inside each component of the pipe. Note that the material which the pipe is made from is not transparent and not light reflecting. Each pipe component consists of many straight pipes connected tightly together. For the programming purposes, the company developed the description of each component as a sequence of points [x1; y1], [x2; y2], . . ., [xn; yn], where x1 InputThe input file contains several blocks each describing one pipe component. Each block starts with the number of bent points 2 OutputThe output file contains lines corresponding to blocks in input file. To each block in the input file there is one line in the output file. Each such line contains either a real value, written with precision of two decimal places, or the message Through all the pipe.. The real value is the desired maximal x-coordinate of the point where the light can reach from the source for corresponding pipe component. If this value equals to xn, then the message Through all the pipe. will appear in the output file. Sample Input4
0 1
2 2
4 1
6 4
6
0 1
2 -0.6
5 -4.45
7 -5.57
12 -10.8
17 -16.55
0
Sample Output4.67
Through all the pipe.SourceCentral Europe 1995","The input file contains several blocks each describing one pipe component. Each block starts with the number of bent points 2 OutputThe output file contains lines corresponding to blocks in input file. To each block in the input file there is one line in the output file. Each such line contains either a real value, written with precision of two decimal places, or the message Through all the pipe.. The real value is the desired maximal x-coordinate of the point where the light can reach from the source for corresponding pipe component. If this value equals to xn, then the message Through all the pipe. will appear in the output file. Sample Input4
0 1
2 2
4 1
6 4
6
0 1
2 -0.6
5 -4.45
7 -5.57
12 -10.8
17 -16.55
0
Sample Output4.67
Through all the pipe.SourceCentral Europe 1995","The output file contains lines corresponding to blocks in input file. To each block in the input file there is one line in the output file. Each such line contains either a real value, written with precision of two decimal places, or the message Through all the pipe.. The real value is the desired maximal x-coordinate of the point where the light can reach from the source for corresponding pipe component. If this value equals to xn, then the message Through all the pipe. will appear in the output file. ","4
0 1
2 2
4 1
6 4
6
0 1
2 -0.6
5 -4.45
7 -5.57
12 -10.8
17 -16.55
0
","4.67
Through all the pipe."
"Bugs Integrated, Inc.",http://poj.org/problem?id=1038, 15000MS, 30000K,"Bugs Integrated, Inc. is a major manufacturer of advanced memory chips. They are launching production of a new six terabyte Q-RAM chip. Each chip consists of six unit squares arranged in a form of a 2*3 rectangle. The way Q-RAM chips are made is such that one takes a rectangular plate of silicon divided into N*M unit squares. Then all squares are tested carefully and the bad ones are marked with a black marker.Finally, the plate of silicon is cut into memory chips. Each chip consists of 2*3 (or 3*2) unit squares. Of course, no chip can contain any bad (marked) squares. It might not be possible to cut the plate so that every good unit square is a part of some memory chip. The corporation wants to waste as little good squares as possible. Therefore they would like to know how to cut the plate to make the maximum number of chips possible.TaskYou are given the dimensions of several silicon plates and a list of all bad unit squares for each plate. Your task is to write a program that computes for each plate the maximum number of chips that can be cut out of the plate.","The first line of the input file consists of a single integer D (1 OutputFor each plate in the input file output a single line containing the maximum number of memory chips that can be cut out of the plate.Sample Input2
6 6 5
1 4
4 6
2 2
3 6
6 4
6 5 4
3 3
6 1
6 2
6 4
Sample Output3
4SourceCEOI 2002",For each plate in the input file output a single line containing the maximum number of memory chips that can be cut out of the plate.,"2
6 6 5
1 4
4 6
2 2
3 6
6 4
6 5 4
3 3
6 1
6 2
6 4
","3
4"
A decorative fence,http://poj.org/problem?id=1037, 1000MS, 10000K,"Richard just finished building his new house. Now the only thing the house misses is a cute little wooden fence. He had no idea how to make a wooden fence, so he decided to order one. Somehow he got his hands on the ACME Fence Catalogue 2002, the ultimate resource on cute little wooden fences. After reading its preface he already knew, what makes a little wooden fence cute.A wooden fence consists of N wooden planks, placed vertically in a row next to each other. A fence looks cute if and only if the following conditions are met:�The planks have different lengths, namely 1, 2, . . . , N plank length units.�Each plank with two neighbors is either larger than each of its neighbors or smaller than each of them. (Note that this makes the top of the fence alternately rise and fall.)It follows, that we may uniquely describe each cute fence with N planks as a permutation a1, . . . , aN of the numbers 1, . . . ,N such that (any i; 1  0 and vice versa, each such permutation describes a cute fence.It is obvious, that there are many dierent cute wooden fences made of N planks. To bring some order into their catalogue, the sales manager of ACME decided to order them in the following way: Fence A (represented by the permutation a1, . . . , aN) is in the catalogue before fence B (represented by b1, . . . , bN) if and only if there exists such i, that (any j After carefully examining all the cute little wooden fences, Richard decided to order some of them. For each of them he noted the number of its planks and its catalogue number. Later, as he met his friends, he wanted to show them the fences he ordered, but he lost the catalogue somewhere. The only thing he has got are his notes. Please help him find out, how will his fences look like.","The first line of the input file contains the number K (1 Each of the following K lines contains two integers N and C (1 You may assume, that the total number of cute little wooden fences with 20 planks fits into a 64-bit signed integer variable (long long in C/C++, int64 in FreePascal). You may also assume that the input is correct, in particular that C is at least 1 and it doesn抰 exceed the number of cute fences with N planks.","For each input data set output one line, describing the C-th fence with N planks in the catalogue. More precisely, if the fence is described by the permutation a1, . . . , aN, then the corresponding line of the output file should contain the numbers ai (in the correct order), separated by single spaces.","2
2 1
3 3","1 2
2 3 1"
Gangsters,http://poj.org/problem?id=1036, 1000MS, 10000K,"N gangsters are going to a restaurant. The i-th gangster comes at the time Ti and has the prosperity Pi. The door of the restaurant has K+1 states of openness expressed by the integers in the range [0, K]. The state of openness can change by one in one unit of time; i.e. it either opens by one, closes by one or remains the same. At the initial moment of time the door is closed (state 0). The i-th gangster enters the restaurant only if the door is opened specially for him, i.e. when the state of openness coincides with his stoutness Si. If at the moment of time when the gangster comes to the restaurant the state of openness is not equal to his stoutness, then the gangster goes away and never returns.The restaurant works in the interval of time [0, T].The goal is to gather the gangsters with the maximal total prosperity in the restaurant by opening and closing the door appropriately.","?The first line of the input file contains the values N, K, and T, separated by spaces. (1 ?The second line of the input file contains the moments of time when gangsters come to the restaurant T1, T2, ..., TN, separated by spaces. ( 0 ?The third line of the input file contains the values of the prosperity of gangsters P1, P2, ..., PN, separated by spaces. ( 0 ?The forth line of the input file contains the values of the stoutness of gangsters S1, S2, ..., SN, separated by spaces. ( 1 All values in the input file are integers.",Print to the output file the single integer ?the maximal sum of prosperity of gangsters in the restaurant. In case when no gangster can enter the restaurant the output should be 0.,"4 10 20
10 16 8 16
10 11 15 1
10 7 1 8
",26
Spell checker,http://poj.org/problem?id=1035, 2000MS, 65536K,"You, as a member of a development team for a new spell checking program, are to write a module that will check the correctness of given words using a known dictionary of all correct words in all their forms.If the word is absent in the dictionary then it can be replaced by correct words (from the dictionary) that can be obtained by one of the following operations:?deleting of one letter from the word;?replacing of one letter in the word with an arbitrary letter;?inserting of one arbitrary letter into the word.Your task is to write the program that will find all possible replacements from the dictionary for every given word.","The first part of the input file contains all words from the dictionary. Each word occupies its own line. This part is finished by the single character '#' on a separate line. All words are different. There will be at most 10000 words in the dictionary.The next part of the file contains all words that are to be checked. Each word occupies its own line. This part is also finished by the single character '#' on a separate line. There will be at most 50 words that are to be checked.All words in the input file (words from the dictionary and words to be checked) consist only of small alphabetic characters and each one contains 15 characters at most.","Write to the output file exactly one line for every checked word in the order of their appearance in the second part of the input file. If the word is correct (i.e. it exists in the dictionary) write the message: "" is correct"". If the word is not correct then write this word first, then write the character ':' (colon), and after a single space write all its possible replacements, separated by spaces. The replacements should be written in the order of their appearance in the dictionary (in the first part of the input file). If there are no replacements for this word then the line feed should immediately follow the colon.","i
is
has
have
be
my
more
contest
me
too
if
award
#
me
aware
m
contest
hav
oo
or
i
fi
mre
#","me is correct
aware: award
m: i my me
contest is correct
hav: has have
oo: too
or:
i is correct
fi: i
mre: more me"
The dog task,http://poj.org/problem?id=1034, 1000MS, 10000K,"Hunter Bob often walks with his dog Ralph. Bob walks with a constant speed and his route is a polygonal line  (possibly self-intersecting) whose vertices are specified by N pairs of integers (Xi, Yi) ? their Cartesian coordinates.Ralph walks on his own way but always meets his master at the specified N points. The dog starts his journey simultaneously with Bob at the point (X1, Y1) and finishes it also simultaneously with Bob at the point (XN, YN). Ralph can travel at a speed that is up to two times greater than his master's speed. While Bob travels in a straight line from one point to another the cheerful dog seeks trees, bushes, hummocks and all other kinds of interesting places of the local landscape which are specified by M pairs of integers (Xj',Yj'). However, after leaving his master at the point (Xi, Yi) (where 1 Your task is to find the dog's route, which meets the above requirements and allows him to visit the maximal possible number of interesting places. The answer should be presented as a polygonal line that represents Ralph's route. The vertices of this route should be all points (Xi, Yi) and the maximal number of interesting places (Xj',Yj'). The latter should be visited (i.e. listed in the route description) at most once.An example of Bob's route (solid line), a set of interesting places (dots) and one of the best Ralph's routes (dotted line) are presented in the following picture:","The first line of the input contains two integers N and M, separated by a space ( 2 All points in the input file are different and their coordinates are integers not greater than 1000 by the absolute value.","The first line of the output should contain the single integer K ? the number of vertices of the best dog's route. The second line should contain K pairs of coordinates  X1'',Y1''  , ...,Xk'',Yk'', separated by spaces, that represent this route. If there are several such routes, then you may write any of them.","4 5
1 4 5 7 5 2 -2 4
-4 -2 3 9 1 2 -1 3 8 -3
","6
1 4 3 9 5 7 5 2 1 2 -2 4"
Defragment,http://poj.org/problem?id=1033, 2000MS, 10000K,"You are taking part in the development of a ""New Generation"" operating system and the NG file system. In this file system all disk space is divided into N clusters of the equal sizes, numbered by integers from 1 to N. Each file occupies one or more clusters in arbitrary areas of the disk. All clusters that are not occupied by files are considered to be free. A file can be read from the disk in the fastest way, if all its clusters are situated in the successive disk clusters in the natural order.Rotation of the disk with constant speed implies that various amounts of time are needed for accessing its clusters. Therefore, reading of clusters located near the beginning of the disk performs faster than reading of the ones located near its ending. Thus, all files are numbered beforehand by integers from 1 to K in the order of descending frequency of access. Under the optimal placing of the files on the disk the file number 1 will occupy clusters 1, 2, ..., S1, the file number 2 will occupy clusters S1+1, S1+2, ..., S1+S2 and so on (here Si is the number of clusters which the i-th file occupies).In order to place the files on the disk in the optimal way cluster-moving operations are executed. One cluster-moving operation includes reading of one occupied cluster from the disk to the memory and writing its contents to some free cluster. After that the first of them is declared free, and the second one is declared occupied.Your goal is to place the files on the disk in the optimal way by executing the minimal possible number of cluster-moving operations.","The first line of the input file contains two integers N and K separated by a space(1 All cluster numbers in the input file are different and there is always at least one free cluster on the disk.","Your program should write to the output file any sequence of cluster-moving operations that are needed in order to place the files on the disk in the optimal way. Two integers Pj and Qj separated by a single space should represent each cluster-moving operation. Pj gives the cluster number that the data should be moved FROM and Qj gives the cluster number that this data should be moved TO. The number of cluster-moving operations executed should be as small as possible. If the files on the disk are already placed in the optimal way the output should contain only the string ""No optimization needed"".","20 3
4 2 3 11 12
1 7
3 18 5 10","2 1
3 2
11 3
12 4
18 6
10 8
5 20
7 5
20 7"
Parliament,http://poj.org/problem?id=1032, 1000MS, 10000K,"New convocation of The Fool Land's Parliament consists of N delegates. According to the present regulation delegates should be divided into disjoint groups of different sizes and every day each group has to send one delegate to the conciliatory committee. The composition of the conciliatory committee should be different each day. The Parliament works only while this can be accomplished. You are to write a program that will determine how many delegates should contain each group in order for Parliament to work as long as possible.",The input file contains a single integer N (5OutputWrite to the output file the sizes of groups that allow the Parliament to work for the maximal possible time. These sizes should be printed on a single line in ascending order and should be separated by spaces. Sample Input7Sample Output3 4SourceNortheastern Europe 1998,Write to the output file the sizes of groups that allow the Parliament to work for the maximal possible time. These sizes should be printed on a single line in ascending order and should be separated by spaces. ,7,3 4
Fence,http://poj.org/problem?id=1031, 1000MS, 10000K,"There is an area bounded by a fence on some flat field. The fence has the height h and in the plane projection it has a form of a closed polygonal line (without self-intersections), which is specified by Cartesian coordinates (Xi, Yi) of its N vertices. At the point with coordinates (0, 0) a lamp stands on the field. The lamp may be located either outside or inside the fence, but not on its side as it is shown in the following sample pictures (parts shown in a thin line are not illuminated by the lamp):The fence is perfectly black, i.e. it is neither reflecting, nor diffusing, nor letting the light through. Research and experiments showed that the following law expresses the intensity of light falling on an arbitrary illuminated point of this fence:I0=k/rwhere k is a known constant value not depending on the point in question, r is the distance between this point and the lamp in the plane projection. The illumination of an infinitesimal narrow vertical board with the width dl and the height h is dI=I0*|cosα|*dl*hwhere I0 is the intensity of light on that board of the fence, α is the angle in the plane projection between the normal to the side of the fence at this point and the direction to the lamp.You are to write a program that will find the total illumination of the fence that is defined as the sum of illuminations of all its illuminated boards.","The first line of the input file contains the numbers k, h and N, separated by spaces. k and h are real constants. N (3 OutputWrite to the output file the total illumination of the fence rounded to the second digit after the decimal point.Sample Input0.5 1.7 3
1.0 3.0
2.0 -1.0
-4.0 -1.0
Sample Output5.34SourceNortheastern Europe 1998",Write to the output file the total illumination of the fence rounded to the second digit after the decimal point.,"0.5 1.7 3
1.0 3.0
2.0 -1.0
-4.0 -1.0
",5.34
Rating,http://poj.org/problem?id=1030, 1000MS, 10000K,"One of the participants of both regional contests which took place in St. Petersburg decided to determine overall rating for all teams that took part in at least one contest. This participant assigned each team a unique team identifier, which was an integer from 1 to 100 inclusively. For each contest team identifiers of the participating teams were written in a column according to their place in that contest. Identifiers of the teams that had equal results were written on the same line. The participant started with the team(s) that was(were) the best in that contest (writing them on the first line) and continued in the order of decreasing results.  Definition: Let's say that the team has place K in the contest if exactly K-1   teams performed in that contest better.Consider the following examples of two contests' results:      Contest       no. 1                          Contest       no. 2                              place                          team's id                          place                          team's id                              1                          9                          1                          3                              2                          7 1 4                          2                          5                              5                          5                          3                          1 10                              6                          15 8                          5                          6                              8                          31 18                          6                          9                              10                          17                          7                          19                                                                                    8                          4 20                                                                                    10                          21                  The overall rating for the teams which took part in both contests is defined in the following way:1)	If some team performed better in both contests than some other team (or better in one contest and with the same result in the other contest) then the overall rating of the former team is higher than the rating of the latter team.2)	If one of the teams in question performed better in one contest and the other team performed better in another contest then their overall rating depends on the difference of their places in both contests. So, in our example team 1 is better than team 5 in the first contest with a difference of 3 places and worse in the second contest with a difference of only 1 place, therefore the overall rating of team 1 is higher than team 5's one. If the difference of the places is the same for both contests then that teams have the equal overall ratings. The latter is also true for the teams that performed equally in both contests.In our example only teams 1, 4, 5, and 9 participated twice. Team 1 has the highest rating, teams 5 and 9 with the equal rating follow, and team 4 has the lowest rating.For the teams that participated in one contest only the overall rating and their position in the resulting list cannot be always determined. They are included in the overall list (where the teams which participated twice already placed according to the rules above) if one of the following takes place:A)	If there is a team that participated in both contests and shared the place in one of the contests with the team in question then the latter team shares the overall rating with this team too (if there is more than one such team, then they all should have the same overall rating, otherwise the overall rating of the team in question cannot be determined).B)	If there is a position in the overall list (either at the beginning of the list, at the end of the list, or between some lines), such that before this position only the teams are located which performed better in the same contest as the team in question and after this position only the teams are located which performed worse in the same contest as the team in question, then the team in question occupies this position in the overall list. If more than one team claim to have the same position in the overall list, then their mutual order is defined by their places in their contests (look at the example below for details).            Teams       that participated in both contests                          Teams       that participated in one contest only?Team 3 will occupy the first place in the overall list (rule B).?The positions of teams 6 and 7 cannot be determined.?Team 10 will share the overall rating with team 1 (rule A).?Team 20 will share the overall rating with team 4 (rule A).?Team 19 will occupy the position between teams 9, 5 and team 4 (rule B).?Teams 8, 15, 17, 18, 21, and 31 will finish the overall list (rule B). But the first of them will be teams 15 and 8 (that took 6th place) followed by teams 31 and 18 (that took 8th place) and teams 17 and 21 (that took 10th place).Your task is to write a program that will create the overall rating list using the result tables of two contests and the given rules.","The input file contains a description of the two contests, which are separated by an empty line. Each description starts with a line containing the single integer N (1 Every team identifier occurs at most once in the description of each contest.",Write to the output file one or more lines with the team identifiers (separated by spaces) that represent the overall rating list. The teams that share the same rating (thus written on the same line) is written in ascending order. The teams for which the overall rating is not determined should be absent in the output file.,"6
9
7 1 4
5
15 8
31 18
17

8
3
5
1 10
6
9
19
4 20
21
","3
1 10
5 9
19
4 20
8 15
18 31
17 21"
False coin,http://poj.org/problem?id=1029, 1000MS, 65536K,"The ""Gold Bar""bank received information from reliable sources that in their last group of N coins exactly one coin is false and differs in weight from other coins (while all other coins are equal in weight). After the economic crisis they have only a simple balance available (like one in the picture). Using this balance, one is able to determine if the weight of objects in the left pan is less than, greater than, or equal to the weight of objects in the right pan.In order to detect the false coin the bank employees numbered all coins by the integers from 1 to N, thus assigning each coin a unique integer identifier. After that they began to weight various groups of coins by placing equal numbers of coins in the left pan and in the right pan. The identifiers of coins and the results of the weightings were carefully recorded.You are to write a program that will help the bank employees to determine the identifier of the false coin using the results of these weightings.","The first line of the input file contains two integers N and K, separated by spaces, where N is the number of coins (2', or '='. It represents the result of the weighting:''>' means that the weight of coins in the left pan is greater than the weight of coins in the right pan,'=' means that the weight of coins in the left pan is equal to the weight of coins in the right pan.","Write to the output file the identifier of the false coin or 0, if it cannot be found by the results of the given weightings.","5 3
2 1 2 3 4
Sample Output3SourceNortheastern Europe 1998",3
Web Navigation,http://poj.org/problem?id=1028, 1000MS, 10000K,"Standard web browsers contain features to move backward and forward among the pages recently visited. One way to implement these features is to use two stacks to keep track of the pages that can be reached by moving backward and forward. In this problem, you are asked to implement this. The following commands need to be supported: BACK: Push the current page on the top of the forward stack. Pop the page from the top of the backward stack, making it the new current page. If the backward stack is empty, the command is ignored. FORWARD: Push the current page on the top of the backward stack. Pop the page from the top of the forward stack, making it the new current page. If the forward stack is empty, the command is ignored. VISIT : Push the current page on the top of the backward stack, and make the URL specified the new current page. The forward stack is emptied. QUIT: Quit the browser. Assume that the browser initially loads the web page at the URL http://www.acm.org/ ","Input is a sequence of commands. The command keywords BACK, FORWARD, VISIT, and QUIT are all in uppercase. URLs have no whitespace and have at most 70 characters. You may assume that no problem instance requires more than 100 elements in each stack at any time. The end of input is indicated by the QUIT command. ","For each command other than QUIT, print the URL of the current page after the command is executed if the command is not ignored. Otherwise, print ""Ignored"". The output for each command should be printed on its own line. No output is produced for the QUIT command. ","VISIT http://acm.ashland.edu/
VISIT http://acm.baylor.edu/acmicpc/
BACK
BACK
BACK
FORWARD
VISIT http://www.ibm.com/
BACK
BACK
FORWARD
FORWARD
FORWARD
QUIT","http://acm.ashland.edu/
http://acm.baylor.edu/acmicpc/
http://acm.ashland.edu/
http://www.acm.org/
Ignored
http://acm.ashland.edu/
http://www.ibm.com/
http://acm.ashland.edu/
http://www.acm.org/
http://acm.ashland.edu/
http://www.ibm.com/
Ignored"
The Same Game,http://poj.org/problem?id=1027, 1000MS, 10000K,"The game named ""Same"" is a single person game played on a 10 \Theta 15 board. Each square contains a ball colored red (R), green (G), or blue (B). Two balls belong to the same cluster if they have the same color, and one can be reached from another by following balls of the same color in the four directions up, down, left, and right. At each step of the game, the player chooses a ball whose cluster has at least two balls and removes all balls in the cluster from the board. Then, the board is ""compressed"" in two steps: 1. Shift the remaining balls in each column down to fill the empty spaces. The order of the balls in each column is preserved. 2. If a column becomes empty, shift the remaining columns to the left as far as possible. The order of the columns is preserved. For example, choosing the ball at the bottom left corner in the sub-board below causes: The objective of the game is to remove every ball from the board, and the game is over when every ball is removed or when every cluster has only one ball. The scoring of each game is as follows. The player starts with a score of 0. When a cluster of m balls is removed, the player's score increases by (m-2)^2 . A bonus of 1000 is given if every ball is removed at the end of the game. You suspect that a good strategy might be to choose the ball that gives the largest possible cluster at each step, and you want to test this strategy by writing a program to simulate games played using this strategy. If there are two or more balls to choose from, the program should choose the leftmost ball giving the largest cluster. If there is still a tie, it should choose the bottommost ball of these leftmost balls. ","You will be given a number of games in the input. The first line of input contains a positive integer giving the number of games to follow. The initial arrangement of the balls of each game is given one row at a time, from top to bottom. Each row contains 15 characters, each of which is one of ""R"", ""G"", or ""B"", specifying the colors of the balls in the row from left to right. A blank line precedes each game. ","For each game, print the game number, followed by a new line, followed by information about each move, followed by the final score. Each move should be printed in the format: Move x at (r,c): removed b balls of color C, got s points. where x is the move number, r and c are the row number and column number of the chosen ball, respectively. The rows are numbered from 1 to 10 from the bottom, and columns are numbered from 1 to 15 from the left. b is the number of balls in the cluster removed. C is one of ""R"", ""G"", or ""B"", indicating the color of the balls removed. s is the score for this move. The score does not include the 1000 point bonus if all the balls are removed after the move. The final score should be reported as follows: Final score: s, with b balls remaining. Insert a blank line between the output of each game. Use the plural forms ""balls"" and ""points"" even if the corresponding value is 1. ","3 
RGGBBGGRBRRGGBG 
RBGRBGRBGRBGRBG
RRRRGBBBRGGRBBB
GGRGBGGBRRGGGBG
GBGGRRRRRBGGRRR
BBBBBBBBBBBBBBB
BBBBBBBBBBBBBBB
RRRRRRRRRRRRRRR
RRRRRRGGGGRRRRR
GGGGGGGGGGGGGGG

RRRRRRRRRRRRRRR
RRRRRRRRRRRRRRR
GGGGGGGGGGGGGGG
GGGGGGGGGGGGGGG
BBBBBBBBBBBBBBB
BBBBBBBBBBBBBBB
RRRRRRRRRRRRRRR
RRRRRRRRRRRRRRR 
GGGGGGGGGGGGGGG
GGGGGGGGGGGGGGG

RBGRBGRBGRBGRBG
BGRBGRBGRBGRBGR
GRBGRBGRBGRBGRB
RBGRBGRBGRBGRBG
BGRBGRBGRBGRBGR
GRBGRBGRBGRBGRB
RBGRBGRBGRBGRBG
BGRBGRBGRBGRBGR
GRBGRBGRBGRBGRB
RBGRBGRBGRBGRBG","Game 1: 

Move 1 at (4,1): removed 32 balls of color B, got 900 points. 
Move 2 at (2,1): removed 39 balls of color R, got 1369 points. 
Move 3 at (1,1): removed 37 balls of color G, got 1225 points. 
Move 4 at (3,4): removed 11 balls of color B, got 81 points. 
Move 5 at (1,1): removed 8 balls of color R, got 36 points. 
Move 6 at (2,1): removed 6 balls of color G, got 16 points. 
Move 7 at (1,6): removed 6 balls of color B, got 16 points. 
Move 8 at (1,2): removed 5 balls of color R, got 9 points. 
Move 9 at (1,2): removed 5 balls of color G, got 9 points. 
Final score: 3661, with 1 balls remaining. 

Game 2: 

Move 1 at (1,1): removed 30 balls of color G, got 784 points. 
Move 2 at (1,1): removed 30 balls of color R, got 784 points. 
Move 3 at (1,1): removed 30 balls of color B, got 784 points. 
Move 4 at (1,1): removed 30 balls of color G, got 784 points. 
Move 5 at (1,1): removed 30 balls of color R, got 784 points. 
Final score: 4920, with 0 balls remaining. 

Game 3: 

Final score: 0, with 150 balls remaining. "
Cipher,http://poj.org/problem?id=1026, 1000MS, 10000K,"Bob and Alice started to use a brand-new encoding scheme. Surprisingly it is not a Public Key Cryptosystem, but their encoding and decoding is based on secret keys. They chose the secret key at their last meeting in Philadelphia on February 16th, 1996. They chose as a secret key a sequence of n distinct integers, a1 ; . . .; an, greater than zero and less or equal to n. The encoding is based on the following principle. The message is written down below the key, so that characters in the message and numbers in the key are correspondingly aligned. Character in the message at the position i is written in the encoded message at the position ai, where ai is the corresponding number in the key. And then the encoded message is encoded in the same way. This process is repeated k times. After kth encoding they exchange their message.The length of the message is always less or equal than n. If the message is shorter than n, then spaces are added to the end of the message to get the message with the length n.Help Alice and Bob and write program which reads the key and then a sequence of pairs consisting of k and message to be encoded k times and produces a list of encoded messages. ","The input file consists of several blocks. Each block has a number 0 OutputOutput is divided into blocks corresponding to the input blocks. Each block contains the encoded input messages in the same order as in input file. Each encoded message in the output file has the lenght n. After each block there is one empty line. Sample Input10
4 5 3 7 2 8 1 6 10 9
1 Hello Bob
1995 CERC
0
0
Sample OutputBolHeol  b
C RCE

SourceCentral Europe 1995",Output is divided into blocks corresponding to the input blocks. Each block contains the encoded input messages in the same order as in input file. Each encoded message in the output file has the lenght n. After each block there is one empty line. ,"10
4 5 3 7 2 8 1 6 10 9
1 Hello Bob
1995 CERC
0
0
","BolHeol  b
C RCE

"
Department,http://poj.org/problem?id=1025, 1000MS, 10000K,"The Department of Security has a new headquarters building. The building has several floors, and on each floor there are rooms numbered xxyy where yy stands for the room number and xx for the floor number, 0 Each agent enters the building at the 1st floor, passes the reception and then starts to visit the rooms according to his/her list. Agents always visit the rooms by the increasing room numbers. The agents form a linear hierarchy according to which they have assigned their one letter personal codes. The agents with higher seniority have lexicographically smaller codes. No two agents have the same code.If more then one agent want to enter a room, or an elevator, the agents have to form a queue. In each queue, they always stand according to their codes. The higher the seniority of the agent, the closer to the top of the queue he stands. Every 5 s (seconds) the first agent in the queue in front of the elevator enters the elevator. After visiting the last room in the headquarters each agent uses if necessary elevator to the first floor and exits the building.The times necessary to move from a certain point in the headquarters to another are set as follows: Entering the building, i.e. passing the reception and reaching the elevator, or a room on the first floor takes 30 s. Exiting the building, i.e. stepping out of the elevator or a room on the first floor and passing the reception takes also 30 s. On the same floor, the transfer from the elevator to the room (or to the queue in front of the room), or from the room to the elevator (or to the queue in front of the elevator), or from one room to another (or to the queue in front of the room) takes 10 s. The transfer from one floor to the next floor above or below in an elevator takes 30 s. Write a program that determines time course of agent's visits in the headquarters. ","The input file contains the descriptions of n >= 0 visits of different agents. The first line of the description of each visit consists of agent's one character code C, C = A, . . ., Z, and the time when the agent enters the headquarters. The time is in the format HH:MM:SS (hours, minutes, seconds). The next lines (there will be at least one) contain the room number, and the length of time intended to stay in the room, time is in seconds. Each room is in a separate line. The list of rooms is sorted according to the increasing room number. The list of rooms ends by the line containing 0. The list of the descriptions of visits ends by the line containing the character dot. ","The output contains detailed records of each agent's visit in the headquarters. For each agent, there will be a block. Blocks are ordered in the order of increasing agent's codes. Blocks are separated by an empty line. After the last block there is an empty line too. The first line of a block contains the code of agent. Next lines contain the starting and ending time (in format HH:MM:SS) and the descriptions of his/her activity. Time data will be separated by one blank character. Description will be separated from time by one blank character. Description will have a form Entry, Exit or Message. The Message can be one of the following: Waiting in elevator queue, Waiting in front of room RoomNumber, Transfer from room RoomNumber to room RoomNumber, Transfer from elevator to room RoomNumber, Transfer from RoomNumber to elevator, Stay in room RoomNumber, Stay in elevator. ","A 10:00:00
0101 100
0110 50
0202 90
0205 50
0
B 10:01:00
0105 100
0201 5
0205 200
0
.
","A
10:00:00 10:00:30 Entry
10:00:30 10:02:10 Stay in room 0101
10:02:10 10:02:20 Transfer from room 0101 to room 0110
10:02:20 10:03:10 Stay in room 0110
10:03:10 10:03:20 Transfer from room 0110 to elevator
10:03:20 10:03:50 Stay in elevator
10:03:50 10:04:00 Transfer from elevator to room 0202
10:04:00 10:05:30 Stay in room 0202
10:05:30 10:05:40 Transfer from room 0202 to room 0205
10:05:40 10:07:40 Waiting in front of room 0205
10:07:40 10:08:30 Stay in room 0205
10:08:30 10:08:40 Transfer from room 0205 to elevator
10:08:40 10:09:10 Stay in elevator
10:09:10 10:09:40 Exit

B
10:01:00 10:01:30 Entry
10:01:30 10:03:10 Stay in room 0105
10:03:10 10:03:20 Transfer from room 0105 to elevator
10:03:20 10:03:25 Waiting in elevator queue
10:03:25 10:03:55 Stay in elevator
10:03:55 10:04:05 Transfer from elevator to room 0201
10:04:05 10:04:10 Stay in room 0201
10:04:10 10:04:20 Transfer from room 0201 to room 0205
10:04:20 10:07:40 Stay in room 0205
10:07:40 10:07:50 Transfer from room 0205 to elevator
10:07:50 10:08:20 Stay in elevator
10:08:20 10:08:50 Exit
"
Tester Program,http://poj.org/problem?id=1024, 1000MS, 10000K,"Tester ProgramFor this contest, we first designed the following problem (note that you do not have to solve it!):Another Wall in the MazeIn ACM/ICPC contests, you'll often see questions such as ""find the shortest path out of this maze."" Let's turn this on its head and ask ""given a path, find a maze for which the given path is the shortest path."" Our paths will run vertically and horizontally between the regularly spaced points of a rectangular grid. The problem is to compute a set of unit-length baffles (walls) separating grid points that forces the given path to be the unique shortest path from its starting point to the end point. To make things more interesting, we will require that there should be no redundant walls constructed in the sense that it should not be possible to remove any wall and still have the given path as the unique shortest path. In the following figure for example, consider the path through the 8 ? 5 grid on the left maze of the top row. The wall placements in the two mazes to its right (top row) make that path unique. The two mazes on the lower row are faulty.The path is not unique in the one on the left, and there are some redundant walls on the right.Input (of the original problem)The first line of the input file contains a single integer t (1 ≤ t ≤ 10), the number of test cases, followed by the input data for each test case. The first line of each test case consists of two integers W and H (1 ≤ W, H ≤ 100) giving the width and height of the grid respectively. The second line of the test case contains a path. The path always starts in the lowerleft corner, (0, 0). It is specified as a string of U (up), D (down), L (left), and R (right) characters (with no embedded white space). You may assume that the path remains within the bounds of the maze and does not intersect itself. It may end anywhere in the maze (i.e., not necessarily in a corner or against a wall).Output (of the original problem)First line of the output for the i-th test case (starting from one) should contain an integer M, the number of walls used in the solution. Following the first line, there are M lines each containing a wall specification in the form of four consecutive integers corresponding to two pairs of (x, y) coordinates specifying adjacent grid points separated by the wall (0 ≤ x Sample Input (of the original problem)28 5RRRUULLURRRRDDRRUUU4 3RRRUUSample Output (of the original problem)190 0 0 11 0 1 12 0 2 12 1 3 13 0 4 03 1 4 13 2 4 23 2 3 32 2 2 34 2 4 30 3 0 41 3 1 42 3 2 43 3 3 44 3 4 45 3 5 45 3 6 35 2 6 26 1 6 222 2 3 22 2 2 1This is the end of the original problem statement! Being lazy, we did not want to spend time to write a tester program for this problem, and decided to have you write this for us!Write a program that receives both input and output as one input test case, and write as output CORRECT or INCORRECT to indicate whether or not the output is correct.","You read both input and output of the original problem from the standard input;it has each output just after each case's input of the original problem.Note that the output of original does not have formatting problems, i.e.,  The number of lines in the output file is correct and is as supposed to be.  There are no leading or trailing white space characters in output lines.  Wall specifications are correct, meaning that the four numbers correctly specify a possible wall within the boundary of the maze.","Your program should write a single line for each test case of the input containing a single word CORRECT or INCORRECT, indicating the original problem has correctly produced the output for that test case or not.","2
8 5
RRRUULLURRRRDDRRUUU
19
0 0 0 1
1 0 1 1
2 0 2 1
2 1 3 1
3 0 4 0
3 1 4 1
3 2 4 2
3 2 3 3
2 2 2 3
4 2 4 3
0 3 0 4
1 3 1 4
2 3 2 4
3 3 3 4
4 3 4 4
5 3 5 4
5 3 6 3
5 2 6 2
6 1 6 2
4 3
RRRUU
2
2 2 3 2
2 2 2 1","CORRECT
INCORRECT"
The Fun Number System,http://poj.org/problem?id=1023, 1000MS, 10000K,"In a k bit 2's complement number, where the bits are indexed from 0 to k-1, the weight of the most significant bit (i.e., in position k-1), is -2^(k-1), and the weight of a bit in any position i (0 ≤ i A Fun number system is a positional binary number system, where each bit can be either a negabit, or a posibit. For example consider a 3-bit fun number system Fun3, where bits in positions 0, and 2 are posibits, and the bit in position 1 is a negabit. (110)Fun3 is evaluated as 2^2-2^1 + 0 = 3. Now you are going to have fun with the Fun number systems! You are given the description of a k-bit Fun number system Funk, and an integer N (possibly negative. You should determine the k bits of a representation of N in Funk, or report that it is not possible to represent the given N in the given Funk. For example, a representation of -1 in the Fun3 number system (defined above), is 011 (evaluated as 0 - 2^1 + 2^0), andrepresenting 6 in Fun3 is impossible.","The first line of the input file contains a single integer t (1 ≤ t ≤ 10), the number of test cases, followed by the input data for each test case. Each test case is given in three consecutive lines. In the first line there is a positive integer k (1 ≤ k ≤ 64). In the second line of a test data there is a string of length k, composed only of letters n, and p, describing the Fun number system for that test data, where each n (p) indicates that the bit in that position is a negabit (posibit).The third line of each test data contains an integer N (-2^63 ≤ N system by your program.","For each test data, you should print one line containing either a k-bit string representing the given number N in the Funk number system, or the word Impossible, when it is impossible to represent the given number.","2
3
pnp
6
4
ppnn
10","Impossible
1110"
Packing Unit 4D Cubes,http://poj.org/problem?id=1022, 1000MS, 10000K,"We usually think that there are three geometric dimensions; the fourth dimension is usually time. However, the Association for Customizing Machines (ACM) has to deal with four geometrical dimensions for their strange customer EE3 who needs to pack four dimensional products into perpendicular parallelepipeds before shipping them to the newly emerged market niche just on the outskirts of the Milky Way.Each of EE3 products consists of a number of unit 4D cubes that are glued together at their faces. A face of a 4D cube is a 3D cube and each 4D cube has 8 such faces. The picture on the left shows a 4D cube projected into a plane with the four principal, orthogonal axes shown. It takes a bit of effort to stretch our imagination and see the faces of a 4D cube in such a projection. The pictures below try to illustrate how the two faces along each of the four axes are situated in 4D. Again, using just the planar projection it is not so easy to illustrate and takes some effort to see. But we have done a good job, didn't we?Each EE3 product to be packed consists of a number of unit 4D cubes that are glued together along their faces which are 3D cubes. Your job is simple: find the minimal volume measured in the number of unit 4D cubes of a perpendicular parallelepiped (a 4D box) into which the product can be packed before shipping.","The first line of the input file contains a single integer t (1 ≤ t ≤ 10), the number of test cases, followed by input data for each test case describing one EE3 product. The first line of each test case is an integer n (1 ≤ n ≤ 100) which is the number of unit 4D cubes used in the product. Next, there are n lines, each describing one unit cube and contains 9 nonnegative integer numbers.The first number, a positive integer, is the unique identifier of a cube and the remaining 8 numbers give the identities of neighbors of the cube listed in the following order:?the first two numbers are identifiers of the cubes glued to the opposing sides of the given cube along the x1 axis as seen looking in the direction of the x1 axis;?the next two numbers as above but for the x2 axis;?the next two numbers as above but for the x3 axis;?the next two numbers as above but for the x4 axis;If a cube does not have a neighbor glued to one of its faces we use 0 instead of a cube identifier.The problem is that the employees of ACM may produce inconsistent descriptions of EE3 products. There are two sources of such inconsistencies:?A consistent description must be symmetric, i.e. if cube x is glued to cube y at some face then cube y must be glued to cube x at the corresponding face along the same axis. The following description is inconsistent:3 0 0 1 0 0 0 0 01 0 0 3 0 0 0 0 0?Any description must describe a single solid, i.e. there must be only one component in the product. Thus the following is inconsistent:1 2 0 0 0 0 0 0 02 0 1 0 0 0 0 0 03 0 0 4 0 0 0 0 04 0 0 0 3 0 0 0 0","There should be one output line per test case containing either the number of unit 4D cubes in the smallest 4D perpendicular parallelepiped oriented along the axes into which the product can be packed if the description is consistent, or the word Inconsistent, otherwise.","1
9
1 2 3 4 5 6 7 8 9
2 0 1 0 0 0 0 0 0
3 1 0 0 0 0 0 0 0
4 0 0 0 1 0 0 0 0
5 0 0 1 0 0 0 0 0
6 0 0 0 0 0 1 0 0
7 0 0 0 0 1 0 0 0
8 0 0 0 0 0 0 0 1
9 0 0 0 0 0 0 1 0",81
Biorhythms,http://poj.org/problem?id=1006, 1000MS, 10000K,"Some people believe that there are three cycles in a person's life that start the day he or she is born. These three cycles are the physical, emotional, and intellectual cycles, and they have periods of lengths 23, 28, and 33 days, respectively. There is one peak in each period of a cycle. At the peak of a cycle, a person performs at his or her best in the corresponding field (physical, emotional or mental). For example, if it is the mental curve, thought processes will be sharper and concentration will be easier. Since the three cycles have different periods, the peaks of the three cycles generally occur at different times. We would like to determine when a triple peak occurs (the peaks of all three cycles occur in the same day) for any person. For each cycle, you will be given the number of days from the beginning of the current year at which one of its peaks (not necessarily the first) occurs. You will also be given a date expressed as the number of days from the beginning of the current year. You task is to determine the number of days from the given date to the next triple peak. The given date is not counted. For example, if the given date is 10 and the next triple peak occurs on day 12, the answer is 2, not 3. If a triple peak occurs on the given date, you should give the number of days to the next occurrence of a triple peak.","You will be given a number of cases. The input for each case consists of one line of four integers p, e, i, and d. The values p, e, and i are the number of days from the beginning of the current year at which the physical, emotional, and intellectual cycles peak, respectively. The value d is the given date and may be smaller than any of p, e, or i. All values are non-negative and at most 365, and you may assume that a triple peak will occur within 21252 days of the given date. The end of input is indicated by a line in which p = e = i = d = -1. ","For each test case, print the case number followed by a message indicating the number of days to the next triple peak, in the form:Case 1: the next triple peak occurs in 1234 days.Use the plural form ``days'' even if the answer is 1. ","0 0 0 0
0 0 0 100
5 20 34 325
4 5 6 7
283 102 23 320
203 301 203 40
-1 -1 -1 -1","Case 1: the next triple peak occurs in 21252 days.
Case 2: the next triple peak occurs in 21152 days.
Case 3: the next triple peak occurs in 19575 days.
Case 4: the next triple peak occurs in 16994 days.
Case 5: the next triple peak occurs in 8910 days.
Case 6: the next triple peak occurs in 10789 days."
I Think I Need a Houseboat,http://poj.org/problem?id=1005, 1000MS, 10000K,"Fred Mapper is considering purchasing some land in Louisiana to build his house on. In the process of investigating the land, he learned that the state of Louisiana is actually shrinking by 50 square miles each year, due to erosion caused by the Mississippi River. Since Fred is hoping to live in this house the rest of his life, he needs to know if his land is going to be lost to erosion.After doing more research, Fred has learned that the land that is being lost forms a semicircle. This semicircle is part of a circle centered at (0,0), with the line that bisects the circle being the X axis. Locations below the X axis are in the water. The semicircle has an area of 0 at the beginning of year 1. (Semicircle illustrated in the Figure.)","The first line of input will be a positive integer indicating how many data sets will be included (N). Each of the next N lines will contain the X and Y Cartesian coordinates of the land Fred is considering. These will be floating point numbers measured in miles. The Y coordinate will be non-negative. (0,0) will not be given.","For each data set, a single line of output should appear. This line should take the form of: “Property N: This property will begin eroding in year Z.” Where N is the data set (counting from 1), and Z is the first year (start from 1) this property will be within the semicircle AT THE END OF YEAR Z. Z must be an integer. After the last data set, this should print out “END OF OUTPUT.” ","2
1.0 1.0
25.0 0.0","Property 1: This property will begin eroding in year 1.
Property 2: This property will begin eroding in year 20.
END OF OUTPUT."
Financial Management,http://poj.org/problem?id=1004, 1000MS, 10000K,"Larry graduated this year and finally has a job. He's making a lot of money, but somehow never seems to have enough. Larry has decided that he needs to grab hold of his financial portfolio and solve his financing problems. The first step is to figure out what's been going on with his money. Larry has his bank account statements and wants to see how much money he has. Help Larry by writing a program to take his closing balance from each of the past twelve months and calculate his average account balance. ",The input will be twelve lines. Each line will contain the closing balance of his bank account for a particular month. Each number will be positive and displayed to the penny. No dollar sign will be included. ,"The output will be a single number, the average (mean) of the closing balances for the twelve months. It will be rounded to the nearest penny, preceded immediately by a dollar sign, and followed by the end-of-line. There will be no other spaces or characters in the output. ","100.00
489.12
12454.12
1234.10
823.05
109.20
5.27
1542.25
839.18
83.99
1295.01
1.75",$1581.42
Hangover,http://poj.org/problem?id=1003, 1000MS, 10000K,"How far can you make a stack of cards overhang a table? If you have one card, you can create a maximum overhang of half a card length. (We're assuming that the cards must be perpendicular to the table.) With two cards you can make the top card overhang the bottom one by half a card length, and the bottom one overhang the table by a third of a card length, for a total maximum overhang of 1/2 + 1/3 = 5/6 card lengths. In general you can make n cards overhang by 1/2 + 1/3 + 1/4 + ... + 1/(n + 1) card lengths, where the top card overhangs the second by 1/2, the second overhangs tha third by 1/3, the third overhangs the fourth by 1/4, etc., and the bottom card overhangs the table by 1/(n + 1). This is illustrated in the figure below.","The input consists of one or more test cases, followed by a line containing the number 0.00 that signals the end of the input. Each test case is a single line containing a positive floating-point number c whose value is at least 0.01 and at most 5.20; c will contain exactly three digits.","For each test case, output the minimum number of cards necessary to achieve an overhang of at least c card lengths. Use the exact output format shown in the examples.","1.00
3.71
0.04
5.19
0.00
","3 card(s)
61 card(s)
1 card(s)
273 card(s)"
487-3279,http://poj.org/problem?id=1002, 2000MS, 65536K,"Businesses like to have memorable telephone numbers. One way to make a telephone number memorable is to have it spell a memorable word or phrase. For example, you can call the University of Waterloo by dialing the memorable TUT-GLOP. Sometimes only part of the number is used to spell a word. When you get back to your hotel tonight you can order a pizza from Gino's by dialing 310-GINO. Another way to make a telephone number memorable is to group the digits in a memorable way. You could order your pizza from Pizza Hut by calling their ``three tens'' number 3-10-10-10.The standard form of a telephone number is seven decimal digits with a hyphen between the third and fourth digits (e.g. 888-1200). The keypad of a phone supplies the mapping of letters to numbers, as follows:A, B, and C map to 2D, E, and F map to 3G, H, and I map to 4J, K, and L map to 5M, N, and O map to 6P, R, and S map to 7T, U, and V map to 8W, X, and Y map to 9There is no mapping for Q or Z. Hyphens are not dialed, and can be added and removed as necessary. The standard form of TUT-GLOP is 888-4567, the standard form of 310-GINO is 310-4466, and the standard form of 3-10-10-10 is 310-1010.Two telephone numbers are equivalent if they have the same standard form. (They dial the same number.)Your company is compiling a directory of telephone numbers from local businesses. As part of the quality control process you want to check that no two (or more) businesses in the directory have the same telephone number.","The input will consist of one case. The first line of the input specifies the number of telephone numbers in the directory (up to 100,000) as a positive integer alone on the line. The remaining lines list the telephone numbers in the directory, with each number alone on a line. Each telephone number consists of a string composed of decimal digits, uppercase letters (excluding Q and Z) and hyphens. Exactly seven of the characters in the string will be digits or letters.","Generate a line of output for each telephone number that appears more than once in any form. The line should give the telephone number in standard form, followed by a space, followed by the number of times the telephone number appears in the directory. Arrange the output lines by telephone number in ascending lexicographical order. If there are no duplicates in the input print the line:No duplicates.","12
4873279
ITS-EASY
888-4567
3-10-10-10
888-GLOP
TUT-GLOP
967-11-11
310-GINO
F101010
888-1200
-4-8-7-3-2-7-9-
487-3279
","310-1010 2
487-3279 4
888-4567 3"
Exponentiation,http://poj.org/problem?id=1001, 500MS, 10000K,"Problems involving the computation of exact values of very large magnitude and precision are common. For example, the computation of the national debt is a taxing experience for many computer systems. This problem requires that you write a program to compute the exact value of Rn where R is a real number ( 0.0 InputThe input will consist of a set of pairs of values for R and n. The R value will occupy columns 1 through 6, and the n value will be in columns 8 and 9.OutputThe output will consist of one line for each line of input giving the exact value of R^n. Leading zeros should be suppressed in the output. Insignificant trailing zeros must not be printed. Don't print the decimal point if the result is an integer.Sample Input95.123 12
0.4321 20
5.1234 15
6.7592  9
98.999 10
1.0100 12
Sample Output548815620517731830194541.899025343415715973535967221869852721
.00000005148554641076956121994511276767154838481760200726351203835429763013462401
43992025569.928573701266488041146654993318703707511666295476720493953024
29448126.764121021618164430206909037173276672
90429072743629540498.107596019456651774561044010001
1.126825030131969720661201HintIf you don't know how to determine wheather encounted the end of input:s is a string and n is an integerC++while(cin>>s>>n){...}cwhile(scanf(""%s%d"",s,&n)==2) //to  see if the scanf read in as many items as you want/*while(scanf(%s%d"",s,&n)!=EOF) //this also work    */{...}SourceEast Central North America 1988","The input will consist of a set of pairs of values for R and n. The R value will occupy columns 1 through 6, and the n value will be in columns 8 and 9.",The output will consist of one line for each line of input giving the exact value of R^n. Leading zeros should be suppressed in the output. Insignificant trailing zeros must not be printed. Don't print the decimal point if the result is an integer.,"95.123 12
0.4321 20
5.1234 15
6.7592  9
98.999 10
1.0100 12
","548815620517731830194541.899025343415715973535967221869852721
.00000005148554641076956121994511276767154838481760200726351203835429763013462401
43992025569.928573701266488041146654993318703707511666295476720493953024
29448126.764121021618164430206909037173276672
90429072743629540498.107596019456651774561044010001
1.126825030131969720661201"
