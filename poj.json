{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "Calculate a+b ", "title": "A+B Problem", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1000", "Input": "Two integer a,b (0", "Output": "Output a+b", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "Nahid Khaleh decides to invite the kids of the "Shahr-e Ghashang" to her wedding anniversary. She wants to prepare a square-shaped chocolate cake with known size. She asks each invited person to determine the size of the piece of cake that he/she wants (which should also be square-shaped). She knows that Mr. Kavoosi would not bear any wasting of the cake. She wants to know whether she can make a square cake with that size that serves everybody exactly with the requested size, and without any waste.", "title": "Anniversary Cake", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1020", "Input": "The first line of the input file contains a single integer t (1 ≤ t ≤ 10), the number of test cases, followed by input data for each test case. Each test case consist of a single line containing an integer s, the side of the cake, followed by an integer n (1 ≤ n ≤ 16), the number of cake pieces, followed by n integers (in the range 1..10) specifying the side of each piece.", "Output": "There should be one output line per test case containing one of the words KHOOOOB! or HUTUTU! depending on whether the cake can be cut into pieces of specified size without any waste or not.", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "A single positive integer i is given. Write a program to find the digit located in the position i in the sequence of number groups S1S2...Sk. Each group Sk consists of a sequence of positive integer numbers ranging from 1 to k, written one after another.", "title": "Number Sequence", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1019", "Input": "For example, the first 80 digits of the sequence are as follows:", "Output": "11212312341234512345612345671234567812345678912345678910123456789101112345678910", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "We have received an order from Pizoor Communications Inc. for a special communication system. The system consists of several devices. For each device, we are free to choose from several manufacturers. Same devices from two manufacturers differ in their maximum bandwidths and prices. ", "title": "Communication System", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1018", "Input": "By overall bandwidth (B) we mean the minimum of the bandwidths of the chosen devices in the communication system and the total price (P) is the sum of the prices of all chosen devices. Our goal is to choose a manufacturer for each device to maximize B/P.", "Output": "The first line of the input file contains a single integer t (1 ≤ t ≤ 10), the number of test cases, followed by the input data for each test case. Each test case starts with a line containing a single integer n (1 ≤ n ≤ 100), the number of devices in the communication system, followed by n lines in the following format: the i-th line (1 ≤ i ≤ n) starts with mi (1 ≤ mi ≤ 100), the number of manufacturers for the i-th device, followed by mi pairs of positive integers in the same line, each indicating the bandwidth and the price of the device respectively, corresponding to a manufacturer.", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "A factory produces products packed in square packets of the same height h and of the sizes 1*1, 2*2, 3*3, 4*4, 5*5, 6*6. These products are always delivered to customers in the square parcels of the same height h as the products have and of the size 6*6. Because of the expenses it is the interest of the factory as well as of the customer to minimize the number of parcels necessary to deliver the ordered products from the factory to the customer. A good program solving the problem of finding the minimal number of parcels necessary to deliver the given products according to an order would save a lot of money. You are asked to make such a program. ", "title": "Packets", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1017", "Input": "The input file consists of several lines specifying orders. Each line specifies one order. Orders are described by six integers separated by one space representing successively the number of packets of individual size from the smallest size 1*1 to the biggest size 6*6. The end of the input file is indicated by the line containing six zeros. ", "Output": "The output file contains one line for each line in the input file. This line contains the minimal number of parcels into which the order from the corresponding line of the input file can be packed. There is no line in the output file corresponding to the last ``null'' line of the input file. ", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": ""Kronecker's Knumbers" is a little company that manufactures plastic digits for use in signs (theater marquees, gas station price displays, and so on). The owner and sole employee, Klyde Kronecker, keeps track of how many digits of each type he has used by maintaining an inventory book. For instance, if he has just made a sign containing the telephone number "5553141", he'll write down the number "5553141" in one column of his book, and in the next column he'll list how many of each digit he used: two 1s, one 3, one 4, and three 5s. (Digits that don't get used don't appear in the inventory.) He writes the inventory in condensed form, like this: "21131435". ", "title": "Numbers That Count", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1016", "Input": "", "Output": "The other day, Klyde filled an order for the number 31123314 and was amazed to discover that the inventory of this number is the same as the number---it has three 1s, one 2, three 3s, and one 4! He calls this an example of a "self-inventorying number", and now he wants to find out which numbers are self-inventorying, or lead to a self-inventorying number through iterated application of the inventorying operation described below. You have been hired to help him in his investigations. ", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "In Frobnia, a far-away country, the verdicts in court trials are determined by a jury consisting of members of the general public. Every time a trial is set to begin, a jury has to be selected, which is done as follows. First, several people are drawn randomly from the public. For each person in this pool, defence and prosecution assign a grade from 0 to 20 indicating their preference for this person. 0 means total dislike, 20 on the other hand means that this person is considered ideally suited for the jury. ", "title": "Jury Compromise", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1015", "Input": "Based on the grades of the two parties, the judge selects the jury. In order to ensure a fair trial, the tendencies of the jury to favour either defence or prosecution should be as balanced as possible. The jury therefore has to be chosen in a way that is satisfactory to both parties. ", "Output": "We will now make this more precise: given a pool of n potential jurors and two values di (the defence's value) and pi (the prosecution's value) for each potential juror i, you are to select a jury of m persons. If J is a subset of {1,..., n} with m elements, then D(J ) = sum(dk)  k belong to J", "Memory_Limit": " 65536K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "Marsha and Bill own a collection of marbles. They want to split the collection among themselves so that both receive an equal share of the marbles. This would be easy if all the marbles had the same value, because then they could just split the collection in half. But unfortunately, some of the marbles are larger, or more beautiful than others. So, Marsha and Bill start by assigning a value, a natural number between one and six, to each marble. Now they want to divide the marbles so that each of them gets the same total value. Unfortunately, they realize that it might be impossible to divide the marbles in this way (even if the total value of all marbles is even). For example, if there are one marble of value 1, one of value 3 and two of value 4, then they cannot be split into sets of equal value. So, they ask you to write a program that checks whether there is a fair partition of the marbles. ", "title": "Dividing", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1014", "Input": "Each line in the input file describes one collection of marbles to be divided. The lines contain six non-negative integers n1 , . . . , n6 , where ni is the number of marbles of value i. So, the example from above would be described by the input-line "1 0 1 2 0 0". The maximum total number of marbles will be 20000. ", "Output": "The last line of the input file will be "0 0 0 0 0 0"; do not process this line. ", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "Sally Jones has a dozen Voyageur silver dollars. However, only eleven of the coins are true silver dollars; one coin is counterfeit even though its color and size make it indistinguishable from the real silver dollars. The counterfeit coin has a different weight from the other coins but Sally does not know if it is heavier or lighter than the real coins. ", "title": "Counterfeit Dollar", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1013", "Input": "Happily, Sally has a friend who loans her a very accurate balance scale. The friend will permit Sally three weighings to find the counterfeit coin. For instance, if Sally weighs two coins against each other and the scales balance then she knows these two coins are true. Now if Sally weighs ", "Output": "one of the true coins against a third coin and the scales do not balance then Sally knows the third coin is counterfeit and she can tell whether it is light or heavy depending on whether the balance on which it is placed goes up or down, respectively. ", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "The Joseph's problem is notoriously known. For those who are not familiar with the original problem: from among n people, numbered 1, 2, . . ., n, standing in circle every mth is going to be executed and only the life of the last remaining person will be saved. Joseph was smart enough to choose the position of the last remaining person, thus saving his life to give us the message about the incident. For example when n = 6 and m = 5 then the people will be executed in the order 5, 4, 6, 2, 3 and 1 will be saved.", "title": "Joseph", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1012", "Input": "", "Output": "Suppose that there are k good guys and k bad guys. In the circle the first k are good guys and the last k bad guys. You have to determine such minimal m that all the bad guys will be executed before the first good guy. ", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "George took sticks of the same length and cut them randomly until all parts became at most 50 units long. Now he wants to return sticks to the original state, but he forgot how many sticks he had originally and how long they were originally. Please help him and design a program which computes the smallest possible original length of those sticks. All lengths expressed in units are integers greater than zero. ", "title": "Sticks", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1011", "Input": "The input contains blocks of 2 lines. The first line contains the number of sticks parts after cutting, there are at most 64 sticks. The second line contains the lengths of those parts separated by the space. The last line of the file contains zero.", "Output": "The output should contains the smallest possible length of original sticks, one per line. ", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "Have you done any Philately lately? ", "title": "STAMPS", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1010", "Input": "", "Output": "You have been hired by the Ruritanian Postal Service (RPS) to design their new postage software.  The software allocates stamps to customers based on customer needs and the denominations that are currently in stock.", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "IONU Satellite Imaging, Inc. records and stores very large images using run  length encoding. You are to write a program that reads a compressed image, finds the edges in the image, as described below, and outputs another compressed image of the detected edges.", "title": "Edge Detection", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1009", "Input": "A simple edge detection algorithm sets an output pixel's value to be the maximum absolute value of the differences between it and all its surrounding pixels in the input image. Consider the input image below:", "Output": "", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "During his last sabbatical, professor M. A. Ya made a surprising discovery about the old Maya calendar. From an old knotted message, professor discovered that the Maya civilization used a 365 day long year, called Haab, which had 19 months. Each of the first 18 months was 20 days long, and the names of the months were pop, no, zip, zotz, tzec, xul, yoxkin, mol, chen, yax, zac, ceh, mac, kankin, muan, pax, koyab, cumhu. Instead of having names, the days of the months were denoted by numbers starting from 0 to 19. The last month of Haab was called uayet and had 5 days denoted by numbers 0, 1, 2, 3, 4. The Maya believed that this month was unlucky, the court of justice was not in session, the trade stopped, people did not even sweep the floor. ", "title": "Maya Calendar", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1008", "Input": "", "Output": "For religious purposes, the Maya used another calendar in which the year was called Tzolkin (holly year). The year was divided into thirteen periods, each 20 days long. Each day was denoted by a pair consisting of a number and the name of the day. They used 20 names: imix, ik, akbal, kan, chicchan, cimi, manik, lamat, muluk, ok, chuen, eb, ben, ix, mem, cib, caban, eznab, canac, ahau and 13 numbers; both in cycles. ", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "One measure of ``unsortedness'' in a sequence is the number of pairs of entries that are out of order with respect to each other. For instance, in the letter sequence ``DAABEC'', this measure is 5, since D is greater than four letters to its right and E is greater than one letter to its right. This measure is called the number of inversions in the sequence. The sequence ``AACEDGG'' has only one inversion (E and D)---it is nearly sorted---while the sequence ``ZWQM'' has 6 inversions (it is as unsorted as can be---exactly the reverse of sorted).", "title": "DNA Sorting", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1007", "Input": "", "Output": "You are responsible for cataloguing a sequence of DNA strings (sequences containing only the four letters A, C, G, and T). However, you want to catalog them, not in alphabetical order, but rather in order of ``sortedness'', from ``most sorted'' to ``least sorted''. All the strings are of the same length.", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "Some people believe that there are three cycles in a person's life that start the day he or she is born. These three cycles are the physical, emotional, and intellectual cycles, and they have periods of lengths 23, 28, and 33 days, respectively. There is one peak in each period of a cycle. At the peak of a cycle, a person performs at his or her best in the corresponding field (physical, emotional or mental). For example, if it is the mental curve, thought processes will be sharper and concentration will be easier. ", "title": "Biorhythms", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1006", "Input": "Since the three cycles have different periods, the peaks of the three cycles generally occur at different times. We would like to determine when a triple peak occurs (the peaks of all three cycles occur in the same day) for any person. For each cycle, you will be given the number of days from the beginning of the current year at which one of its peaks (not necessarily the first) occurs. You will also be given a date expressed as the number of days from the beginning of the current year. You task is to determine the number of days from the given date to the next triple peak. The given date is not counted. For example, if the given date is 10 and the next triple peak occurs on day 12, the answer is 2, not 3. If a triple peak occurs on the given date, you should give the number of days to the next occurrence of a triple peak.", "Output": "You will be given a number of cases. The input for each case consists of one line of four integers p, e, i, and d. The values p, e, and i are the number of days from the beginning of the current year at which the physical, emotional, and intellectual cycles peak, respectively. The value d is the given date and may be smaller than any of p, e, or i. All values are non-negative and at most 365, and you may assume that a triple peak will occur within 21252 days of the given date. The end of input is indicated by a line in which p = e = i = d = -1. ", "Memory_Limit": " 10000K"}
{"Time_Limit": " 15000MS", "Sample_Output": "Sample_Output", "Description": "Bugs Integrated, Inc. is a major manufacturer of advanced memory chips. They are launching production of a new six terabyte Q-RAM chip. Each chip consists of six unit squares arranged in a form of a 2*3 rectangle. The way Q-RAM chips are made is such that one takes a rectangular plate of silicon divided into N*M unit squares. Then all squares are tested carefully and the bad ones are marked with a black marker.", "title": "Bugs Integrated, Inc.", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1038", "Input": "", "Output": "Finally, the plate of silicon is cut into memory chips. Each chip consists of 2*3 (or 3*2) unit squares. Of course, no chip can contain any bad (marked) squares. It might not be possible to cut the plate so that every good unit square is a part of some memory chip. The corporation wants to waste as little good squares as possible. Therefore they would like to know how to cut the plate to make the maximum number of chips possible.", "Memory_Limit": " 30000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "Square Ice is a two-dimensional arrangement of water molecules H2O, with oxygen at the vertices of a square lattice and one hydrogen atom between each pair of adjacent oxygen atoms. The hydrogen atoms must stick out on the left and right sides but are not allowed to stick out the top or bottom. One 5 x 5 example is shown below. ", "title": "Square Ice", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1099", "Input": "", "Output": "Note that each hydrogen atom is attached to exactly one of its neighboring oxygen atoms and each oxygen atom is attached to two of its neighboring hydrogen atoms. (Recall that one water molecule is a unit of one O linked to two H's.)", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "The Hines Sign company has been contracted to supply roadside signs for the state highway system. The head of the company has put his son Myles Hines in charge of one particular class of signs, those which indicate the number of miles to carious towns. Myles is given a layout of the highway system and a set of locations where the signs should go: he is in charge of determining the mileage to nearby cities. To select which cities should be listed on any sign, he uses the following strategy: City X is put on the sign if the sign is on a road such that the shortest path from the intersection immediately preceding the sign to X uses the road. You may assume that there is only one shortest path between each pair of intersections. ", "title": "Roads Scholar", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1097", "Input": "Input consists of a single problem instance consisting of a description of the highway system, followed by a set of sign locations. The highway system is defined as a set of intersections (some of which are also city locations) and a set of roads connecting the intersections. The first line of a problem instance contains three positive integers n m k: n specifies the number of intersections (numbered 0, 1, 2, ..., n-1), m indicates the number of roads between connections, and k indicated the number of intersections which are also cities. Following this are m lines of the form i1 i2 d, which specifies a two-way road between intersections i1 and i2 of distance d. The next k lines are of the form i name, which specifies that intersection i is a city called name. After this is a line with a single positive integer s indicating the number of signs to place on the highway. The remaining s lines are of the form i1 i2 d indicating that a sign is to be placed on the road going from i1 to i2 a distance d from i1 (d will always be non-zero and less than the distance from i1 to i2). For all problem instances, the length of name will be ", "Output": "Each sign should be output as follows:", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "The Robots game is a one-player game played on a 31 x 31 board. The board is partitioned into 1 x 1 cells arranged in 31 rows and 31 columns. Each cell is indexed by (r, c) where r is the row and c is the column (starting from 1), and it may be empty, occupied by you, occupied by a robot, or occupied by debris. The object of this game is to move in such a way to destroy all the robots before the robots destroy you. ", "title": "Robots", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1098", "Input": "Initially, you occupy the cell at (15, 15), and there are R robots (1 When the robots move, each robot walks to the adjacent cell (even if it is not empty) in the eight compass directions such that the destination cell is closest to your current position (i.e. after your last move). The distance between two cells (r1, c1) and (r2, c2) is defined to be | r1 - r2 | + | c1 - c2 |. All robots walk at the same time during a move. If two or more robots walk to the same cell, or if a robot walks to a cell containing debris, all of these robots are destroyed. Destroyed robots become debris.", "Output": "You lose the game if any robot walks to your current position, even if multiple robots do so and destroy each other. You win the game if all robots are destroyed and none has moved to your current position.", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "Roger Wilco is in charge of the design of a low orbiting space station for the planet Mars. To simplify construction, the station is made up of a series of Airtight Cubical Modules (ACM's), which are connected together once in space. One problem that concerns Roger is that of (potentially) lethal bacteria that may reside in the upper atmosphere of Mars. Since the station will occasionally fly through the upper atmosphere, it is imperative that extra shielding be used on all faces of the ACM's touch, either edge to edge or face to face, that joint is sealed so no bacteria can sneak through. Any face of an ACM shared by another ACM will not need shielding, of course, nor will a face which cannot be reached from the outside. Roger could just put extra shielding on all of the faces of every ACM, but the cost would be prohibitive. Therefore, he wants to know the exact number of ACM faces which need the extra shielding. ", "title": "Space Station Shielding", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1096", "Input": "Input consists of multiple problem instances. Each instance consists of a specification of a space station. We assume that each space station can fit into an n x m x k grid (1 ", "Output": "For each problem instance, you should output one line of the form", "Memory_Limit": " 65536K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "We can number binary trees using the following scheme: ", "title": "Trees Made to Order", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1095", "Input": "The empty tree is numbered 0.", "Output": "The single-node tree is numbered 1.", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "An ascending sorted sequence of distinct values is one in which some form of a less-than operator is used to order the elements from smallest to largest. For example, the sorted sequence A, B, C, D implies that A ", "title": "Sorting It All Out", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1094", "Input": "Input consists of multiple problem instances. Each instance starts with a line containing two positive integers n and m. the first value indicated the number of objects to sort, where 2 ", "Output": "For each problem instance, output consists of one line. This line should be one of the following three:", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "Writings e-mails is fun, but, unfortunately, they do not look very nice, mainly because not all lines have the same lengths. In this problem, your task is to write an e-mail formatting program which reformats a paragraph of an e-mail (e.g. by inserting spaces) so that, afterwards, all lines have the same length (even the last one of each paragraph). ", "title": "Formatting Text", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1093", "Input": "The easiest way to perform this task would be to insert more spaces between the words in lines which are too short. But this is not the best way. Consider the following example: ", "Output": "Let us assume that we want to get lines as long as the row of stars. Then, by simply inserting spaces, we would get ", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "We have a map for farming land in a country. The whole farming land of the  country is divided into a set of disjoint farming regions. Each farmer owns  only one farming region in this country. There is a boundary fence between two neighboring farming regions. The farmland map for this country can be represented in a plane graph. The following Figure-1 shows one example.", "title": "Farmland", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1092", "Input": "", "Output": "", "Memory_Limit": " 65536K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "Z城市居住着很多只跳蚤。在Z城市周六生活频道有一个娱乐节目。一只跳蚤将被请上一个高空钢丝的正中央。钢丝很长，可以看作是无限长。节目主持人会给该跳蚤发一张卡片。卡片上写有N+1个自然数。其中最后一个是M，而前N个数都不超过M，卡片上允许有相同的数字。跳蚤每次可以从卡片上任意选择一个自然数S，然后向左，或向右跳S个单位长度。而他最终的任务是跳到距离他左边一个单位长度的地方，并捡起位于那里的礼物。", "title": "跳蚤", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1091", "Input": "比如当N=2，M=18时，持有卡片(10, 15, 18)的跳蚤，就可以完成任务：他可以先向左跳10个单位长度，然后再连向左跳3次，每次15个单位长度，最后再向右连跳3次，每次18个单位长度。而持有卡片(12, 15, 18)的跳蚤，则怎么也不可能跳到距他左边一个单位长度的地方。", "Output": "当确定N和M后，显然一共有M^N张不同的卡片。现在的问题是，在这所有的卡片中，有多少张可以完成任务。", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "Byteland had not always been a democratic country. There were also black pages in its book of history. One lovely day general Bytel − commander of the junta which had power over Byteland −− decided to finish the long−lasting time of war and released imprisoned activists of the opposition. However, he had no intention to let the leader Bytesar free. He decided to chain him to the wall with the bytish chain. It consists of joined rings and the bar fixed to the wall. Although the rings are not joined with the bar, it is hard to take them off.", "title": "Chain", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1090", "Input": "'General, why have you chained me to the prison walls and did not let rejoice at freedom!' cried Bytesar.", "Output": "'But Bytesar, you are not chained at all, and I am certain you are able to take off the rings from the bar by yourself.' perfidiously answered general Bytel, and he added 'But deal with that before a clock strikes the cyber hour and do not make a noise at night, otherwise I will be forced to call Civil Cyber Police.'", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "There is given the series of n closed intervals [ai; bi], where i=1,2,...,n. The sum of those intervals may be represented as a sum of closed pairwise non−intersecting intervals. The task is to find such representation with the minimal number of intervals. The intervals of this representation should be written in the output file in acceding order. We say that the intervals [a; b] and [c; d] are in ascending order if, and only if a Task", "title": "Intervals", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1089", "Input": "Write a program which:", "Output": "reads from the std input the description of the series of intervals,", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "Michael喜欢滑雪百这并不奇怪， 因为滑雪的确很刺激。可是为了获得速度，滑的区域必须向下倾斜，而且当你滑到坡底，你不得不再次走上坡或者等待升降机来载你。Michael想知道载一个区域中最长底滑坡。区域由一个二维数组给出。数组的每个数字代表点的高度。下面是一个例子", "title": "滑雪", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1088", "Input": "", "Output": "一个人可以从某个点滑向上下左右相邻四个点之一，当且仅当高度减小。在上面的例子中，一条可滑行的滑坡为24-17-16-1。当然25-24-23-...-3-2-1更长。事实上，这是最长的一条。", "Memory_Limit": " 65536K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "You are in charge of setting up the press room for the inaugural meeting of the United Nations Internet eXecutive (UNIX), which has an international mandate to make the free flow of information and ideas on the Internet as cumbersome and bureaucratic as possible. ", "title": "A Plug for UNIX", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1087", "Input": "Since the room was designed to accommodate reporters and journalists from around the world, it is equipped with electrical receptacles to suit the different shapes of plugs and voltages used by appliances in all of the countries that existed when the room was built. Unfortunately, the room was built many years ago when reporters used very few electric and electronic devices and is equipped with only one receptacle of each type. These days, like everyone else, reporters require many such devices to do their jobs: laptops, cell phones, tape recorders, pagers, coffee pots, microwave ovens, blow dryers, curling ", "Output": "irons, tooth brushes, etc. Naturally, many of these devices can operate on batteries, but since the meeting is likely to be long and tedious, you want to be able to plug in as many as you can. ", "Memory_Limit": " 65536K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "Quadtrees are commonly used for encoding digital images in a compact form. Given an n * n image (where n is a power of 2, 1 1. If every pixel in the region associated with the current node has an intensity value of p, then the node is made a leaf and it is assigned an associated value of p. ", "title": "Unscrambling Images", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1086", "Input": "2. Otherwise, four nodes are added as children of the current node. The region is divided into four equal (square) quadrants and each quadrant is assigned to one child node. The algorithm recurses on each of the children nodes. ", "Output": "When the process terminates, we obtain a quadtree in which every internal node has four children. Every leaf node has an associated value representing the intensity of the region corresponding to the leaf node. An example of an image and its quadtree encoding is shown below. ", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "Triangle War is a two-player game played on the following triangular grid: ", "title": "Triangle War", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1085", "Input": "", "Output": "Two players, A and B, take turns filling in any dotted line connecting two dots, with A starting first. Once a line is filled, it cannot be filled again. If the line filled by a player completes one or more triangles, she owns the completed triangles and she is awarded another turn (i.e. the opponent skips a turn). The game ends after all dotted lines are filled in, and the player with the most triangles wins the game. The difference in the number of triangles owned by the two players is not important. ", "Memory_Limit": " 65536K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "The  left  figure below  shows a complete  3*3  grid made with  2*(3*4) (=24)  matchsticks. The  lengths of all matchsticks are one. You can find many squares of different sizes in the grid. The size of a square is the length of its side. In the grid shown in the left figure, there are 9 squares of size one, 4 squares of size two, and 1 square of size three.  ", "title": "Square Destroyer", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1084", "Input": " ", "Output": "Each matchstick of the complete grid is identified with a unique number which is assigned from left to right and from top to bottom as shown in the left figure. If you take some matchsticks out from the complete grid, then  some  squares  in  the  grid will  be  destroyed, which  results  in  an  incomplete  3*3  grid. The  right  figure illustrates  an  incomplete  3*3  grid  after  removing  three  matchsticks  numbered  with  12,  17  and  23.  This removal destroys 5 squares of size one, 3 squares of size two, and 1 square of size three. Consequently, the incomplete grid does not have squares of size three, but still has 4 squares of size one and 1 square of size two.", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "The famous ACM (Advanced Computer Maker) Company has rented a floor of a building whose shape is in the following figure. ", "title": "Moving Tables", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1083", "Input": "", "Output": "The  floor  has  200  rooms  each  on  the  north  side  and  south  side  along  the  corridor. Recently  the Company made a plan  to  reform  its  system. The  reform  includes moving a  lot of  tables between  rooms. Because  the corridor is narrow and all the tables are big, only one table can pass through the corridor. Some plan is needed to make  the moving efficient. The manager  figured out  the  following plan: Moving a  table  from a  room  to another  room can be done within 10 minutes. When moving a  table  from  room  i  to  room  j,  the part of  the corridor  between  the  front  of  room  i  and  the  front  of  room  j  is  used.  So,  during  each  10 minutes,  several moving between two rooms not sharing the same part of the corridor will be done simultaneously. To make it clear the manager illustrated the possible cases and impossible cases of simultaneous moving.  ", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "Adam and Eve enter this year's ACM International Collegiate Programming Contest. Last night, they played the Calendar Game,  in celebration of  this contest. This game consists of  the dates  from  January 1, 1900  to November 4, 2001, the contest day. The game starts by randomly choosing a date from this interval. Then, the players, Adam and Eve, make moves in their turn with Adam moving first: Adam, Eve, Adam, Eve, etc. There is only one rule for moves and it is simple: from a current date, a player in his/her turn can move either to the next calendar date or the same day of the next month. When the next month does not have the same day, the player moves only to the next calendar date. For example, from December 19, 1924, you can move either to December  20,  1924,  the  next  calendar  date,  or  January  19,  1925,  the  same  day  of  the  next month.  From January 31 2001, however, you can move only to February 1, 2001, because February 31, 2001 is invalid.  ", "title": "Calendar Game", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1082", "Input": " ", "Output": "A player wins the game when he/she exactly reaches the date of November 4, 2001. If a player moves to a date after November 4, 2001, he/she looses the game. ", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "On the first day of first grade at Friendly Elementrary School, it is customary for each student to spend one minute talking to every classmate that he or she does not already know.  When student Bob sees an unfamilar face, he says ``You who?''  A typical response is ``Me Charlie, you who?''  Then Bob says, ``Me Bob!'' and they talk for a minute.  It's very cute.  Then, after a minute, they part and each looks for another stranger to greet. This takes time.  In class of twenty-nine or thirty mutual strangers, it takes 29 minutes; time that, according to teachers, could be better spent learning the alphabet.  Of course, it is rare to have a first grade class where nobody knows anyone else; there are neighbors and playmates who already know each other, so they don't have to go through the get-to-know-you minutes with each other. ", "title": "You Who?", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1081", "Input": "The two first grade teachers have requested that, to save time, students be allocated to their two classes so that the difference in the sizes of the classes is at most one, and the time it takes to complete these introductions is as small as possible.  There are no more than 60 students in the incoming first grade class. ", "Output": "", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "It is well known that a human gene can be considered as a sequence, consisting of four nucleotides, which are simply denoted by four letters, A, C, G, and T. Biologists have been interested in identifying human genes and  determining  their  functions,  because  these  can  be  used  to  diagnose  human  diseases  and  to  design  new drugs for them. ", "title": "Human Gene Functions", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1080", "Input": " ", "Output": "A human gene can be  identified  through a  series of  time-consuming biological experiments, often with  the help of computer programs. Once a sequence of a gene is obtained, the next job is to determine its function. ", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "If you ever see a televised report on stock market activity, you'll hear the anchorperson say something like ``Gainers outnumbered losers 14 to 9,'' which means that for every 14 stocks that increased in value that day, approximately 9 other stocks declined in value. Often, as you hear that, you'll see on the screen something like this: ", "title": "Ratio", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1079", "Input": "Gainers 1498 ", "Output": "Losers   902 ", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "The game of gizilch has very simple rules.  First 100 grapes are labeled, in nontoxic ink, with the numbers 1 to 100.  Then, with a cry of ``GIZILCH!'', the referee fires the grapes up into the air with a giant gizilcher.  The two players, who each start with a score of  ``1'', race to eat the falling (or, shortly thereafter, fallen) grapes and, at the same time, multiply their scores by the numbers written on the grapes they eat.  After a minute, the hungry squirrels are let loose to finish the remaining grapes, and each contestant reports his score, the product of the numbers on the grapes he's eaten.  The unofficial winner is the player who announces the highest score. ", "title": "Gizilch", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1078", "Input": "Inevitably, though, disputes arise, and so the official winner is not determined until the disputes are resolved.  The player who claims the lower score is entitled to challenge his opponent's score.  The player with the lower score is presumed to have told the truth, because if he were to lie about his score, he would surely come up with a bigger better lie.  The challenge is upheld if the player with the higher score has a score that cannot be achieved with grapes not eaten by the challenging player.  So, if the challenge is successful, the player claiming the lower score wins. ", "Output": "", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "The 15-puzzle has been around for over 100 years; even if you don't know it by that name, you've seen it.  It is constructed with 15 sliding tiles, each with a number from 1 to 15 on it, and all packed into a 4 by 4 frame with one tile missing.  Let's call the missing tile 'x'; the object of the puzzle is to arrange the tiles so that they are ordered as: ", "title": "Eight", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1077", "Input": "", "Output": "where the only legal operation is to exchange 'x' with one of the tiles with which it shares an edge.  As an example, the following sequence of moves solves a slightly scrambled puzzle: ", "Memory_Limit": " 65536K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "Technology hasn't come quickly to Joe's Bowl-a-rama.  Minimum wage teens, and not those fancy machines, still reset the pins, and the grizzled veteran bowlers still mark up their own score sheets. Unfortunately for Joe Junior, who now runs the Bowl-a-rama, people  his age are a little shaky on the scoring, especially after the second beer, and are staying away in droves, bowling instead at the new CyberBowl 2000 down the street, which scores automatically.  Joe Junior figures that if he puts a cheap PC next to every lane, he can get a cheap, semi-automatic scoring system going.  His plan is for the PC's to run software that only requires a bowler to enter the  number of pins that remain standing after every throw -- and the software will keep score and tell the bowler when his game is over.  Joe  Junior would like to hire you to write the software. ", "title": "Bowl", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1076", "Input": "Of course, since you may not know how to score a game of bowling either, Joe Junior has provided a description of the rules.  The basic game consists of ten frames.  In a frame, you get two chances to throw a ball down the alley and knock over as many pins as you can.   There are ten pins standing at the beginning of a frame, and none are replaced after getting knocked over on the first ball, so the most pins you can knock over in a frame is ten.  You get one point for each pin knocked over.  In addition, there are two bonuses you can  earn. If you knock over all ten pins on your first ball of the frame, you have scored a ``strike''; besides the ten points for the pins, your score in this frame is increased by the total number of pins knocked down with your next two balls.  Those next two balls are usually part of another frame (or two) and score points in that frame (or those frames) as well.  If you knock over all ten pins in a frame, but it takes you two balls to do it, you have scored a ``spare''; in addition to your ten points for pins knocked down, your score for the frame is increased by the number of pins you knock down on your next ball.  Of course, those pins also count as part of the next frame.  If you  score a spare (or strike) in the final (tenth) frame, you are entitled to one (or two) extra balls to determine your tenth frame bonus.  A perfect game scores 300 points, because each frame scores 30, 10 for knocking down 10 pins, and 20 for knocking down 20 pins with the next two balls combined. ", "Output": "", "Memory_Limit": " 65536K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "There is a fierce competition among high-school graduates in Iran to pass the centralized nationwide university entrance examination. Ministry of Science, Research, and Technology has set up the Education Evaluation Organization (EEO) to take care of all aspects of this big exam. This year the EEO managed to select some 150,000 students to enter universities out of 1.4 million high school graduates participated in a tough 4.5 hours multiple-choice exam. This annual event is usually preceded by a multi-billion Rial business offering preparatory courses to enthusiastic students. A few weeks after the big exam day, each participant receives a score sheet, and a list of Field-Department-University (FDU), displaying each field of study in the universities’ departments (e.g., the Software Engineering field of Computer Engineering department at Sharif University of Technology) along with their capacity for that year. The eligible participants (those who have scored enough to be allowed to declare their FDU priorities) fill out a priority indication form, and declare the FDUs they like to enter, in the order of their preference. The EEO processes the forms, and considering the total score, the participant’s FDU priority list, and some other selection rules, enters the accepted participants’ names in the list of each FDU, until all capacities are exhausted. Those who are not entered in a list are considered failed and may try again next year. Each accepted participant’s name may be entered in only one list.", "title": "University Entrance Examination", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1075", "Input": "", "Output": "One of the interesting selection rules is to persuade participants to enter universities in the vicinity of their home towns. This is to help reduce the number of requests for staying in the university dormitories. ", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "We are to predict some facts about the behavior of a single processor designed for running two programs in parallel. Programs are sequences of commands according to the following grammar:", "title": "Parallel Expectations", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1074", "Input": "", "Output": "A ", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "Willy the spider used to live in the chemistry laboratory of Dr. Petro. He used to wander about the lab pipes and sometimes inside empty ones. One night while he was in a pipe, he fell asleep. The next morning, Dr. Petro came to the lab. He didn't notice Willy while opening the valve to fill the pipes with hot water. Meanwhile, Stanley the gray mouse got what was going to happen. No time to lose! Stan ran hard to reach the valve before Willy gets drawn, but... Alas! He couldn't make it! ", "title": "The Willy Memorial Program", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1073", "Input": "", "Output": "Poor Willy was boiled in hot water, but his memory is still in our hearts. Though Stan tried his best, we want to write a program, in the memory of Willy, to compute the time Stan had, to rescue Willy, assuming he started to run just when the doctor opened the valve.", "Memory_Limit": " 10000K"}
{"Time_Limit": " 5000MS", "Sample_Output": "Sample_Output", "Description": "The scientific committee members of the 26th ACM/ICPC, who design the contest problems, use the following encryption algorithm to communicate the problem drafts securely through the Internet. To encrypt a text, all occurrences of each letter is replaced with another letter (possibly itself), such that no two letters are encrypted to the same letter. Both original and encrypted texts consist of only upper-case letters and blanks. Blanks are not encrypted and are repeated exactly in the encrypted text. As an example, the string GSRH RH GSV URIHG HZNKOV is the encrypted form of THIS IS THE FIRST SAMPLE according to the encryption table (A -> Z, B -> Y, C -> X,..., Z -> A).", "title": "Puzzle Out", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1072", "Input": "", "Output": "A recipient of a problem draft has lost the encryption table, but he has a dictionary which includes all the possible words appearing in the problems. You are to help him set up a decryption table to enable him restore the original problem draft from the encrypted one. Given a dictionary of the original words used in the text, and the encrypted text, we want to find the right encryption table such that after decrypting the given encrypted text back to the original one, all words can be found in the dictionary. ", "Memory_Limit": " 65536K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "Tom the robocat is presented in a Robotics Exhibition for an enthusiastic audience of youngsters, placed around an m * n field. Tom which is turned off initially is placed in some arbitrary point in the field by a volunteer from the audience. At time zero of the show, Tom is turned on by a remote control. Poor Tom is shown a holographic illusion of Jerry in a short distance such that a direct path between them is either vertical or horizontal. There may be obstacles in the field, but the illusion is always placed such that in the direct path between Tom and the illusion, there would be no obstacles. Tom tries to reach Jerry, but as soon as he gets there, the illusion changes its place and the chase goes on. Let's call each chase in one direction (up, down, left, and right), a chase trip. Each trip starts from where the last illusion was deemed and ends where the next illusion is deemed out. After a number of chase trips, the holographic illusion no more shows up, and poor Tom wonders what to do next. At this time, he is signaled that for sure, if he returns to where he started the chase, a real Jerry is sleeping and he can catch it.", "title": "Illusive Chase", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1071", "Input": "", "Output": "To simplify the problem, we can consider the field as a grid of squares. Some of the squares are occupied with obstacles. At any instant, Tom is in some unoccupied square of the grid and so is Jerry, such that the direct path between them is either horizontal or vertical. It's assumed that each time Tom is shown an illusion; he can reach it by moving only in one of the four directions, without bumping into an obstacle. Tom moves into an adjacent square of the grid by taking one and only one step.", "Memory_Limit": " 10000K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "The village's carpentry is located by a hill side. The carpenter's two little boys play with a piece of wood which looks like a deformed wheel with two identical convex polygon-shaped faces. One boy sets the wooden wheel on a slope at the hill top and let it roll down. The other boy is to quickly place himself at where he guesses the rolling wood would stop. Your program is to help him make the right guess.", "title": "Deformed Wheel", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1070", "Input": "", "Output": "More formally, we consider the wooden wheel as a simple convex polygon and we approximate the hill by a sequence of connected line segments with decreasing slopes. The slope of the last segment in the sequence is assumed to be zero, and the slope of the first segment is assumed to be a positive number. Initially, the wheel is placed on the hill such that there is at least one point of contact between the wheel and segments. For example in the following figure, the wheel in its initial position is drawn in solid lines, while the final position is drawn in dashed lines.", "Memory_Limit": " 10000K"}
{"Time_Limit": " 2000MS", "Sample_Output": "Sample_Output", "Description": "People in the hidden region of the Bermuda Triangle make everything they need in triangular shapes. One day, someone decided to break the rule and bake a hexagonally shaped cake. But as usual, he has to serve the cake in triangular pieces. The pieces are equilateral triangles but in different sizes for different people. He can use as many triangles as needed to cut the cake into pieces, such that nothing remains from the cake. For example, the following figure shows one way that a hexagon with side 9 can be cut into triangles with side 2 and 3. (The cake is cut along the thick lines, thin lines are drawn to show the sizes).", "title": "The Bermuda Triangle", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1069", "Input": "", "Output": "Input is a hexagon and triangle types (specified by the length of their sides) and the goal is to decide if the hexagon can be completely divided by the given triangle types.", "Memory_Limit": " 32768K"}
{"Time_Limit": " 1000MS", "Sample_Output": "Sample_Output", "Description": "Let S = s1 s2...s2n  be a well-formed string of parentheses. S can be encoded in two different ways:", "title": "Parencodings", "Sample_Input": "Sample_Input", "link": "http://poj.org/problem?id=1068", "Input": "q	By an integer sequence P = p1 p2...pn where pi is the number of left parentheses before the ith right parenthesis in S (P-sequence).", "Output": "q	By an integer sequence W = w1 w2...wn where for each right parenthesis, say a in S, we associate an integer which is the number of right parentheses counting from the matched left parenthesis of a up to a. (W-sequence).", "Memory_Limit": " 10000K"}
