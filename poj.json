{"content": [["Businesses like to have memorable telephone numbers. One way to make a telephone number memorable is to have it spell a memorable word or phrase. For example, you can call the University of Waterloo by dialing the memorable TUT-GLOP. Sometimes only part of the number is used to spell a word. When you get back to your hotel tonight you can order a pizza from Gino's by dialing 310-GINO. Another way to make a telephone number memorable is to group the digits in a memorable way. You could order your pizza from Pizza Hut by calling their ``three tens'' number 3-10-10-10.", "", "The standard form of a telephone number is seven decimal digits with a hyphen between the third and fourth digits (e.g. 888-1200). The keypad of a phone supplies the mapping of letters to numbers, as follows:", "", "A, B, and C map to 2", "D, E, and F map to 3", "G, H, and I map to 4", "J, K, and L map to 5", "M, N, and O map to 6", "P, R, and S map to 7", "T, U, and V map to 8", "W, X, and Y map to 9", "", "There is no mapping for Q or Z. Hyphens are not dialed, and can be added and removed as necessary. The standard form of TUT-GLOP is 888-4567, the standard form of 310-GINO is 310-4466, and the standard form of 3-10-10-10 is 310-1010.", "", "Two telephone numbers are equivalent if they have the same standard form. (They dial the same number.)", "", "Your company is compiling a directory of telephone numbers from local businesses. As part of the quality control process you want to check that no two (or more) businesses in the directory have the same telephone number.", ""], ["The input will consist of one case. The first line of the input specifies the number of telephone numbers in the directory (up to 100,000) as a positive integer alone on the line. The remaining lines list the telephone numbers in the directory, with each number alone on a line. Each telephone number consists of a string composed of decimal digits, uppercase letters (excluding Q and Z) and hyphens. Exactly seven of the characters in the string will be digits or letters."], ["Generate a line of output for each telephone number that appears more than once in any form. The line should give the telephone number in standard form, followed by a space, followed by the number of times the telephone number appears in the directory. Arrange the output lines by telephone number in ascending lexicographical order. If there are no duplicates in the input print the line:", "", "No duplicates."], []], "link": "http://poj.org/problem?id=1002", "title": ["487-3279"]}
{"content": [["Problems involving the computation of exact values of very large magnitude and precision are common. For example, the computation of the national debt is a taxing experience for many computer systems. ", "", "This problem requires that you write a program to compute the exact value of R", " where R is a real number ( 0.0 "], ["The input will consist of a set of pairs of values for R and n. The R value will occupy columns 1 through 6, and the n value will be in columns 8 and 9."], ["The output will consist of one line for each line of input giving the exact value of R^n. Leading zeros should be suppressed in the output. Insignificant trailing zeros must not be printed. Don't print the decimal point if the result is an integer."], ["If you don't know how to determine wheather encounted the end of input:", " is a string and ", " is an integer"], []], "link": "http://poj.org/problem?id=1001", "title": ["Exponentiation"]}
{"content": [["Calculate a+b "], ["Two integer a,b (0"], ["Output a+b"], ["Q: Where are the input and the output?", "", "A: Your program shall always ", ". For example, you can use 'scanf' in C or 'cin' in C++ to read from stdin, and use 'printf' in C or 'cout' in C++ to write to stdout.", "", "You ", " to standard output other than that required by the problem, otherwise you will get a "Wrong Answer".", "", "User programs are not allowed to open and read from/write to files. You will get a "Runtime Error" or a "Wrong Answer"if you try to do so. ", "", "Here is a sample solution to problem 1000 using C++/G++:", "It's important that the return type of main() must be int when you use G++/GCC,or you may get compile error.", "", "Here is a sample solution to problem 1000 using C/GCC:", "Here is a sample solution to problem 1000 using Pascal:", "Here is a sample solution to problem 1000 using Java:", "", "Now java compiler is jdk 1.5, next is program for 1000", "Old program for jdk 1.4", "Here is a sample solution to problem 1000 using Fortran:"], []], "link": "http://poj.org/problem?id=1000", "title": ["A+B Problem"]}
{"content": [["The 2D-Nim board game is played on a grid, with pieces on the grid points. On each move, a player may remove any positive number of contiguous pieces in any row or column. The player who removes the last piece wins. For example, consider the left grid in the following figure.", "", "The player on move may remove (A), (B), (A, B), (A, B, C), or (B,F), etc., but may not remove (A, C), (D, E), (H, I) or (B, G).", "For purposes of writing 2D-Nim-playing software, a certain programmer wants to be able to tell whether or not a certain position has ever been analyzed previously. Because of the rules of 2D-Nim, it should be clear that the two boards above are essentially equivalent. That is, if there is a winning strategy for the left board, the same one must apply to the right board. The fact that the contiguous groups of pieces appear in different places and orientations is clearly irrelevant. All that matters is that the same clusters of pieces (a cluster being a set of contiguous pieces that can be reached from each other by a sequence of one-square vertical or horizontal moves) appear in each. For example, the cluster of pieces (A, B, C, F, G) appears on both boards, but it has been reflected (swapping left and right), rotated, and moved. Your task is to determine whether two given board states are equivalent in this sense or not."], ["The first line of the input file contains a single integer t (1 ≤ t ≤ 10), the number of test cases, followed by the input data for each test case. The first line of each test case consists of three integers W, H, and n (1 ≤ W, H ≤ 100). W is the width, and H is the height of the grid in terms of the number of grid points. n is the number of pieces on each board. The second line of each test case contains a sequence of n pairs of integers xi , yi, giving the coordinates of the pieces on the first board (0 ≤ xi "], ["Your program should produce a single line for each test case containing a word YES or NO indicating whether the two boards are equivalent or not."], [", First Iran Nationwide Internet Programming Contest"]], "link": "http://poj.org/problem?id=1021", "title": ["2D-Nim"]}
{"content": [["Nahid Khaleh decides to invite the kids of the "Shahr-e Ghashang" to her wedding anniversary. She wants to prepare a square-shaped chocolate cake with known size. She asks each invited person to determine the size of the piece of cake that he/she wants (which should also be square-shaped). She knows that Mr. Kavoosi would not bear any wasting of the cake. She wants to know whether she can make a square cake with that size that serves everybody exactly with the requested size, and without any waste."], ["The first line of the input file contains a single integer t (1 ≤ t ≤ 10), the number of test cases, followed by input data for each test case. Each test case consist of a single line containing an integer s, the side of the cake, followed by an integer n (1 ≤ n ≤ 16), the number of cake pieces, followed by n integers (in the range 1..10) specifying the side of each piece."], ["There should be one output line per test case containing one of the words KHOOOOB! or HUTUTU! depending on whether the cake can be cut into pieces of specified size without any waste or not."], [", First Iran Nationwide Internet Programming Contest"]], "link": "http://poj.org/problem?id=1020", "title": ["Anniversary Cake"]}
{"content": [["A single positive integer i is given. Write a program to find the digit located in the position i in the sequence of number groups S1S2...Sk. Each group Sk consists of a sequence of positive integer numbers ranging from 1 to k, written one after another.", "For example, the first 80 digits of the sequence are as follows:", "11212312341234512345612345671234567812345678912345678910123456789101112345678910"], ["The first line of the input file contains a single integer t (1 ≤ t ≤ 10), the number of test cases, followed by one line for each test case. The line for a test case contains the single integer i (1 ≤ i ≤ 2147483647)"], ["There should be one output line per test case containing the digit located in the position i."], [", First Iran Nationwide Internet Programming Contest"]], "link": "http://poj.org/problem?id=1019", "title": ["Number Sequence"]}
{"content": [["We have received an order from Pizoor Communications Inc. for a special communication system. The system consists of several devices. For each device, we are free to choose from several manufacturers. Same devices from two manufacturers differ in their maximum bandwidths and prices. ", "By overall bandwidth (B) we mean the minimum of the bandwidths of the chosen devices in the communication system and the total price (P) is the sum of the prices of all chosen devices. Our goal is to choose a manufacturer for each device to maximize B/P."], ["The first line of the input file contains a single integer t (1 ≤ t ≤ 10), the number of test cases, followed by the input data for each test case. Each test case starts with a line containing a single integer n (1 ≤ n ≤ 100), the number of devices in the communication system, followed by n lines in the following format: the i-th line (1 ≤ i ≤ n) starts with mi (1 ≤ mi ≤ 100), the number of manufacturers for the i-th device, followed by mi pairs of positive integers in the same line, each indicating the bandwidth and the price of the device respectively, corresponding to a manufacturer."], ["Your program should produce a single line for each test case containing a single number which is the maximum possible B/P for the test case. Round the numbers in the output to 3 digits after decimal point."], [", First Iran Nationwide Internet Programming Contest"]], "link": "http://poj.org/problem?id=1018", "title": ["Communication System"]}
{"content": [["A factory produces products packed in square packets of the same height h and of the sizes 1*1, 2*2, 3*3, 4*4, 5*5, 6*6. These products are always delivered to customers in the square parcels of the same height h as the products have and of the size 6*6. Because of the expenses it is the interest of the factory as well as of the customer to minimize the number of parcels necessary to deliver the ordered products from the factory to the customer. A good program solving the problem of finding the minimal number of parcels necessary to deliver the given products according to an order would save a lot of money. You are asked to make such a program. "], ["The input file consists of several lines specifying orders. Each line specifies one order. Orders are described by six integers separated by one space representing successively the number of packets of individual size from the smallest size 1*1 to the biggest size 6*6. The end of the input file is indicated by the line containing six zeros. "], ["The output file contains one line for each line in the input file. This line contains the minimal number of parcels into which the order from the corresponding line of the input file can be packed. There is no line in the output file corresponding to the last ``null'' line of the input file. "], []], "link": "http://poj.org/problem?id=1017", "title": ["Packets"]}
{"content": [[""Kronecker's Knumbers" is a little company that manufactures plastic digits for use in signs (theater marquees, gas station price displays, and so on). The owner and sole employee, Klyde Kronecker, keeps track of how many digits of each type he has used by maintaining an inventory book. For instance, if he has just made a sign containing the telephone number "5553141", he'll write down the number "5553141" in one column of his book, and in the next column he'll list how many of each digit he used: two 1s, one 3, one 4, and three 5s. (Digits that don't get used don't appear in the inventory.) He writes the inventory in condensed form, like this: "21131435". ", "", "The other day, Klyde filled an order for the number 31123314 and was amazed to discover that the inventory of this number is the same as the number---it has three 1s, one 2, three 3s, and one 4! He calls this an example of a "self-inventorying number", and now he wants to find out which numbers are self-inventorying, or lead to a self-inventorying number through iterated application of the inventorying operation described below. You have been hired to help him in his investigations. ", "", "Given any non-negative integer n, its inventory is another integer consisting of a concatenation of integers c1 d1 c2 d2 ... ck dk , where each ci and di is an unsigned integer, every ci is positive, the di satisfy 0<=d1<d2<...<dk<=9, and, for each digit d that appears anywhere in n, d equals di for some i and d occurs exactly ci times in the decimal representation of n. For instance, to compute the inventory of 5553141 we set c1 = 2, d1 = 1, c2 = 1, d2 = 3, etc., giving 21131435. The number 1000000000000 has inventory 12011 ("twelve 0s, one 1"). ", "", "An integer n is called self-inventorying if n equals its inventory. It is called self-inventorying after j steps (j>=1) if j is the smallest number such that the value of the j-th iterative application of the inventory function is self-inventorying. For instance, 21221314 is self-inventorying after 2 steps, since the inventory of 21221314 is 31321314, the inventory of 31321314 is 31123314, and 31123314 is self-inventorying. ", "", "Finally, n enters an inventory loop of length k (k>=2) if k is the smallest number such that for some integer j (j>=0), the value of the j-th iterative application of the inventory function is the same as the value of the (j + k)-th iterative application. For instance, 314213241519 enters an inventory loop of length 2, since the inventory of 314213241519 is 412223241519 and the inventory of 412223241519 is 314213241519, the original number (we have j = 0 in this case). ", "", "Write a program that will read a sequence of non-negative integers and, for each input value, state whether it is self-inventorying, self-inventorying after j steps, enters an inventory loop of length k, or has none of these properties after 15 iterative applications of the inventory function. "], ["A sequence of non-negative integers, each having at most 80 digits, followed by the terminating value -1. There are no extra leading zeros. "], ["For each non-negative input value n, output the appropriate choice from among the following messages (where n is the input value, j is a positive integer, and k is a positive integer greater than 1): ", "n is self-inventorying ", "n is self-inventorying after j steps ", "n enters an inventory loop of length k ", "n can not be classified after 15 iterations "], []], "link": "http://poj.org/problem?id=1016", "title": ["Numbers That Count"]}
{"content": [["In Frobnia, a far-away country, the verdicts in court trials are determined by a jury consisting of members of the general public. Every time a trial is set to begin, a jury has to be selected, which is done as follows. First, several people are drawn randomly from the public. For each person in this pool, defence and prosecution assign a grade from 0 to 20 indicating their preference for this person. 0 means total dislike, 20 on the other hand means that this person is considered ideally suited for the jury. ", "Based on the grades of the two parties, the judge selects the jury. In order to ensure a fair trial, the tendencies of the jury to favour either defence or prosecution should be as balanced as possible. The jury therefore has to be chosen in a way that is satisfactory to both parties. ", "We will now make this more precise: given a pool of n potential jurors and two values di (the defence's value) and pi (the prosecution's value) for each potential juror i, you are to select a jury of m persons. If J is a subset of {1,..., n} with m elements, then D(J ) = sum(dk)  k belong to J", "and P(J) = sum(pk) k belong to J are the total values of this jury for defence and prosecution. ", "For an optimal jury J , the value |D(J) - P(J)| must be minimal. If there are several jurys with minimal |D(J) - P(J)|, one which maximizes D(J) + P(J) should be selected since the jury should be as ideal as possible for both parties. ", "You are to write a program that implements this jury selection process and chooses an optimal jury given a set of candidates. "], ["The input file contains several jury selection rounds. Each round starts with a line containing two integers n and m. n is the number of candidates and m the number of jury members. ", "These values will satisfy 1The file ends with a round that has n = m = 0. "], ["For each round output a line containing the number of the jury selection round ('Jury #1', 'Jury #2', etc.). ", "On the next line print the values D(J ) and P (J ) of your jury as shown below and on another line print the numbers of the m chosen candidates in ascending order. Output a blank before each individual candidate number. ", "Output an empty line after each test case. "], ["If your solution is based on an inefficient algorithm, it may not execute in the allotted time. "], []], "link": "http://poj.org/problem?id=1015", "title": ["Jury Compromise"]}
{"content": [["Marsha and Bill own a collection of marbles. They want to split the collection among themselves so that both receive an equal share of the marbles. This would be easy if all the marbles had the same value, because then they could just split the collection in half. But unfortunately, some of the marbles are larger, or more beautiful than others. So, Marsha and Bill start by assigning a value, a natural number between one and six, to each marble. Now they want to divide the marbles so that each of them gets the same total value. Unfortunately, they realize that it might be impossible to divide the marbles in this way (even if the total value of all marbles is even). For example, if there are one marble of value 1, one of value 3 and two of value 4, then they cannot be split into sets of equal value. So, they ask you to write a program that checks whether there is a fair partition of the marbles. "], ["Each line in the input file describes one collection of marbles to be divided. The lines contain six non-negative integers n1 , . . . , n6 , where ni is the number of marbles of value i. So, the example from above would be described by the input-line "1 0 1 2 0 0". The maximum total number of marbles will be 20000. ", "The last line of the input file will be "0 0 0 0 0 0"; do not process this line. "], ["For each collection, output "Collection #k:", where k is the number of the test case, and then either "Can be divided." or "Can't be divided.". ", "Output a blank line after each test case. "], []], "link": "http://poj.org/problem?id=1014", "title": ["Dividing"]}
{"content": [["Sally Jones has a dozen Voyageur silver dollars. However, only eleven of the coins are true silver dollars; one coin is counterfeit even though its color and size make it indistinguishable from the real silver dollars. The counterfeit coin has a different weight from the other coins but Sally does not know if it is heavier or lighter than the real coins. ", "Happily, Sally has a friend who loans her a very accurate balance scale. The friend will permit Sally three weighings to find the counterfeit coin. For instance, if Sally weighs two coins against each other and the scales balance then she knows these two coins are true. Now if Sally weighs ", "one of the true coins against a third coin and the scales do not balance then Sally knows the third coin is counterfeit and she can tell whether it is light or heavy depending on whether the balance on which it is placed goes up or down, respectively. ", "By choosing her weighings carefully, Sally is able to ensure that she will find the counterfeit coin with exactly three weighings. "], ["The first line of input is an integer n (n > 0) specifying the number of cases to follow. Each case consists of three lines of input, one for each weighing. Sally has identified each of the coins with the letters A--L. Information on a weighing will be given by two strings of letters and then one of the words ``up'', ``down'', or ``even''. The first string of letters will represent the coins on the left balance; the second string, the coins on the right balance. (Sally will always place the same number of coins on the right balance as on the left balance.) The word in the third position will tell whether the right side of the balance goes up, down, or remains even. "], ["For each case, the output will identify the counterfeit coin by its letter and tell whether it is heavy or light. The solution will always be uniquely determined. "], []], "link": "http://poj.org/problem?id=1013", "title": ["Counterfeit Dollar"]}
{"content": [["The Joseph's problem is notoriously known. For those who are not familiar with the original problem: from among n people, numbered 1, 2, . . ., n, standing in circle every mth is going to be executed and only the life of the last remaining person will be saved. Joseph was smart enough to choose the position of the last remaining person, thus saving his life to give us the message about the incident. For example when n = 6 and m = 5 then the people will be executed in the order 5, 4, 6, 2, 3 and 1 will be saved.", "", "Suppose that there are k good guys and k bad guys. In the circle the first k are good guys and the last k bad guys. You have to determine such minimal m that all the bad guys will be executed before the first good guy. ", ""], ["The input file consists of separate lines containing k. The last line in the input file contains 0. You can suppose that 0 "], ["The output file will consist of separate lines containing m corresponding to k in the input file. "], []], "link": "http://poj.org/problem?id=1012", "title": ["Joseph"]}
{"content": [["George took sticks of the same length and cut them randomly until all parts became at most 50 units long. Now he wants to return sticks to the original state, but he forgot how many sticks he had originally and how long they were originally. Please help him and design a program which computes the smallest possible original length of those sticks. All lengths expressed in units are integers greater than zero. "], ["The input contains blocks of 2 lines. The first line contains the number of sticks parts after cutting, there are at most 64 sticks. The second line contains the lengths of those parts separated by the space. The last line of the file contains zero."], ["The output should contains the smallest possible length of original sticks, one per line. "], []], "link": "http://poj.org/problem?id=1011", "title": ["Sticks"]}
{"content": [["Have you done any Philately lately? ", "", "You have been hired by the Ruritanian Postal Service (RPS) to design their new postage software.  The software allocates stamps to customers based on customer needs and the denominations that are currently in stock.", "", "Ruritania is filled with people who correspond with stamp collectors. As a service to these people, the RPS asks that all stamp allocations have the maximum number of different types of stamps in it.  In fact, the RPS has been known to issue several stamps of the same denomination in order to please customers (these count as different types, even though they are the same denomination).  The maximum number of different types of stamps issued at any time is twenty-five.", "", "To save money, the RPS would like to issue as few duplicate stamps as possible (given the constraint that they want to issue as many different types).  Further, the RPS won't sell more than four stamps at a time."], ["The input for your program will be pairs of positive integer sequences, consisting of two lines, alternating until end-of-file.  The first sequence are the available values of stamps, while the second sequence is a series of customer requests.  For example:", "", "1 2 3 0	; three different stamp types", "7 4 0		; two customers", "1 1 0		; a new set of stamps (two of the same type)", "6 2 3 0	; three customers", "", "Note: the comments in this example are *not* part of the data file; data files contain only integers. "], ["For each customer, you should print the "best" combination that is exactly equal to the customer's needs, with a maximum of four stamps. If no such combination exists, print "none". ", "The "best" combination is defined as the maximum number of different stamp types.  In case of a tie, the combination with the fewest total stamps is best.  If still tied, the set with the highest single-value stamp is best.  If there is still a tie, print "tie". ", "", "For the sample input file, the output should be:", "", "7 (3): 1 1 2 3 ", "4 (2): 1 3 ", "6 ---- none", "2 (2): 1 1", "3 (2): tie", "", "That is, you should print the customer request, the number of types sold and the actual stamps.  In case of no legal allocation, the line should look like it does in the example, with four hyphens after a space.  In the case of a tie, still print the number of types but do not print the allocation (again, as in the example).Don't print extra blank at the end of each line."], []], "link": "http://poj.org/problem?id=1010", "title": ["STAMPS"]}
{"content": [["IONU Satellite Imaging, Inc. records and stores very large images using run  length encoding. You are to write a program that reads a compressed image, finds the edges in the image, as described below, and outputs another compressed image of the detected edges.", "A simple edge detection algorithm sets an output pixel's value to be the maximum absolute value of the differences between it and all its surrounding pixels in the input image. Consider the input image below:", "", "The upper left pixel in the output image is the maximum of the values |15-15|,|15-100|, and |15-100|, which is 85. The pixel in the 4th row, 2nd column is computed as the maximum of |175-100|, |175-100|, |175-100|, |175-175|, |175-25|, |175-175|,|175-175|, and |175-25|, which is 150.", "Images contain 2 to 1,000,000,000 (10", ") pixels. All images are encoded using run length encoding (RLE). This is a sequence of pairs, containing pixel value (0-255) and run length (1-10", "). Input images have at most 1,000 of these pairs. Successive pairs have different pixel values. All lines in an image contain the same number of pixels."], ["Input consists of information for one or more images. Each image starts with the width, in pixels, of each image line. This is followed by the RLE pairs, one pair per line. A line with 0 0 indicates the end of the data for that image. An image width of 0 indicates there are no more images to process. The first image in the example input encodes the 5x7 input image above."], ["Output is a series of edge-detected images, in the same format as the input images, except that there may be more than 1,000 RLE pairs."], ["A brute force solution that attempts to compute an output value for every individual pixel will likely fail due to space or time constraints."], []], "link": "http://poj.org/problem?id=1009", "title": ["Edge Detection"]}
{"content": [["It is often helpful for computer users to see a visual representation of the file structure on their computers.  The "explorer" in Microsoft Windows is an example of such a system.  Before the days of graphical user interfaces, however, such visual representations were not possible.  The best that could be done was to show a static "map"of directories and files, using indentation as a guide to directory contents.  For example:", "", "This shows that the root directory contains two files and three subdirectories.  The first subdirectory contains 3 files, the second is empty and the third contains one file."], ["Write a program that reads a series of data sets representing a computer file structure.   A data set ends with a line containing a single *, and the end of valid data is denoted by a line containing a single #.  The data set contains a series of file and directory names.  (The root directory is assumed to be the starting point.) The end of a directory is denoted by a ']'  Directory names begin with a lower case 'd' and file names begin with a lower case 'f'  File names may or may not have an extension (such as fmyfile.dat or fmyfile).  File and directory names may not contain spaces. "], ["Note that the contents of any directory should list any subdirectories first, followed by files, if any.  All files should be in alphabetical order within each directory.  Note that each data set output is marked by the label "DATA SET x:" where x denotes the number of the set, beginning at 1.  Note also the blank line between the output data sets.  Each level of indentation should show a '|' followed by 5 spaces."], []], "link": "http://poj.org/problem?id=1057", "title": ["FILE MAPPING"]}
{"content": [["Square Ice is a two-dimensional arrangement of water molecules H2O, with oxygen at the vertices of a square lattice and one hydrogen atom between each pair of adjacent oxygen atoms. The hydrogen atoms must stick out on the left and right sides but are not allowed to stick out the top or bottom. One 5 x 5 example is shown below. ", "", "Note that each hydrogen atom is attached to exactly one of its neighboring oxygen atoms and each oxygen atom is attached to two of its neighboring hydrogen atoms. (Recall that one water molecule is a unit of one O linked to two H's.)", "", "It turns out we can encode a square ice pattern with what is known as an alternating sign matrix (ASM): horizontal molecules are encoded as 1, vertical molecules are encoded as -1 and all other molecules are encoded as 0. So, the above pattern would be encoded as:", "", "An ASM is a square matrix with entries 0, 1 and -1, where the sum of each row and column is 1 and the non-zero entries in each row and in each column must alternate in sign. (It turns out there is a one-to-one correspondence between ASM's and square ice patterns!)", "", "Your job is to display the square ice pattern, in the same format as the example above, for a given ASM. Use dashes (-) for horizontal attachments and vertical bars (|) for vertical attachments. The pattern should be surrounded with a border of asterisks (*), be left justified and there should be exactly one character between neighboring hydrogen atoms (H) and oxygen atoms (O): either a space, a dash or a vertical bar.", ""], ["Input consists of multiple cases. Each case consists of a positive integer m ("], ["For each case, print the case number (starting from 1), in the format shown in the Sample Output, followed by a blank line, followed by the corresponding square ice pattern in the format described above. Separate the output of different cases by a blank line."], []], "link": "http://poj.org/problem?id=1099", "title": ["Square Ice"]}
{"content": [["The Robots game is a one-player game played on a 31 x 31 board. The board is partitioned into 1 x 1 cells arranged in 31 rows and 31 columns. Each cell is indexed by (r, c) where r is the row and c is the column (starting from 1), and it may be empty, occupied by you, occupied by a robot, or occupied by debris. The object of this game is to move in such a way to destroy all the robots before the robots destroy you. ", "Initially, you occupy the cell at (15, 15), and there are R robots (1 When the robots move, each robot walks to the adjacent cell (even if it is not empty) in the eight compass directions such that the destination cell is closest to your current position (i.e. after your last move). The distance between two cells (r1, c1) and (r2, c2) is defined to be | r1 - r2 | + | c1 - c2 |. All robots walk at the same time during a move. If two or more robots walk to the same cell, or if a robot walks to a cell containing debris, all of these robots are destroyed. Destroyed robots become debris.", "You lose the game if any robot walks to your current position, even if multiple robots do so and destroy each other. You win the game if all robots are destroyed and none has moved to your current position.", "In order to stay in the game as long as possible, you will only consider moves that do not lead to an immediate loss (a loss before your next move). A plausible strategy is to always walk to a cell (or remain stationary) such that the number of robots remaining after your move and the robots' move (i.e. just before your next move) is minimized. In case of a tie, choose the move that maximizes the minimum distance to the remaining robots just before your next move. If there are still ties, choose the move that also minimizes the row index of the destination cell, and finally, break remaining ties by also minimizing the column index.", "If it is not possible to make a move by walking or by remaining stationary without leading to an immediate loss, you should teleport to the first unused legal destination chosen from a list of locations given to you, as long as it does not lead to an immediate loss. When you search for a teleport site, you should always start the search at the beginning of the list. If no such teleport destination is available, you should remain stationary, leading to an immediate loss.", "In this problem, you will implement this strategy and see how well it works."], ["The input consists of a number of instances. The first line of each instance contains the integers R and T separated by a space. This is followed by R lines containing two integers separated by a space, indicating the row and column of the initial positions of the R robots. You may assume that each robot initially occupies a cell which is not (15, 15) and the locations of the robots are distinct. The next T lines give the list of teleport destinations available. Each line is given by the row and column of the destination cell, separated by a space. The input is terminated by a case with R = T = 0."], ["For each case, print the case number (starting from 1), in the format shown in the Sample Output, on its own line. For each teleport taken, print one line of the form:", "", "Move m: teleport to (r, c)", "", "where m is the number of moves you have made (including this one), and (r, c) is the destination of the teleport. This is followed by three lines containing the result of the game. If you win the game, print", "", "Won game after making m moves.", "Final position (r,c)", "Number of cells with debris: d", "", "Where m is the number of moves you have made when you won the game, (r,c) is your final position, and d is the number of cells with debris (use the word "moves" even if m = 1). If you lose the game, print", "", "Lost game after making m moves.", "Final position: (r,c)", "Number of cells with debris: d", "Number of robots remaining: n", "", "where m is the number of moves you have made when you lost the game, (r.c) is the location at which you are destroyed, d is the number of cells with debris, and n is the number of robots remaining when you lost the game (use the word "moves" even if m = 1)."], []], "link": "http://poj.org/problem?id=1098", "title": ["Robots"]}
{"content": [["The Hines Sign company has been contracted to supply roadside signs for the state highway system. The head of the company has put his son Myles Hines in charge of one particular class of signs, those which indicate the number of miles to carious towns. Myles is given a layout of the highway system and a set of locations where the signs should go: he is in charge of determining the mileage to nearby cities. To select which cities should be listed on any sign, he uses the following strategy: City X is put on the sign if the sign is on a road such that the shortest path from the intersection immediately preceding the sign to X uses the road. You may assume that there is only one shortest path between each pair of intersections. "], ["Input consists of a single problem instance consisting of a description of the highway system, followed by a set of sign locations. The highway system is defined as a set of intersections (some of which are also city locations) and a set of roads connecting the intersections. The first line of a problem instance contains three positive integers n m k: n specifies the number of intersections (numbered 0, 1, 2, ..., n-1), m indicates the number of roads between connections, and k indicated the number of intersections which are also cities. Following this are m lines of the form i1 i2 d, which specifies a two-way road between intersections i1 and i2 of distance d. The next k lines are of the form i name, which specifies that intersection i is a city called name. After this is a line with a single positive integer s indicating the number of signs to place on the highway. The remaining s lines are of the form i1 i2 d indicating that a sign is to be placed on the road going from i1 to i2 a distance d from i1 (d will always be non-zero and less than the distance from i1 to i2). For all problem instances, the length of name will be "], ["Each sign should be output as follows:", "", "name1 d1", "name2 d2", "...", "", "where each namei should be left justified in a field of width 20, and each distance di is rounded to the nearest mile. (Round .50 up. For example, 7.50 should be rounded to 8.) Each name-distance pair should be sorted by the rounded distance; pairs with the same rounded distance should be printed in alphabetical order. Signs should be output in the order in which they were listed in the input, and you should separate each sign output with a blank line. You may assume that every sign will have at least one city listed on it."], []], "link": "http://poj.org/problem?id=1097", "title": ["Roads Scholar"]}
{"content": [["Roger Wilco is in charge of the design of a low orbiting space station for the planet Mars. To simplify construction, the station is made up of a series of Airtight Cubical Modules (ACM's), which are connected together once in space. One problem that concerns Roger is that of (potentially) lethal bacteria that may reside in the upper atmosphere of Mars. Since the station will occasionally fly through the upper atmosphere, it is imperative that extra shielding be used on all faces of the ACM's touch, either edge to edge or face to face, that joint is sealed so no bacteria can sneak through. Any face of an ACM shared by another ACM will not need shielding, of course, nor will a face which cannot be reached from the outside. Roger could just put extra shielding on all of the faces of every ACM, but the cost would be prohibitive. Therefore, he wants to know the exact number of ACM faces which need the extra shielding. "], ["Input consists of multiple problem instances. Each instance consists of a specification of a space station. We assume that each space station can fit into an n x m x k grid (1 "], ["For each problem instance, you should output one line of the form", "", "The number of faces needing shielding is s."], []], "link": "http://poj.org/problem?id=1096", "title": ["Space Station Shielding"]}
{"content": [["We can number binary trees using the following scheme: ", "The empty tree is numbered 0.", "The single-node tree is numbered 1.", "All binary trees having m nodes have numbers less than all those having m+1 nodes.", "Any binary tree having m nodes with left and right subtrees L and R is numbered n such that all trees having m nodes numbered > n have either Left subtrees numbered higher than L, or A left subtree = L and a right subtree numbered higher than R.", "", "The first 10 binary trees and tree number 20 in this sequence are shown below:", "", "Your job for this problem is to output a binary tree when given its order number."], ["Input consists of multiple problem instances. Each instance consists of a single integer n, where 1 "], ["For each problem instance, you should output one line containing the tree corresponding to the order number for that instance. To print out the tree, use the following scheme:", "", "A tree with no children should be output as X.", "A tree with left and right subtrees L and R should be output as (L')X(R'), where L' and R' are the representations of L and R.", "  If L is empty, just output X(R').", "  If R is empty, just output (L')X."], []], "link": "http://poj.org/problem?id=1095", "title": ["Trees Made to Order"]}
{"content": [["An ascending sorted sequence of distinct values is one in which some form of a less-than operator is used to order the elements from smallest to largest. For example, the sorted sequence A, B, C, D implies that A "], ["Input consists of multiple problem instances. Each instance starts with a line containing two positive integers n and m. the first value indicated the number of objects to sort, where 2 "], ["For each problem instance, output consists of one line. This line should be one of the following three:", "", "Sorted sequence determined after xxx relations: yyy...y.", "Sorted sequence cannot be determined.", "Inconsistency found after xxx relations.", "", "where xxx is the number of relations processed at the time either a sorted sequence is determined or an inconsistency is found, whichever comes first, and yyy...y is the sorted, ascending sequence."], []], "link": "http://poj.org/problem?id=1094", "title": ["Sorting It All Out"]}
{"content": [["Writings e-mails is fun, but, unfortunately, they do not look very nice, mainly because not all lines have the same lengths. In this problem, your task is to write an e-mail formatting program which reformats a paragraph of an e-mail (e.g. by inserting spaces) so that, afterwards, all lines have the same length (even the last one of each paragraph). ", "The easiest way to perform this task would be to insert more spaces between the words in lines which are too short. But this is not the best way. Consider the following example: ", "Let us assume that we want to get lines as long as the row of stars. Then, by simply inserting spaces, we would get ", "But this looks rather odd because of the big gap in the second line. By moving the word ``are'' from the first to the second line, we get a better result: ", "Of course, this has to be formalized. To do this, we assign a badness to each gap between words. The badness assigned to a gap of n spaces is (n - 1)^2. The goal of the program is to minimize the sum of all badnesses. For example, the badness of the first example is 1 + 7^2 = 50 whereas the badness of the second one is only 1 + 1 + 1 + 4 + 1 + 4 = 12. ", "", "In the output, every line has to start and to end with a word. (I.e. there cannot be a gap at the beginning or the end of a line.) The only exception to this is the following: ", "", "If a line contains only one word this word shall be put at the beginning of the line, and a badness of 500 is assigned to this line if it is shorter than it should be. (Of course, in this case, the length of the line is simply the length of the word.) "], ["The input contains a text consisting of several paragraphs. Each paragraph is preceded by a line containing a single integer n, the desired width of the paragraph (1 ", "Paragraphs consist of one or more lines which contain one or more words each. Words consist of characters with ASCII codes between 33 and 126, inclusive, and are separated by spaces (possibly more than one). No word will be longer than the desired width of the paragraph. The total length of all words of one paragraph will not be more than 10000 characters. ", "", "Each paragraph is terminated by exactly one blank line. There is no limit on the number of paragraphs in the input file. ", "", "The input file will be terminated by a paragraph description starting with n=0. This paragraph should not be processed. ", ""], ["Output the same text, formatted in the way described above (processing each paragraph separately). ", "", "If there are several ways to format a paragraph with the same badness, use the following algorithm to choose which one to output: Let A and B be two solutions. Find the first gap which has not the same length in A and B. Do not output the solution in which this gap is bigger. ", "", "Output a blank line after each paragraph. "], []], "link": "http://poj.org/problem?id=1093", "title": ["Formatting Text"]}
{"content": [["We have a map for farming land in a country. The whole farming land of the  country is divided into a set of disjoint farming regions. Each farmer owns  only one farming region in this country. There is a boundary fence between two neighboring farming regions. The farmland map for this country can be represented in a plane graph. The following Figure-1 shows one example.", "", "", "There are two types of edges, boundary edge and non-boundary edge. All edges of G(V,E) except (v8, v6) and (v11, v10) are boundary edges which are between two neighboring farming regions. The "proper farming region" in a Farmland graph is a closed region bounded by a simple cycle and it should not contain any vertices or edges inside. In this figure, the polygon is a proper farming region, and the region is not a proper farming region since its boundary cycle is not simple. ", "We assume that the farmland graph G(V,E) is a simple connected graph, which  does not allow self-loops (Figure-2 (a)) and parallel edges (Figure-2 (b)).Also in Farmland graph G(V,E), we do not consider the outer face of G(V,E).You can see that there are 2 proper farming regions in G(V,E) shown in Figure-1,namely  and , since there are no vertices or edges inside. But the polygon is not a proper farming region since vertex v3, v4, and v5 are located in that region. Similarly, the region "], ["The input consists of M test cases. The first line of the input contains a positive integer M, the number of test cases you are to solve. After the first line,input data for M cases follow. The first line of each test case contains a positive integer N (>=3), the number of vertices. Each of the following N lines is of the form:   ", "", ""i" is the vertex number, xi and yi are the coordinate (xi, yi) of the vertex i, and di is the degree of the vertex i. The following { ai } are the adjacent vertices of the vertex i. The last line gives k, the size of proper regions that you have to count. ", "Note that M, the number of cases in input is less than 10. N, the number of vertices of a given farmland graph is less than 200. All vertices are located on grid points of the 1000 x 1000 lattice grid. "], ["The output must contain M non-negative integers. Each line contains the answer n to the corresponding case of the input. "], []], "link": "http://poj.org/problem?id=1092", "title": ["Farmland"]}
{"content": [["Z城市居住着很多只跳蚤。在Z城市周六生活频道有一个娱乐节目。一只跳蚤将被请上一个高空钢丝的正中央。钢丝很长，可以看作是无限长。节目主持人会给该跳蚤发一张卡片。卡片上写有N+1个自然数。其中最后一个是M，而前N个数都不超过M，卡片上允许有相同的数字。跳蚤每次可以从卡片上任意选择一个自然数S，然后向左，或向右跳S个单位长度。而他最终的任务是跳到距离他左边一个单位长度的地方，并捡起位于那里的礼物。", "比如当N=2，M=18时，持有卡片(10, 15, 18)的跳蚤，就可以完成任务：他可以先向左跳10个单位长度，然后再连向左跳3次，每次15个单位长度，最后再向右连跳3次，每次18个单位长度。而持有卡片(12, 15, 18)的跳蚤，则怎么也不可能跳到距他左边一个单位长度的地方。", "当确定N和M后，显然一共有M^N张不同的卡片。现在的问题是，在这所有的卡片中，有多少张可以完成任务。"], ["两个整数N和M(N "], ["可以完成任务的卡片数。"], ["这12张卡片分别是：", "(1, 1, 4), (1, 2, 4), (1, 3, 4), (1, 4, 4), (2, 1, 4), (2, 3, 4), ", "(3, 1, 4), (3, 2, 4), (3, 3, 4), (3, 4, 4), (4, 1, 4), (4, 3, 4)"], []], "link": "http://poj.org/problem?id=1091", "title": ["跳蚤"]}
{"content": [["Byteland had not always been a democratic country. There were also black pages in its book of history. One lovely day general Bytel − commander of the junta which had power over Byteland −− decided to finish the long−lasting time of war and released imprisoned activists of the opposition. However, he had no intention to let the leader Bytesar free. He decided to chain him to the wall with the bytish chain. It consists of joined rings and the bar fixed to the wall. Although the rings are not joined with the bar, it is hard to take them off.", "'General, why have you chained me to the prison walls and did not let rejoice at freedom!' cried Bytesar.", "'But Bytesar, you are not chained at all, and I am certain you are able to take off the rings from the bar by yourself.' perfidiously answered general Bytel, and he added 'But deal with that before a clock strikes the cyber hour and do not make a noise at night, otherwise I will be forced to call Civil Cyber Police.'", "Help Bytesar! Number the following rings of the chain with integers 1,2,...,n. We may put on and take off these rings according to the following rules:", ".only one ring can be put on or taken off from the bar in one move, ", ".the ring number 1 can be always put on or taken off from the bar, ", ".if the rings with the numbers 1,...,k−1 (for 1Write a program which:", ".reads from std input the description of the bytish chain, ", ".computes minimal number of moves necessary to take off all rings of the bytish chain from the bar,", ".writes the result to std output. "], ["In the first line of the input there is written one integer n, 1 "], ["The output should contain exactly one integer equal to the minimal number of moves necessary to take off all the rings of the bytish chain from the bar."], []], "link": "http://poj.org/problem?id=1090", "title": ["Chain"]}
{"content": [["Michael喜欢滑雪百这并不奇怪， 因为滑雪的确很刺激。可是为了获得速度，滑的区域必须向下倾斜，而且当你滑到坡底，你不得不再次走上坡或者等待升降机来载你。Michael想知道载一个区域中最长底滑坡。区域由一个二维数组给出。数组的每个数字代表点的高度。下面是一个例子", "", "一个人可以从某个点滑向上下左右相邻四个点之一，当且仅当高度减小。在上面的例子中，一条可滑行的滑坡为24-17-16-1。当然25-24-23-...-3-2-1更长。事实上，这是最长的一条。"], ["输入的第一行表示区域的行数R和列数C(1 "], ["输出最长区域的长度。"], []], "link": "http://poj.org/problem?id=1088", "title": ["滑雪"]}
{"content": [["There is given the series of n closed intervals [ai; bi], where i=1,2,...,n. The sum of those intervals may be represented as a sum of closed pairwise non−intersecting intervals. The task is to find such representation with the minimal number of intervals. The intervals of this representation should be written in the output file in acceding order. We say that the intervals [a; b] and [c; d] are in ascending order if, and only if a Task", "Write a program which:", "reads from the std input the description of the series of intervals,", "computes pairwise non−intersecting intervals satisfying the conditions given above, ", "writes the computed intervals in ascending order into std output"], ["In the first line of input there is one integer n, 3 "], ["The output should contain descriptions of all computed pairwise non−intersecting intervals. In each line should be written a description of one interval. It should be composed of two integers, separated by a single space, the beginning and the end of the interval respectively. The intervals should be written into the output in ascending order."], []], "link": "http://poj.org/problem?id=1089", "title": ["Intervals"]}
{"content": [["You are in charge of setting up the press room for the inaugural meeting of the United Nations Internet eXecutive (UNIX), which has an international mandate to make the free flow of information and ideas on the Internet as cumbersome and bureaucratic as possible. ", "Since the room was designed to accommodate reporters and journalists from around the world, it is equipped with electrical receptacles to suit the different shapes of plugs and voltages used by appliances in all of the countries that existed when the room was built. Unfortunately, the room was built many years ago when reporters used very few electric and electronic devices and is equipped with only one receptacle of each type. These days, like everyone else, reporters require many such devices to do their jobs: laptops, cell phones, tape recorders, pagers, coffee pots, microwave ovens, blow dryers, curling ", "irons, tooth brushes, etc. Naturally, many of these devices can operate on batteries, but since the meeting is likely to be long and tedious, you want to be able to plug in as many as you can. ", "Before the meeting begins, you gather up all the devices that the reporters would like to use, and attempt to set them up. You notice that some of the devices use plugs for which there is no receptacle. You wonder if these devices are from countries that didn't exist when the room was built. For some receptacles, there are several devices that use the corresponding plug. For other receptacles, there are no devices that use the corresponding plug. ", "In order to try to solve the problem you visit a nearby parts supply store. The store sells adapters that allow one type of plug to be used in a different type of outlet. Moreover, adapters are allowed to be plugged into other adapters. The store does not have adapters for all possible combinations of plugs and receptacles, but there is essentially an unlimited supply of the ones they do have. "], ["The input will consist of one case. The first line contains a single positive integer n (1 characters. No two devices will have exactly the same name. The plug type is separated from the device name by a space. The next line contains a single positive integer k (1 "], ["A line containing a single non-negative integer indicating the smallest number of devices that cannot be plugged in. "], []], "link": "http://poj.org/problem?id=1087", "title": ["A Plug for UNIX"]}
{"content": [["Quadtrees are commonly used for encoding digital images in a compact form. Given an n * n image (where n is a power of 2, 1 1. If every pixel in the region associated with the current node has an intensity value of p, then the node is made a leaf and it is assigned an associated value of p. ", "2. Otherwise, four nodes are added as children of the current node. The region is divided into four equal (square) quadrants and each quadrant is assigned to one child node. The algorithm recurses on each of the children nodes. ", "When the process terminates, we obtain a quadtree in which every internal node has four children. Every leaf node has an associated value representing the intensity of the region corresponding to the leaf node. An example of an image and its quadtree encoding is shown below. ", "", "We have assumed that the four children represent, from left to right, the upper left, upper right, lower left, and lower right quadrants, respectively. ", "To easily identify a node in a quadtree, we assign a number to each node by the following rules: ", "1. The root is numbered 0. ", "2. If the number of a node is k, then its children, from left to right, are numbered 4k+1; 4k+2; 4k+3; 4k +4. ", "Images encoded as quadtrees can be encrypted by a secret password as follows: whenever a subdivision is performed, the four branches are reordered. The reordering may be different at each node, but it is completely determined by the password and the node number. ", "Unfortunately, some people use the "save password" feature in the encoding program and use the same password for multiple images. By observing the encoding of a well-chosen test image, any image encoded with the same password can be decoded without the password. In this test image, each pixel has a distinct intensity from 0 to n^2-1 arranged from left-to-right, top-to-bottom in increasing order. An example for n = 16 is given below: ", "", "You managed to gain access to the encoding program and used it to encode the test image. Given the quadtree encoding of the test image, write a program to decode any other image encoded with the same password. "], ["You will be given a number of cases in the input. The first line of input consists of a positive integer indicating the number of test cases to follow. Each test case starts with a line containing n, followed by the quadtree encoding of the test image and the quadtree encoding of the secret image to be decoded. Each quadtree encoding starts with a line containing a positive integer m indicating the number of leaf nodes in the tree. The next m lines are of the form: ", "k intensity ", "which specifies that the node numbered k is a leaf node with the specified intensity as the associated leaf value. Nodes not specified are either internal nodes or absent in the quadtree. You may assume that all intensities are between 0 and 255, inclusively. You may also assume that each quadtree encoding is a valid output obtained from the encoding lgorithm described above. "], ["For each test case, print the case number followed by a blank line. Then, print the intensities of the pixels of the decoded image one row at a time. Print each intensity right-justified in a field of width 4, with no extra spaces between fields. Insert a blank line between cases. "], []], "link": "http://poj.org/problem?id=1086", "title": ["Unscrambling Images"]}
{"content": [["The  left  figure below  shows a complete  3*3  grid made with  2*(3*4) (=24)  matchsticks. The  lengths of all matchsticks are one. You can find many squares of different sizes in the grid. The size of a square is the length of its side. In the grid shown in the left figure, there are 9 squares of size one, 4 squares of size two, and 1 square of size three.  ", " ", "Each matchstick of the complete grid is identified with a unique number which is assigned from left to right and from top to bottom as shown in the left figure. If you take some matchsticks out from the complete grid, then  some  squares  in  the  grid will  be  destroyed, which  results  in  an  incomplete  3*3  grid. The  right  figure illustrates  an  incomplete  3*3  grid  after  removing  three  matchsticks  numbered  with  12,  17  and  23.  This removal destroys 5 squares of size one, 3 squares of size two, and 1 square of size three. Consequently, the incomplete grid does not have squares of size three, but still has 4 squares of size one and 1 square of size two.", "", "As  input,  you  are  given  a  (complete  or  incomplete)  n*n  grid  made  with  no  more  than  2n(n+1) matchsticks for a natural number  5 out to destroy all the squares existing in the input  n*n  grid.  "], ["The input consists of   T test cases. The number of  test cases  (T )  is given  in  the  first  line of  the  input  file. ", "Each  test  case  consists  of  two  lines: The  first  line  contains  a  natural  number  n ,  not  greater  than  5, which implies  you  are  given  a  (complete  or  incomplete)  n*n  grid  as  input,  and  the  second  line  begins  with  a nonnegative integer  k , the number of matchsticks that are missing from the complete  n*n  grid, followed by ", "k numbers specifying the matchsticks. Note that if  k  is equal to zero, then the input grid is a complete  n*n grid; otherwise, the input grid is an incomplete  n*n  grid such that the specified  k  matchsticks are missing from the complete  n*n  grid. "], ["Print  exactly one  line  for each  test  case. The  line  should  contain  the minimum number of matchsticks  that have to be taken out to destroy all the squares in the input grid.  "], []], "link": "http://poj.org/problem?id=1084", "title": ["Square Destroyer"]}
{"content": [["Triangle War is a two-player game played on the following triangular grid: ", "", "Two players, A and B, take turns filling in any dotted line connecting two dots, with A starting first. Once a line is filled, it cannot be filled again. If the line filled by a player completes one or more triangles, she owns the completed triangles and she is awarded another turn (i.e. the opponent skips a turn). The game ends after all dotted lines are filled in, and the player with the most triangles wins the game. The difference in the number of triangles owned by the two players is not important. ", "", "For example, if A fills in the line between 2 and 5 in the partial game on the left below: ", "", "Then, she owns the triangle labelled A and takes another turn to fill in the line between 3 and 5. B can now own 3 triangles (if he wishes) by filling in the line between 2 and 3, then the one between 5 and 6, and finally the one between 6 and 9. B would then make one more move before it is A's turn again. ", "In this problem, you are given a number of moves that have already been made. From the partial game, you should determine which player will win assuming that each player plays a perfect game from that point on. That is, assume that each player always chooses the play that leads to the best possible outcome for himself/herself. "], ["You will be given a number of games in the input. The first line of input is a positive integer indicating the number of games to follow. Each game starts with an integer 6 "], ["For each game, print the game number and the result on one line as shown below. If A wins, print the sentence "A wins." If B wins, print "B wins." "], []], "link": "http://poj.org/problem?id=1085", "title": ["Triangle War"]}
{"content": [["The famous ACM (Advanced Computer Maker) Company has rented a floor of a building whose shape is in the following figure. ", "", "The  floor  has  200  rooms  each  on  the  north  side  and  south  side  along  the  corridor. Recently  the Company made a plan  to  reform  its  system. The  reform  includes moving a  lot of  tables between  rooms. Because  the corridor is narrow and all the tables are big, only one table can pass through the corridor. Some plan is needed to make  the moving efficient. The manager  figured out  the  following plan: Moving a  table  from a  room  to another  room can be done within 10 minutes. When moving a  table  from  room  i  to  room  j,  the part of  the corridor  between  the  front  of  room  i  and  the  front  of  room  j  is  used.  So,  during  each  10 minutes,  several moving between two rooms not sharing the same part of the corridor will be done simultaneously. To make it clear the manager illustrated the possible cases and impossible cases of simultaneous moving.  ", "", "For each room, at most one table will be either moved in or moved out. Now, the manager seeks out a method to minimize the time to move all the tables.  Your job is to write a program to solve the manager's problem. "], ["The input consists of T  test cases. The number of test cases  ) (T  is given in the first line of the input file. Each test case begins with a line containing an integer  N , 1 Each of the following  N  lines contains two positive integers s and t, representing that a table is to move from room number s to room number t each room number appears at most once in the N lines). From the  3 + N -rd ", "line, the remaining test cases are listed in the same manner as above. "], ["The output should contain the minimum time in minutes to complete the moving, one per line. "], []], "link": "http://poj.org/problem?id=1083", "title": ["Moving Tables"]}
{"content": [["Adam and Eve enter this year's ACM International Collegiate Programming Contest. Last night, they played the Calendar Game,  in celebration of  this contest. This game consists of  the dates  from  January 1, 1900  to November 4, 2001, the contest day. The game starts by randomly choosing a date from this interval. Then, the players, Adam and Eve, make moves in their turn with Adam moving first: Adam, Eve, Adam, Eve, etc. There is only one rule for moves and it is simple: from a current date, a player in his/her turn can move either to the next calendar date or the same day of the next month. When the next month does not have the same day, the player moves only to the next calendar date. For example, from December 19, 1924, you can move either to December  20,  1924,  the  next  calendar  date,  or  January  19,  1925,  the  same  day  of  the  next month.  From January 31 2001, however, you can move only to February 1, 2001, because February 31, 2001 is invalid.  ", " ", "A player wins the game when he/she exactly reaches the date of November 4, 2001. If a player moves to a date after November 4, 2001, he/she looses the game. ", " ", "Write a program that decides whether, given an initial date, Adam, the first mover, has a winning strategy. ", " ", "For this game, you need to identify leap years, where February has 29 days. In the Gregorian calendar, leap years occur in years exactly divisible by four. So, 1993, 1994, and 1995 are not leap years, while 1992 and 1996 are leap years. Additionally, the years ending with 00 are leap years only if they are divisible by 400. So, 1700, 1800, 1900, 2100, and 2200 are not leap years, while 1600, 2000, and 2400 are leap years.  "], ["The input consists of T test cases. The number of test cases (T ) is given in the first line of the input file. Each test case is written in a line and corresponds to an initial date. The three integers in a line, YYYY MM DD, represent  the  date  of  the DD-th  day  of  MM-th month  in  the  year  of  YYYY. Remember  that  initial  dates  are randomly chosen from the interval between January 1, 1900 and November 4, 2001. "], ["Print exactly one line for each test case. The line should contain the answer "YES" or "NO" to the question of whether Adam has a winning strategy against Eve. Since we have T  test cases, your program should output totally T  lines of "YES" or "NO". "], []], "link": "http://poj.org/problem?id=1082", "title": ["Calendar Game"]}
{"content": [["On the first day of first grade at Friendly Elementrary School, it is customary for each student to spend one minute talking to every classmate that he or she does not already know.  When student Bob sees an unfamilar face, he says ``You who?''  A typical response is ``Me Charlie, you who?''  Then Bob says, ``Me Bob!'' and they talk for a minute.  It's very cute.  Then, after a minute, they part and each looks for another stranger to greet. This takes time.  In class of twenty-nine or thirty mutual strangers, it takes 29 minutes; time that, according to teachers, could be better spent learning the alphabet.  Of course, it is rare to have a first grade class where nobody knows anyone else; there are neighbors and playmates who already know each other, so they don't have to go through the get-to-know-you minutes with each other. ", "The two first grade teachers have requested that, to save time, students be allocated to their two classes so that the difference in the sizes of the classes is at most one, and the time it takes to complete these introductions is as small as possible.  There are no more than 60 students in the incoming first grade class. ", "", "How can the assignment of students to classes be made?  Your job is to write the software that answers the question. ", ""], ["The school records include information about these student friendships, represented as lists of numbers.  If there are 29 students, then they are represented by the numbers 1 to 29.  The record for a single student includes, first, his/her student identification number (1 to 29, in this example), then the number of his/her acquaintances, then a list of them in no particular order. So, for example, this record ", "17 4 5 2 14 22 ", "", "indicates that student 17 knows 4 students: 5, 2, and so on.  The records for all the students in the incoming class are represented as the list of numbers that results from concatenating all the student records together.  Spaces and line breaks are irrelevent in this format.  Thus, this ", "", "1 1 2 2 1 1 ", "", "is a whole database, indicating that there are only two students in the incoming class, and they know each other; and this ", "", "1 2 3 4 ", "2 2 3 4 ", "3 2 1 2 ", "4 2 1 2 ", "", "indicates that 1 doesn't know 2, and 3 doesn't know 4, but all other pairs know each other. ", "", "The database has been checked for consistency, so that if A knows B, then B knows A."], ["Your output should begin with a number that tells how long it will take to complete the introductions in the best possible legal class assignment.  For the simple two student problem above, the only legal answer is ", "", "0"], ["To make this problem more tractable, the following changes are being made.  There will be exactly two classes.  There will be no more that 30 students.  The students will be divided as evenly as possible between the classes.  The loneliness of a student is the number of students in his class whom he does not know.  You are to arrange the classes to minimize the loneliness of the loneliest student. for the sample data ,you can arrange 1 and 3 to the first class,and 2 and 4 to the second class,then they need no time to know each other."], []], "link": "http://poj.org/problem?id=1081", "title": ["You Who?"]}
{"content": [["If you ever see a televised report on stock market activity, you'll hear the anchorperson say something like ``Gainers outnumbered losers 14 to 9,'' which means that for every 14 stocks that increased in value that day, approximately 9 other stocks declined in value. Often, as you hear that, you'll see on the screen something like this: ", "Gainers 1498 ", "Losers   902 ", "", "As a person with a head for numbers, you'll notice that the anchorperson could have said ``Gainers outnumbered losers 5 to 3'', which is a more accurate approximation to what really happened.  After all, the exact ratio of winners to losers is (to the nearest millionth) 1.660754, and he reported a ratio of 14 to 9, which is 1.555555, for an error of 0.105199; he could have said ``5 to 3'', and introduced an error of only 1.666667-1.660754=0.005913.  The estimate ``5 to 3'' is not as accurate as ``1498 to 902'' of course; evidently, another goal is to use small integers to express the ratio. So, why did the anchorperson say ``14 to 9?''  Because his algorithm is to lop off the last two digits of each number and use those as the approximate ratio. ", "", "What the anchorman needs is a list of rational approximations of increasing accuracy, so that he can pick one to read on the air. Specifically, he needs a sequence {a_1, a_2, ..., a_n} where a_1 is a rational number with denominator 1 that most exactly matches the true ratio of winners to losers (rounding up in case of ties), a_{i+1} is the rational number with least denominator that provides a more accurate approximation than a_i, and a_n is the exact ratio, expressed with the least possible denominator.  Given this sequence, the anchorperson can decide which ratio gives the best tradeoff between accuracy and simplicity. ", "", "For example, if 5 stocks rose in price and 4 fell, the best approximation with denominator 1 is 1/1; that is, for every stock that fell, about one rose.  This answer differs from the exact answer by 0.25 (1.0 vs 1.25).  The best approximations with two in the denominator are 2/2 and 3/2, but neither is an improvement on the ratio 1/1, so neither would be considered.  The best approximation with three in the denominator 4/3, is more accurate than any seen so far, so it is one that should be reported.  Finally, of course, 5/4 is exactly the ratio, and so it is the last number reported in the sequence. ", "", "Can you automate this process and help the anchorpeople? "], ["input contains several pairs of positive integers. Each pair is on a line by itself, beginning in the first column and with a space between the two numbers.  The first number of a pair is the number of gaining stocks for the day, and the second number is the number of losing stocks for the day.   The total number of stocks never exceeds 5000. "], ["For each input pair, the standard output should contain a series of approximations to the ratio of gainers to losers.  The first approximation has '1' as denominator, and the last is exactly the ratio of gainers to losers, expressed as a fraction with least possible denominator.  The approximations in between are increasingly accurate and have increasing denominators, as described above. ", "The approximations for a pair are printed one to a line, beginning in column one, with the numerator and denominator of an approximation separated by a slash (``/'').  A blank line separates one sequence of approximations from another. ", ""], []], "link": "http://poj.org/problem?id=1079", "title": ["Ratio"]}
{"content": [["The game of gizilch has very simple rules.  First 100 grapes are labeled, in nontoxic ink, with the numbers 1 to 100.  Then, with a cry of ``GIZILCH!'', the referee fires the grapes up into the air with a giant gizilcher.  The two players, who each start with a score of  ``1'', race to eat the falling (or, shortly thereafter, fallen) grapes and, at the same time, multiply their scores by the numbers written on the grapes they eat.  After a minute, the hungry squirrels are let loose to finish the remaining grapes, and each contestant reports his score, the product of the numbers on the grapes he's eaten.  The unofficial winner is the player who announces the highest score. ", "Inevitably, though, disputes arise, and so the official winner is not determined until the disputes are resolved.  The player who claims the lower score is entitled to challenge his opponent's score.  The player with the lower score is presumed to have told the truth, because if he were to lie about his score, he would surely come up with a bigger better lie.  The challenge is upheld if the player with the higher score has a score that cannot be achieved with grapes not eaten by the challenging player.  So, if the challenge is successful, the player claiming the lower score wins. ", "", "So, for example, if one player claims 343 points and the other claims 49, then clearly the first player is lying; the only way to score 343 is by eating grapes labeled 7 and 49, and the only way to score 49 is by eating a grape labeled 49.  Since each of two scores requires eating the grape labeled 49, the one claiming 343 points is presumed to be lying. ", "", "On the other hand, if one player claims 162 points and the other claims 81, it is possible for both to be telling the truth (e.g. one eats grapes 2, 3 and 27, while the other eats grape 81), so the challenge would not be upheld. ", "", "Unfortunately, anyone who is willing to referee a game of gizilch is likely to have himself consumed so many grapes (in a liquid form) that he or she could not reasonably be expected to perform the intricate calculations that refereeing requires.  Hence the need for you, sober programmer, to provide a software solution. "], ["Pairs of unequal, positive numbers, with each pair on a single line, that are claimed scores from a game of gizilch. "], ["Numbers, one to a line, that are the winning scores, assuming that the player with the lower score always challenges the outcome. "], ["A clarification was made at the beginning of the contest to resolve some ambiguity in the problem description noticed a couple of days before the contest. The rules for deciding the winner of a game of gizilch are, first, if both players might be telling the truth, the larger score wins.  Second, if the player with the lower score cannot be telling the truth, the player with the higher score wins.  Finally, if neither of the previous two conditions holds, the lower score wins.. "], []], "link": "http://poj.org/problem?id=1078", "title": ["Gizilch"]}
{"content": [["It is well known that a human gene can be considered as a sequence, consisting of four nucleotides, which are simply denoted by four letters, A, C, G, and T. Biologists have been interested in identifying human genes and  determining  their  functions,  because  these  can  be  used  to  diagnose  human  diseases  and  to  design  new drugs for them. ", " ", "A human gene can be  identified  through a  series of  time-consuming biological experiments, often with  the help of computer programs. Once a sequence of a gene is obtained, the next job is to determine its function. ", "One of the methods for biologists to use in determining the function of a new gene sequence that they have just identified is to search a database with the new gene as a query. The database to be searched stores many gene sequences and their functions – many researchers have been submitting their genes and functions to the database and the database is freely accessible through the Internet. ", " ", "A database  search will  return a  list of gene  sequences  from  the database  that are  similar to  the query gene. ", "Biologists  assume  that  sequence  similarity  often  implies  functional  similarity.  So,  the  function  of  the  new gene might be one of the functions that the genes from the list have. To exactly determine which one is the right one another series of biological experiments will be needed. ", " ", "Your job is to make a program that compares two genes and determines their similarity as explained below. Your program may be used as a part of the database search if you can provide an efficient one.  ", "Given two genes AGTGATG and GTTAG, how similar are they? One of the methods to measure the similarity ", "of two genes is called alignment. In an alignment, spaces are inserted, if necessary, in appropriate positions of ", "the genes to make them equally long and score the resulting genes according to a scoring matrix.  ", " ", "For example, one space is inserted into AGTGATG to result in AGTGAT-G, and three spaces are inserted into GTTAG  to  result  in –GT--TAG. A  space  is denoted by  a minus  sign  (-). The  two genes are now of  equal ", "length. These two strings are aligned:  ", " ", "AGTGAT-G ", "-GT--TAG  ", " ", "In this alignment, there are four matches, namely, G in the second position, T in the third, T in the sixth,  and G in the eighth. Each pair of aligned characters is assigned a score according to the following scoring matrix. ", "", "  denotes  that  a  space-space match  is  not  allowed. The  score  of  the  alignment  above  is  (-3)+5+5+(-2)+(-3)+5+(-3)+5=9. ", " ", "Of course, many other alignments are possible. One is shown below (a different number of spaces are inserted into different positions): ", " ", "AGTGATG ", "-GTTA-G ", " ", "This alignment gives a score of  (-3)+5+5+(-2)+5+(-1) +5=14. So, this one is better than the previous one. As a matter of fact, this one is optimal since no other alignment can have a higher score. So, it is said that the ", "similarity of the two genes is 14. "], ["The input consists of T  test cases. The number of test cases  ) (T  is given in the first line of the input file. Each test case consists of two lines: each line contains an integer, the length of a gene, followed by a gene sequence. The length of each gene sequence is at least one and does not exceed 100. "], ["The output should print the similarity of each test case, one per line. "], []], "link": "http://poj.org/problem?id=1080", "title": ["Human Gene Functions"]}
{"content": [["The 15-puzzle has been around for over 100 years; even if you don't know it by that name, you've seen it.  It is constructed with 15 sliding tiles, each with a number from 1 to 15 on it, and all packed into a 4 by 4 frame with one tile missing.  Let's call the missing tile 'x'; the object of the puzzle is to arrange the tiles so that they are ordered as: ", "", "where the only legal operation is to exchange 'x' with one of the tiles with which it shares an edge.  As an example, the following sequence of moves solves a slightly scrambled puzzle: ", "", "The letters in the previous row indicate which neighbor of the 'x' tile is swapped with the 'x' tile at each step; legal values are 'r','l','u' and 'd', for right, left, up, and down, respectively. ", "", "Not all puzzles can be solved; in 1870, a man named Sam Loyd was famous for distributing an unsolvable version of the puzzle, and ", "frustrating many people.  In fact, all you have to do to make a regular puzzle into an unsolvable one is to swap two tiles (not counting the missing 'x' tile, of course). ", "", "In this problem, you will write a program for solving the less well-known 8-puzzle, composed of tiles on a three by three ", "arrangement. "], ["You will receive  a description of a configuration of the 8 puzzle.  The description is just a list of the tiles in their initial positions, with the rows listed from top to bottom, and the tiles listed from left to right within a row, where the tiles are represented by numbers 1 to 8, plus 'x'.  For example, this puzzle ", "", "is described by this list: "], ["You will print to standard output either the word ``unsolvable'', if the puzzle has no solution, or a string consisting entirely of the letters 'r', 'l', 'u' and 'd' that describes a series of moves that produce a solution.  The string should include no spaces and start at the beginning of the line. "], []], "link": "http://poj.org/problem?id=1077", "title": ["Eight"]}
{"content": [["Technology hasn't come quickly to Joe's Bowl-a-rama.  Minimum wage teens, and not those fancy machines, still reset the pins, and the grizzled veteran bowlers still mark up their own score sheets. Unfortunately for Joe Junior, who now runs the Bowl-a-rama, people  his age are a little shaky on the scoring, especially after the second beer, and are staying away in droves, bowling instead at the new CyberBowl 2000 down the street, which scores automatically.  Joe Junior figures that if he puts a cheap PC next to every lane, he can get a cheap, semi-automatic scoring system going.  His plan is for the PC's to run software that only requires a bowler to enter the  number of pins that remain standing after every throw -- and the software will keep score and tell the bowler when his game is over.  Joe  Junior would like to hire you to write the software. ", "Of course, since you may not know how to score a game of bowling either, Joe Junior has provided a description of the rules.  The basic game consists of ten frames.  In a frame, you get two chances to throw a ball down the alley and knock over as many pins as you can.   There are ten pins standing at the beginning of a frame, and none are replaced after getting knocked over on the first ball, so the most pins you can knock over in a frame is ten.  You get one point for each pin knocked over.  In addition, there are two bonuses you can  earn. If you knock over all ten pins on your first ball of the frame, you have scored a ``strike''; besides the ten points for the pins, your score in this frame is increased by the total number of pins knocked down with your next two balls.  Those next two balls are usually part of another frame (or two) and score points in that frame (or those frames) as well.  If you knock over all ten pins in a frame, but it takes you two balls to do it, you have scored a ``spare''; in addition to your ten points for pins knocked down, your score for the frame is increased by the number of pins you knock down on your next ball.  Of course, those pins also count as part of the next frame.  If you  score a spare (or strike) in the final (tenth) frame, you are entitled to one (or two) extra balls to determine your tenth frame bonus.  A perfect game scores 300 points, because each frame scores 30, 10 for knocking down 10 pins, and 20 for knocking down 20 pins with the next two balls combined. ", "", "Now, are you ready to sign on to write the software? ", ""], ["Input contains several complete or partial games.  A game is described by a single line with a single name, not to exceed 12 characters, and sequence of numbers, one for each ball thrown indicating the number of pins still standing after that throw,ended with -1. According  to the rules, there are from 11 to 21 throws in a game; no input line will show throws beyond the last throw of the game.  The number of games described in a file is not predetermined, so you'll have to detect the end of the input file. "], ["The standard output will contain, on successful completion of the program, two output lines for each input line.  The first output line contains the name of the bowler and a record of the throws in each frame.  This record shows, for each frame, the number of pins knocked down for each throw as a digit, with some exceptions.  For a throw that knocks down no pins, a dash (\verb$-$) is used instead of a `0'. An 'X' indicates a throw that knocks down all 10 pins on the first try.  A slash ('/') indicates a throw that finishes knocking down all the pins, after the previous throw left some standing.  Otherwise, a throw is shown as a digit (`1' to `9').  The number of throws in a frame may be one (a strike in frames 1 to 9), or three (a strike or spare in frame 10, followed by bonus balls), but is usually two.  Here are examples of throw markings for a variety of situations: ", "", "The second output line shows cumulative scores.  The cumulative score for the first frame is just the score for pins knocked down in frame, plus bonus points if they apply.  The cumulative score for any other frame is the cumulative score for the previous frame plus the score for pins knocked down in that frame, plus the bonus pins that may have been earned for a strike or spare in this frame.  It is possible to have markings on line one for a frame, but no score on line two, in the event that the frame is a strike or spare but the bonus points for the frame aren't yet known. ", "", "The format for this output requires that the bowler's name be left-justified.  The fields for each frame are three characters wide, with a space separating each field.  The fields begin in columns 14, 18, 22, and so on.  The record of the throws in the first line is left justified in its field.  The cumulative score is right justified in its field.  There is a blank line that separates the scores of one bowler from the scores of another. "], []], "link": "http://poj.org/problem?id=1076", "title": ["Bowl"]}
{"content": [["There is a fierce competition among high-school graduates in Iran to pass the centralized nationwide university entrance examination. Ministry of Science, Research, and Technology has set up the Education Evaluation Organization (EEO) to take care of all aspects of this big exam. This year the EEO managed to select some 150,000 students to enter universities out of 1.4 million high school graduates participated in a tough 4.5 hours multiple-choice exam. This annual event is usually preceded by a multi-billion Rial business offering preparatory courses to enthusiastic students. A few weeks after the big exam day, each participant receives a score sheet, and a list of Field-Department-University (FDU), displaying each field of study in the universities’ departments (e.g., the Software Engineering field of Computer Engineering department at Sharif University of Technology) along with their capacity for that year. The eligible participants (those who have scored enough to be allowed to declare their FDU priorities) fill out a priority indication form, and declare the FDUs they like to enter, in the order of their preference. The EEO processes the forms, and considering the total score, the participant’s FDU priority list, and some other selection rules, enters the accepted participants’ names in the list of each FDU, until all capacities are exhausted. Those who are not entered in a list are considered failed and may try again next year. Each accepted participant’s name may be entered in only one list.", "", "One of the interesting selection rules is to persuade participants to enter universities in the vicinity of their home towns. This is to help reduce the number of requests for staying in the university dormitories. ", "", "The selection process is so complex and so sensitive to many, that EEO has decided to hire the very best programmers in Iran to design a new selection algorithm and write a completely new program for what they have been doing for years. ACM programming contest is where these programmers can be found.", "", "There are N students S1 to SN , and M items F1 to FM , each representing one of the FDUs. There are also a number of geographic regions. For each participant, the total score, the geographic region where his/her high school diploma was awarded, and a priority list of his/her wanted FDUs are available. For each FDU, the geographic region where the corresponding university is located, and its capacity for that year is recorded.", "", "Write a program to compute the list of accepted students with the FDU they can enter to, given the above list of input data. Your program must abide with the following rules:", "", "1. (Local student selection rule) Suppose two students A and B have both selected F in their priority lists and F is in region R. Also suppose that score of A is greater than B's score. Then, if B is from region R (local) and A is from other regions (non-local), and B's score is greater than 70% of A's score, then B has priority over A to enter F. In all other cases A has priority over B to enter F.", "2. (Fairness rule) Students should be treated according to their priority list of FDUs. That is, an accepted student will be accepted to the first possible FDU he/she can enter.", "", "Note: We assume that scores are all different integer values."], ["The first line of the input contains a single integer t (1 "], ["Outputs for different test cases are separated by exactly one blank line. For each test case, you should write N lines, one for each of the N students. If student i has been accepted to FDU Fj, then ith line should contain j, and not accepted, if that student has not been accepted in any FDU of his/her interest. "], []], "link": "http://poj.org/problem?id=1075", "title": ["University Entrance Examination"]}
{"content": [["We are to predict some facts about the behavior of a single processor designed for running two programs in parallel. Programs are sequences of commands according to the following grammar:", "", "A "], ["The first line of the input contains a single integer t (1 "], ["For each test case, the output file should contain the expected final value of all variables in alphabetical order of variable names (digits precede letters in this order). Output for different test cases should be separated by exactly one blank line. Round the numbers in the output to 4 digits after decimal point. Do not omit trailing zeros after decimal point (e.g. write 1.2000 instead of 1.2)."], []], "link": "http://poj.org/problem?id=1074", "title": ["Parallel Expectations"]}
{"content": [["Willy the spider used to live in the chemistry laboratory of Dr. Petro. He used to wander about the lab pipes and sometimes inside empty ones. One night while he was in a pipe, he fell asleep. The next morning, Dr. Petro came to the lab. He didn't notice Willy while opening the valve to fill the pipes with hot water. Meanwhile, Stanley the gray mouse got what was going to happen. No time to lose! Stan ran hard to reach the valve before Willy gets drawn, but... Alas! He couldn't make it! ", "", "Poor Willy was boiled in hot water, but his memory is still in our hearts. Though Stan tried his best, we want to write a program, in the memory of Willy, to compute the time Stan had, to rescue Willy, assuming he started to run just when the doctor opened the valve.", "", "To simplify the problem, assume the pipes are all vertical cylinders with diameter 1 cm. Every pipe is open from the top and closed at the bottom. Some of the pipes are connected through special horizontal pipes named links. The links have very high flow capacity, but are so tiny that at any given time, the volume of water inside them is negligible. The water enters from top of one of the pipes with a constant rate of 0.25PI cm", "/sec and begins to fill the pipe from the bottom until the water reaches a link through which it flows horizontally and begins to fill the connected pipe. From elementary physics we know if two pipes are connected and the surface of the water is above the connecting link, the level of water in both pipes remains the same when we try to fill one of them. In this case the water fills each pipe with a rate equal to half of the rate of incoming water. As an example, consider the following configuration:", "", "First, the lower 2 centimeters of the left pipe is filled with water at full rate, then, the lower 3 centimeters of the right pipe is filled, and after that, the upper part of the two pipes are filled in parallel at half rate. The input to your program is a configuration of pipes and links, and a target level in one of the pipes (the heavy dotted line in the above figure). The program should report how long it takes for the level of water to reach the target level. For the above configuration, the output is 9 seconds.", "", "It is assumed that the water falls very rapidly, such that the time required for the water to fall can be neglected. The target level is always assumed to be a bit higher than the specified level for it. As an example, if we set the target point to level 4 in the left pipe in the figure above, the elapsed time for water to reach that target is assumed to be 5 (not 2), Also note that if the water reaches to the top of a pipe (say in level x), it won't pour out outside the pipe until empty spaces in connected pipes below level x are filled (if can be filled, i.e. the level of water reaches the connecting links). (Note that there may be some links at level x, to which water is entered). After all such spaces are filled; the water level would not go up further.", ""], ["To describe positions, we assume the coordinates are expressed as (x, y) and the origin lies in the top-left of all pipes and links. (Note that y coordinates are increased downwards). All coordinates are integer numbers between 0 and 100, inclusive.", "The first line of the input file contains a single integer t (1 ", "After input data describing the pipes, there is a line containing a single integer l, which is the number of links (0 ", "The last line for each test case contains two numbers. The first is the number of target pipe (starting from one, with the order appeared in test data). The second line is the desired y for the level of water in the target pipe (note that the specified level may be out of the pipe at all).", "", "You can assume the following about the input:", ".	The water enters into the first pipe.", ".	No link crosses a pipe.", ".	No two links have the same y coordinates.", ".	No two pipes have the same upper-left x coordinates.", ".	Both endpoints of each link are connected to pipes."], ["The output should contain exactly t lines with no blank lines in between, each corresponding to one test case. Each output line should contain the time required for the water to reach the target level in the target pipe (an integer number). If in a specific test case, the water never reaches the target level, the line should contain No Solution string in it."], []], "link": "http://poj.org/problem?id=1073", "title": ["The Willy Memorial Program"]}
{"content": [["The scientific committee members of the 26th ACM/ICPC, who design the contest problems, use the following encryption algorithm to communicate the problem drafts securely through the Internet. To encrypt a text, all occurrences of each letter is replaced with another letter (possibly itself), such that no two letters are encrypted to the same letter. Both original and encrypted texts consist of only upper-case letters and blanks. Blanks are not encrypted and are repeated exactly in the encrypted text. As an example, the string GSRH RH GSV URIHG HZNKOV is the encrypted form of THIS IS THE FIRST SAMPLE according to the encryption table (A -> Z, B -> Y, C -> X,..., Z -> A).", "", "A recipient of a problem draft has lost the encryption table, but he has a dictionary which includes all the possible words appearing in the problems. You are to help him set up a decryption table to enable him restore the original problem draft from the encrypted one. Given a dictionary of the original words used in the text, and the encrypted text, we want to find the right encryption table such that after decrypting the given encrypted text back to the original one, all words can be found in the dictionary. "], ["The first part of the input file is a dictionary of English words common to all test cases. The first line of the file is d (1 "], ["The output contains exactly t lines, each corresponding to a test case. Each line should contain a single string of 26 characters which is the encryption of the string ABCDEFGHIJKLMNOPQRSTUVWXYZ according to the encryption table used in the test case. Letters in the output string should be in uppercase. It is possible that some letters do not appear in the encrypted text at all. In this case, put a * mark in place of those letters not appearing in the decrypted version of the input text. If the test case has no solution, the output line should contain #No solution#. If there is more than one possible encryption table for a test case, the output line should contain #More than one solution#."], []], "link": "http://poj.org/problem?id=1072", "title": ["Puzzle Out"]}
{"content": [["Tom the robocat is presented in a Robotics Exhibition for an enthusiastic audience of youngsters, placed around an m * n field. Tom which is turned off initially is placed in some arbitrary point in the field by a volunteer from the audience. At time zero of the show, Tom is turned on by a remote control. Poor Tom is shown a holographic illusion of Jerry in a short distance such that a direct path between them is either vertical or horizontal. There may be obstacles in the field, but the illusion is always placed such that in the direct path between Tom and the illusion, there would be no obstacles. Tom tries to reach Jerry, but as soon as he gets there, the illusion changes its place and the chase goes on. Let's call each chase in one direction (up, down, left, and right), a chase trip. Each trip starts from where the last illusion was deemed and ends where the next illusion is deemed out. After a number of chase trips, the holographic illusion no more shows up, and poor Tom wonders what to do next. At this time, he is signaled that for sure, if he returns to where he started the chase, a real Jerry is sleeping and he can catch it.", "", "To simplify the problem, we can consider the field as a grid of squares. Some of the squares are occupied with obstacles. At any instant, Tom is in some unoccupied square of the grid and so is Jerry, such that the direct path between them is either horizontal or vertical. It's assumed that each time Tom is shown an illusion; he can reach it by moving only in one of the four directions, without bumping into an obstacle. Tom moves into an adjacent square of the grid by taking one and only one step.", "", "The problem is that Tom's logging mechanism is a bit fuzzy, thus the number of steps he has taken in each chase trip is logged as an interval of integers, e.g. 2 to 5 steps to the left. Now is your turn to send a program to Tom's memory to help him go back. But to ease your task in this contest, your program should only count all possible places that he might have started the chase from."], ["The first line of the input contains a single integer t (1 "], ["For each test case, there should be a single line, containing an integer indicating the number of cells that Tom might have started the chase from."], []], "link": "http://poj.org/problem?id=1071", "title": ["Illusive Chase"]}
{"content": [["The village's carpentry is located by a hill side. The carpenter's two little boys play with a piece of wood which looks like a deformed wheel with two identical convex polygon-shaped faces. One boy sets the wooden wheel on a slope at the hill top and let it roll down. The other boy is to quickly place himself at where he guesses the rolling wood would stop. Your program is to help him make the right guess.", "", "More formally, we consider the wooden wheel as a simple convex polygon and we approximate the hill by a sequence of connected line segments with decreasing slopes. The slope of the last segment in the sequence is assumed to be zero, and the slope of the first segment is assumed to be a positive number. Initially, the wheel is placed on the hill such that there is at least one point of contact between the wheel and segments. For example in the following figure, the wheel in its initial position is drawn in solid lines, while the final position is drawn in dashed lines.", "", "At any instant, the wheel rotates around one of its vertices, say P, if the y-coordinate of its center of gravity is decreased (note that this condition is necessary at any instant during the motion). It can be easily shown that at any instant, there is at most one such vertex. Rotation around P is stopped when the wheel touches a segment. The motion continues until no vertex can be found such that the wheel can rotate around it. At any instant, assume that changing the position of the center of gravity in any direction for at most 10-5 units, does not affect the stability of the wheel. Also assume that the friction between the wheel and the surface of the hill is so high that the wheel never slides on the surface."], ["The first line of the input contains a single integer t (1 "], ["For each test case, there should be a single line in the output , containing two numbers which are x and y coordinates of the wheel's center of gravity. Round the numbers in the output to 3 digits after decimal point."], []], "link": "http://poj.org/problem?id=1070", "title": ["Deformed Wheel"]}
{"content": [["Let S = s1 s2...s2n  be a well-formed string of parentheses. S can be encoded in two different ways:", "q	By an integer sequence P = p1 p2...pn where pi is the number of left parentheses before the ith right parenthesis in S (P-sequence).", "q	By an integer sequence W = w1 w2...wn where for each right parenthesis, say a in S, we associate an integer which is the number of right parentheses counting from the matched left parenthesis of a up to a. (W-sequence).", "", "Following is an example of the above encodings:", "", "Write a program to convert P-sequence of a well-formed string to the W-sequence of the same string."], ["The first line of the input contains a single integer t (1 "], ["The output file consists of exactly t lines corresponding to test cases. For each test case, the output line should contain n integers describing the W-sequence of the string corresponding to its given P-sequence."], []], "link": "http://poj.org/problem?id=1068", "title": ["Parencodings"]}
{"content": [["有两堆石子，数量任意，可以不同。游戏开始由两个人轮流取石子。游戏规定，每次有两种不同的取法，一是可以在任意的一堆中取走任意多的石子；二是可以在两堆中同时取走相同数量的石子。最后把石子全部取完者为胜者。现在给出初始的两堆石子的数目，如果轮到你先取，假设双方都采取最好的策略，问最后你是胜者还是败者。"], ["输入包含若干行，表示若干种石子的初始情况，其中每一行包含两个非负整数a和b，表示两堆石子的数目，a和b都不大于1,000,000,000。"], ["输出对应也有若干行，每行包含一个数字1或0，如果最后你是胜者，则为1，反之，则为0。"], []], "link": "http://poj.org/problem?id=1067", "title": ["取石子游戏"]}
{"content": [], "link": "http://poj.org/problem?id=1069", "title": ["The Bermuda Triangle"]}
{"content": [], "link": "http://poj.org/problem?id=1066", "title": ["Treasure Hunt"]}
{"content": [], "link": "http://poj.org/problem?id=1065", "title": ["Wooden Sticks"]}
{"content": [], "link": "http://poj.org/problem?id=1064", "title": ["Cable master"]}
{"content": [], "link": "http://poj.org/problem?id=1063", "title": ["Flip and Shift"]}
{"content": [], "link": "http://poj.org/problem?id=1062", "title": ["昂贵的聘礼"]}
{"content": [], "link": "http://poj.org/problem?id=1061", "title": ["青蛙的约会"]}
{"content": [], "link": "http://poj.org/problem?id=1060", "title": ["Modular multiplication of polynomials"]}
{"content": [], "link": "http://poj.org/problem?id=1059", "title": ["Chutes and Ladders"]}
{"content": [], "link": "http://poj.org/problem?id=1058", "title": ["The Gourmet Club"]}
{"content": [], "link": "http://poj.org/problem?id=1056", "title": ["IMMEDIATE DECODABILITY"]}
{"content": [], "link": "http://poj.org/problem?id=1055", "title": ["BULK MAILING"]}
{"content": [], "link": "http://poj.org/problem?id=1054", "title": ["The Troublesome Frog"]}
